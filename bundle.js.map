{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/less/dist/less.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","extractId","href","replace","addDataAttr","options","tag","opt","dataset","JSON","parse","_","browser","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__spreadArrays","il","arguments","k","a","j","jl","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","self","fileInfo","getIndex","setParent","nodes","set","node","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","push","isEmpty","join","output","accept","visitor","visit","eval","_operate","op","fround","precision","numPrecision","Number","toFixed","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","info","compare","type","i_1","numericCompare","Color","_super","rgb","originalForm","_this","match","map","parseInt","alpha","split","luma","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","clamp","round","concat","toHSL","h","toRGB","splitcolor","operate","other","toHex","max","min","toHSV","v","toARGB","x","toString","fromKeyword","keyword","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","STRICT_LEGACY","RewriteUrls","clone_1","fn","createCommonjsModule","_instanceof","obj","nativeMap","nativeSet","nativePromise","Map","Set","Promise","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","Infinity","_clone","child","proto","resolve","reject","then","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","getPrototypeOf","keyChild","valueChild","entryChild","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","re","flags","global","ignoreCase","multiline","clonePrototype","getLocation","inputStream","line","column","copyArray","arr","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","assign","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","utils","freeze","merge","anonymousFunc","LessError","fileContentMap","currentFilename","filename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","F","error","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","imports","createEmptySelectors","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","dumpLineNumbers","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","test","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","isPathLocalRelative","Eval","frames","inCalc","mathOn","enterCalc","calcStack","exitCalc","inParenthesis","parensStack","outOfParenthesis","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","functionRegistry","makeRegistry","base","_data","addMultiple","functions","keys","getLocalFunctions","inherit","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","strictImports","_lookups","_variables","_properties","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","splice","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","reduce","hash","vars","name_1","properties","name_2","decl","parseValue","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","isRuleset","prependRule","find","foundMixins","i_2","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","el","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","_i","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","MATH$2","Expression","noSpacing","returnValue","parens","parensInOp","doubleParen","throwAwayComments","functionCaller","isValid","item","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","pluginManager","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","urlArgs","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JavaScript","string","expression","evaluateJavaScript","JsEvalNode","evalContext","javascriptEnabled","jsify","toJS","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","logger","msg","_fireEvent","warn","debug","addListener","listener","_listeners","removeListener","logFunction","environment","externalEnvironment","fileManagers","requiredFunctions","propName","environmentFunc","getFileManager","currentDirectory","isSync","getFileManagers","fileManager","addFileManager","clearFileManagers","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","i_3","_visitArgs","visitDeeper","_hasIndexed","_noop","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","indexNodeTypes","ticker","typeIndex","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","exec","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","emitFrom","emitChunk","force","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","options_1","importOptions","mediaFeatures","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","atomicCondition","body","me","tryConditionFollowedByParenthesis","delim","simpleProperty","colorFunctions","boolean$1","trueValue","falseValue","clamp$1","hsla","origColor","hsl","number","rgba","size","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","tint","shade","colorBlend","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","getItemsFromNode","list","_SELF","values","range","step","from","to","stepValue","each","rs","iterator","valueName","keyName","indexName","MathHelper","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","pm","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","Functions","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","logger$1","lessRoot","environment$1","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","sourceMapOutput","SourceMapBuilder","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","sourceMapBuilder","ParseTree","toCSSOptions","file_1","files","rootFilename","parseTree","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","promise","loadFileCallback","loadedFile","resolvedFilename","newEnv","loadPlugin","loadFile","render","self_1","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","Environment","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText_1","webInfo","lastModified","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","className","innerHTML","style","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","options$1","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","factory","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","Uint8Array","encodingOrOffset","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","write","fromString","checked","buffer","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","swap16","swap32","swap64","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Less - Leaner CSS v3.11.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2020, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n  // Export a new default each time\n  var defaultOptions = (function () { return ({\n      /* Inline Javascript - @plugin still allowed */\n      javascriptEnabled: false,\n      /* Outputs a makefile import dependency list to stdout. */\n      depends: false,\n      /* (DEPRECATED) Compress using less built-in compression.\n    * This does an okay job but does not utilise all the tricks of\n    * dedicated css compression. */\n      compress: false,\n      /* Runs the less parser and just reports errors without any output. */\n      lint: false,\n      /* Sets available include paths.\n    * If the file in an @import rule does not exist at that exact location,\n    * less will look for it at the location(s) passed to this option.\n    * You might use this for instance to specify a path to a library which\n    * you want to be referenced simply and relatively in the less files. */\n      paths: [],\n      /* color output in the terminal */\n      color: true,\n      /* The strictImports controls whether the compiler will allow an @import inside of either\n    * @media blocks or (a later addition) other selector blocks.\n    * See: https://github.com/less/less.js/issues/656 */\n      strictImports: false,\n      /* Allow Imports from Insecure HTTPS Hosts */\n      insecure: false,\n      /* Allows you to add a path to every generated import and url in your css.\n    * This does not affect less import statements that are processed, just ones\n    * that are left in the output css. */\n      rootpath: '',\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory\n    * that references an image, exactly the same URL will be output in the css.\n    * This option allows you to re-write URL's in imported files so that the\n    * URL is always relative to the base imported file */\n      rewriteUrls: false,\n      /* How to process math\n    *   0 always           - eagerly try to solve all operations\n    *   1 parens-division  - require parens for division \"/\"\n    *   2 parens | strict  - require parens for all operations\n    *   3 strict-legacy    - legacy strict behavior (super-strict)\n    */\n      math: 0,\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\n      strictUnits: false,\n      /* Effectively the declaration is put at the top of your base Less file,\n    * meaning it can be used but it also can be overridden if this variable\n    * is defined in the file. */\n      globalVars: null,\n      /* As opposed to the global variable option, this puts the declaration at the\n    * end of your base file, meaning it will override anything defined in your Less file. */\n      modifyVars: null,\n      /* This option allows you to specify a argument to go on to every URL.  */\n      urlArgs: ''\n  }); });\n\n  function extractId(href) {\n      return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\n          .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\n          .replace(/^\\//, '') // Remove root /\n          .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\n          .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\n          .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\n  }\n  function addDataAttr(options, tag) {\n      for (var opt in tag.dataset) {\n          if (tag.dataset.hasOwnProperty(opt)) {\n              if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n                  options[opt] = tag.dataset[opt];\n              }\n              else {\n                  try {\n                      options[opt] = JSON.parse(tag.dataset[opt]);\n                  }\n                  catch (_) { }\n              }\n          }\n      }\n  }\n\n  var browser = {\n      createCSS: function (document, styles, sheet) {\n          // Strip the query-string\n          var href = sheet.href || '';\n          // If there is no title set, use the filename, minus the extension\n          var id = \"less:\" + (sheet.title || extractId(href));\n          // If this has already been inserted into the DOM, we may need to replace it\n          var oldStyleNode = document.getElementById(id);\n          var keepOldStyleNode = false;\n          // Create a new stylesheet node for insertion or (if necessary) replacement\n          var styleNode = document.createElement('style');\n          styleNode.setAttribute('type', 'text/css');\n          if (sheet.media) {\n              styleNode.setAttribute('media', sheet.media);\n          }\n          styleNode.id = id;\n          if (!styleNode.styleSheet) {\n              styleNode.appendChild(document.createTextNode(styles));\n              // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n              keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\n                  oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\n          }\n          var head = document.getElementsByTagName('head')[0];\n          // If there is no oldStyleNode, just append; otherwise, only append if we need\n          // to replace oldStyleNode with an updated stylesheet\n          if (oldStyleNode === null || keepOldStyleNode === false) {\n              var nextEl = sheet && sheet.nextSibling || null;\n              if (nextEl) {\n                  nextEl.parentNode.insertBefore(styleNode, nextEl);\n              }\n              else {\n                  head.appendChild(styleNode);\n              }\n          }\n          if (oldStyleNode && keepOldStyleNode === false) {\n              oldStyleNode.parentNode.removeChild(oldStyleNode);\n          }\n          // For IE.\n          // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n          // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n          if (styleNode.styleSheet) {\n              try {\n                  styleNode.styleSheet.cssText = styles;\n              }\n              catch (e) {\n                  throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n              }\n          }\n      },\n      currentScript: function (window) {\n          var document = window.document;\n          return document.currentScript || (function () {\n              var scripts = document.getElementsByTagName('script');\n              return scripts[scripts.length - 1];\n          })();\n      }\n  };\n\n  var addDefaultOptions = (function (window, options) {\n      // use options from the current script tag data attribues\n      addDataAttr(options, browser.currentScript(window));\n      if (options.isFileProtocol === undefined) {\n          options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n      }\n      // Load styles asynchronously (default: false)\n      //\n      // This is set to `false` by default, so that the body\n      // doesn't start loading before the stylesheets are parsed.\n      // Setting this to `true` can result in flickering.\n      //\n      options.async = options.async || false;\n      options.fileAsync = options.fileAsync || false;\n      // Interval between watch polls\n      options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n      options.env = options.env || (window.location.hostname == '127.0.0.1' ||\n          window.location.hostname == '0.0.0.0' ||\n          window.location.hostname == 'localhost' ||\n          (window.location.port &&\n              window.location.port.length > 0) ||\n          options.isFileProtocol ? 'development'\n          : 'production');\n      var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n      if (dumpLineNumbers) {\n          options.dumpLineNumbers = dumpLineNumbers[1];\n      }\n      if (options.useFileCache === undefined) {\n          options.useFileCache = true;\n      }\n      if (options.onReady === undefined) {\n          options.onReady = true;\n      }\n      if (options.relativeUrls) {\n          options.rewriteUrls = 'all';\n      }\n  });\n\n  /*! *****************************************************************************\n  Copyright (c) Microsoft Corporation. All rights reserved.\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n  this file except in compliance with the License. You may obtain a copy of the\n  License at http://www.apache.org/licenses/LICENSE-2.0\n\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n  MERCHANTABLITY OR NON-INFRINGEMENT.\n\n  See the Apache Version 2.0 License for specific language governing permissions\n  and limitations under the License.\n  ***************************************************************************** */\n  /* global Reflect, Promise */\n\n  var extendStatics = function(d, b) {\n      extendStatics = Object.setPrototypeOf ||\n          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n          function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n      return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n      extendStatics(d, b);\n      function __() { this.constructor = d; }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  function __spreadArrays() {\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\n          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n              r[k] = a[j];\n      return r;\n  }\n\n  var colors = {\n      'aliceblue': '#f0f8ff',\n      'antiquewhite': '#faebd7',\n      'aqua': '#00ffff',\n      'aquamarine': '#7fffd4',\n      'azure': '#f0ffff',\n      'beige': '#f5f5dc',\n      'bisque': '#ffe4c4',\n      'black': '#000000',\n      'blanchedalmond': '#ffebcd',\n      'blue': '#0000ff',\n      'blueviolet': '#8a2be2',\n      'brown': '#a52a2a',\n      'burlywood': '#deb887',\n      'cadetblue': '#5f9ea0',\n      'chartreuse': '#7fff00',\n      'chocolate': '#d2691e',\n      'coral': '#ff7f50',\n      'cornflowerblue': '#6495ed',\n      'cornsilk': '#fff8dc',\n      'crimson': '#dc143c',\n      'cyan': '#00ffff',\n      'darkblue': '#00008b',\n      'darkcyan': '#008b8b',\n      'darkgoldenrod': '#b8860b',\n      'darkgray': '#a9a9a9',\n      'darkgrey': '#a9a9a9',\n      'darkgreen': '#006400',\n      'darkkhaki': '#bdb76b',\n      'darkmagenta': '#8b008b',\n      'darkolivegreen': '#556b2f',\n      'darkorange': '#ff8c00',\n      'darkorchid': '#9932cc',\n      'darkred': '#8b0000',\n      'darksalmon': '#e9967a',\n      'darkseagreen': '#8fbc8f',\n      'darkslateblue': '#483d8b',\n      'darkslategray': '#2f4f4f',\n      'darkslategrey': '#2f4f4f',\n      'darkturquoise': '#00ced1',\n      'darkviolet': '#9400d3',\n      'deeppink': '#ff1493',\n      'deepskyblue': '#00bfff',\n      'dimgray': '#696969',\n      'dimgrey': '#696969',\n      'dodgerblue': '#1e90ff',\n      'firebrick': '#b22222',\n      'floralwhite': '#fffaf0',\n      'forestgreen': '#228b22',\n      'fuchsia': '#ff00ff',\n      'gainsboro': '#dcdcdc',\n      'ghostwhite': '#f8f8ff',\n      'gold': '#ffd700',\n      'goldenrod': '#daa520',\n      'gray': '#808080',\n      'grey': '#808080',\n      'green': '#008000',\n      'greenyellow': '#adff2f',\n      'honeydew': '#f0fff0',\n      'hotpink': '#ff69b4',\n      'indianred': '#cd5c5c',\n      'indigo': '#4b0082',\n      'ivory': '#fffff0',\n      'khaki': '#f0e68c',\n      'lavender': '#e6e6fa',\n      'lavenderblush': '#fff0f5',\n      'lawngreen': '#7cfc00',\n      'lemonchiffon': '#fffacd',\n      'lightblue': '#add8e6',\n      'lightcoral': '#f08080',\n      'lightcyan': '#e0ffff',\n      'lightgoldenrodyellow': '#fafad2',\n      'lightgray': '#d3d3d3',\n      'lightgrey': '#d3d3d3',\n      'lightgreen': '#90ee90',\n      'lightpink': '#ffb6c1',\n      'lightsalmon': '#ffa07a',\n      'lightseagreen': '#20b2aa',\n      'lightskyblue': '#87cefa',\n      'lightslategray': '#778899',\n      'lightslategrey': '#778899',\n      'lightsteelblue': '#b0c4de',\n      'lightyellow': '#ffffe0',\n      'lime': '#00ff00',\n      'limegreen': '#32cd32',\n      'linen': '#faf0e6',\n      'magenta': '#ff00ff',\n      'maroon': '#800000',\n      'mediumaquamarine': '#66cdaa',\n      'mediumblue': '#0000cd',\n      'mediumorchid': '#ba55d3',\n      'mediumpurple': '#9370d8',\n      'mediumseagreen': '#3cb371',\n      'mediumslateblue': '#7b68ee',\n      'mediumspringgreen': '#00fa9a',\n      'mediumturquoise': '#48d1cc',\n      'mediumvioletred': '#c71585',\n      'midnightblue': '#191970',\n      'mintcream': '#f5fffa',\n      'mistyrose': '#ffe4e1',\n      'moccasin': '#ffe4b5',\n      'navajowhite': '#ffdead',\n      'navy': '#000080',\n      'oldlace': '#fdf5e6',\n      'olive': '#808000',\n      'olivedrab': '#6b8e23',\n      'orange': '#ffa500',\n      'orangered': '#ff4500',\n      'orchid': '#da70d6',\n      'palegoldenrod': '#eee8aa',\n      'palegreen': '#98fb98',\n      'paleturquoise': '#afeeee',\n      'palevioletred': '#d87093',\n      'papayawhip': '#ffefd5',\n      'peachpuff': '#ffdab9',\n      'peru': '#cd853f',\n      'pink': '#ffc0cb',\n      'plum': '#dda0dd',\n      'powderblue': '#b0e0e6',\n      'purple': '#800080',\n      'rebeccapurple': '#663399',\n      'red': '#ff0000',\n      'rosybrown': '#bc8f8f',\n      'royalblue': '#4169e1',\n      'saddlebrown': '#8b4513',\n      'salmon': '#fa8072',\n      'sandybrown': '#f4a460',\n      'seagreen': '#2e8b57',\n      'seashell': '#fff5ee',\n      'sienna': '#a0522d',\n      'silver': '#c0c0c0',\n      'skyblue': '#87ceeb',\n      'slateblue': '#6a5acd',\n      'slategray': '#708090',\n      'slategrey': '#708090',\n      'snow': '#fffafa',\n      'springgreen': '#00ff7f',\n      'steelblue': '#4682b4',\n      'tan': '#d2b48c',\n      'teal': '#008080',\n      'thistle': '#d8bfd8',\n      'tomato': '#ff6347',\n      'turquoise': '#40e0d0',\n      'violet': '#ee82ee',\n      'wheat': '#f5deb3',\n      'white': '#ffffff',\n      'whitesmoke': '#f5f5f5',\n      'yellow': '#ffff00',\n      'yellowgreen': '#9acd32'\n  };\n\n  var unitConversions = {\n      length: {\n          'm': 1,\n          'cm': 0.01,\n          'mm': 0.001,\n          'in': 0.0254,\n          'px': 0.0254 / 96,\n          'pt': 0.0254 / 72,\n          'pc': 0.0254 / 72 * 12\n      },\n      duration: {\n          's': 1,\n          'ms': 0.001\n      },\n      angle: {\n          'rad': 1 / (2 * Math.PI),\n          'deg': 1 / 360,\n          'grad': 1 / 400,\n          'turn': 1\n      }\n  };\n\n  var data = { colors: colors, unitConversions: unitConversions };\n\n  var Node = /** @class */ (function () {\n      function Node() {\n          this.parent = null;\n          this.visibilityBlocks = undefined;\n          this.nodeVisible = undefined;\n          this.rootNode = null;\n          this.parsed = null;\n          var self = this;\n          Object.defineProperty(this, 'currentFileInfo', {\n              get: function () { return self.fileInfo(); }\n          });\n          Object.defineProperty(this, 'index', {\n              get: function () { return self.getIndex(); }\n          });\n      }\n      Node.prototype.setParent = function (nodes, parent) {\n          function set(node) {\n              if (node && node instanceof Node) {\n                  node.parent = parent;\n              }\n          }\n          if (Array.isArray(nodes)) {\n              nodes.forEach(set);\n          }\n          else {\n              set(nodes);\n          }\n      };\n      Node.prototype.getIndex = function () {\n          return this._index || (this.parent && this.parent.getIndex()) || 0;\n      };\n      Node.prototype.fileInfo = function () {\n          return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n      };\n      Node.prototype.isRulesetLike = function () {\n          return false;\n      };\n      Node.prototype.toCSS = function (context) {\n          var strs = [];\n          this.genCSS(context, {\n              add: function (chunk, fileInfo, index) {\n                  strs.push(chunk);\n              },\n              isEmpty: function () {\n                  return strs.length === 0;\n              }\n          });\n          return strs.join('');\n      };\n      Node.prototype.genCSS = function (context, output) {\n          output.add(this.value);\n      };\n      Node.prototype.accept = function (visitor) {\n          this.value = visitor.visit(this.value);\n      };\n      Node.prototype.eval = function () { return this; };\n      Node.prototype._operate = function (context, op, a, b) {\n          switch (op) {\n              case '+': return a + b;\n              case '-': return a - b;\n              case '*': return a * b;\n              case '/': return a / b;\n          }\n      };\n      Node.prototype.fround = function (context, value) {\n          var precision = context && context.numPrecision;\n          // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n          return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n      };\n      // Returns true if this node represents root of ast imported by reference\n      Node.prototype.blocksVisibility = function () {\n          if (this.visibilityBlocks == null) {\n              this.visibilityBlocks = 0;\n          }\n          return this.visibilityBlocks !== 0;\n      };\n      Node.prototype.addVisibilityBlock = function () {\n          if (this.visibilityBlocks == null) {\n              this.visibilityBlocks = 0;\n          }\n          this.visibilityBlocks = this.visibilityBlocks + 1;\n      };\n      Node.prototype.removeVisibilityBlock = function () {\n          if (this.visibilityBlocks == null) {\n              this.visibilityBlocks = 0;\n          }\n          this.visibilityBlocks = this.visibilityBlocks - 1;\n      };\n      // Turns on node visibility - if called node will be shown in output regardless\n      // of whether it comes from import by reference or not\n      Node.prototype.ensureVisibility = function () {\n          this.nodeVisible = true;\n      };\n      // Turns off node visibility - if called node will NOT be shown in output regardless\n      // of whether it comes from import by reference or not\n      Node.prototype.ensureInvisibility = function () {\n          this.nodeVisible = false;\n      };\n      // return values:\n      // false - the node must not be visible\n      // true - the node must be visible\n      // undefined or null - the node has the same visibility as its parent\n      Node.prototype.isVisible = function () {\n          return this.nodeVisible;\n      };\n      Node.prototype.visibilityInfo = function () {\n          return {\n              visibilityBlocks: this.visibilityBlocks,\n              nodeVisible: this.nodeVisible\n          };\n      };\n      Node.prototype.copyVisibilityInfo = function (info) {\n          if (!info) {\n              return;\n          }\n          this.visibilityBlocks = info.visibilityBlocks;\n          this.nodeVisible = info.nodeVisible;\n      };\n      return Node;\n  }());\n  Node.compare = function (a, b) {\n      /* returns:\n       -1: a < b\n       0: a = b\n       1: a > b\n       and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n      if ((a.compare) &&\n          // for \"symmetric results\" force toCSS-based comparison\n          // of Quoted or Anonymous if either value is one of those\n          !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n          return a.compare(b);\n      }\n      else if (b.compare) {\n          return -b.compare(a);\n      }\n      else if (a.type !== b.type) {\n          return undefined;\n      }\n      a = a.value;\n      b = b.value;\n      if (!Array.isArray(a)) {\n          return a === b ? 0 : undefined;\n      }\n      if (a.length !== b.length) {\n          return undefined;\n      }\n      for (var i_1 = 0; i_1 < a.length; i_1++) {\n          if (Node.compare(a[i_1], b[i_1]) !== 0) {\n              return undefined;\n          }\n      }\n      return 0;\n  };\n  Node.numericCompare = function (a, b) { return a < b ? -1\n      : a === b ? 0\n          : a > b ? 1 : undefined; };\n\n  //\n  // RGB Colors - #ff0014, #eee\n  //\n  var Color = /** @class */ (function (_super) {\n      __extends(Color, _super);\n      function Color(rgb, a, originalForm) {\n          var _this = _super.call(this) || this;\n          var self = _this;\n          //\n          // The end goal here, is to parse the arguments\n          // into an integer triplet, such as `128, 255, 0`\n          //\n          // This facilitates operations and conversions.\n          //\n          if (Array.isArray(rgb)) {\n              _this.rgb = rgb;\n          }\n          else if (rgb.length >= 6) {\n              _this.rgb = [];\n              rgb.match(/.{2}/g).map(function (c, i) {\n                  if (i < 3) {\n                      self.rgb.push(parseInt(c, 16));\n                  }\n                  else {\n                      self.alpha = (parseInt(c, 16)) / 255;\n                  }\n              });\n          }\n          else {\n              _this.rgb = [];\n              rgb.split('').map(function (c, i) {\n                  if (i < 3) {\n                      self.rgb.push(parseInt(c + c, 16));\n                  }\n                  else {\n                      self.alpha = (parseInt(c + c, 16)) / 255;\n                  }\n              });\n          }\n          _this.alpha = _this.alpha || (typeof a === 'number' ? a : 1);\n          if (typeof originalForm !== 'undefined') {\n              _this.value = originalForm;\n          }\n          return _this;\n      }\n      Color.prototype.luma = function () {\n          var r = this.rgb[0] / 255;\n          var g = this.rgb[1] / 255;\n          var b = this.rgb[2] / 255;\n          r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n          g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n          b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n          return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      };\n      Color.prototype.genCSS = function (context, output) {\n          output.add(this.toCSS(context));\n      };\n      Color.prototype.toCSS = function (context, doNotCompress) {\n          var compress = context && context.compress && !doNotCompress;\n          var color;\n          var alpha;\n          var colorFunction;\n          var args = [];\n          // `value` is set if this color was originally\n          // converted from a named color string so we need\n          // to respect this and try to output named color too.\n          alpha = this.fround(context, this.alpha);\n          if (this.value) {\n              if (this.value.indexOf('rgb') === 0) {\n                  if (alpha < 1) {\n                      colorFunction = 'rgba';\n                  }\n              }\n              else if (this.value.indexOf('hsl') === 0) {\n                  if (alpha < 1) {\n                      colorFunction = 'hsla';\n                  }\n                  else {\n                      colorFunction = 'hsl';\n                  }\n              }\n              else {\n                  return this.value;\n              }\n          }\n          else {\n              if (alpha < 1) {\n                  colorFunction = 'rgba';\n              }\n          }\n          switch (colorFunction) {\n              case 'rgba':\n                  args = this.rgb.map(function (c) { return clamp(Math.round(c), 255); }).concat(clamp(alpha, 1));\n                  break;\n              case 'hsla':\n                  args.push(clamp(alpha, 1));\n              case 'hsl':\n                  color = this.toHSL();\n                  args = [\n                      this.fround(context, color.h),\n                      this.fround(context, color.s * 100) + \"%\",\n                      this.fround(context, color.l * 100) + \"%\"\n                  ].concat(args);\n          }\n          if (colorFunction) {\n              // Values are capped between `0` and `255`, rounded and zero-padded.\n              return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\n          }\n          color = this.toRGB();\n          if (compress) {\n              var splitcolor = color.split('');\n              // Convert color to short format\n              if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n                  color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\n              }\n          }\n          return color;\n      };\n      //\n      // Operations have to be done per-channel, if not,\n      // channels will spill onto each other. Once we have\n      // our result, in the form of an integer triplet,\n      // we create a new Color node to hold the result.\n      //\n      Color.prototype.operate = function (context, op, other) {\n          var rgb = new Array(3);\n          var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n          for (var c = 0; c < 3; c++) {\n              rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n          }\n          return new Color(rgb, alpha);\n      };\n      Color.prototype.toRGB = function () {\n          return toHex(this.rgb);\n      };\n      Color.prototype.toHSL = function () {\n          var r = this.rgb[0] / 255;\n          var g = this.rgb[1] / 255;\n          var b = this.rgb[2] / 255;\n          var a = this.alpha;\n          var max = Math.max(r, g, b);\n          var min = Math.min(r, g, b);\n          var h;\n          var s;\n          var l = (max + min) / 2;\n          var d = max - min;\n          if (max === min) {\n              h = s = 0;\n          }\n          else {\n              s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n              switch (max) {\n                  case r:\n                      h = (g - b) / d + (g < b ? 6 : 0);\n                      break;\n                  case g:\n                      h = (b - r) / d + 2;\n                      break;\n                  case b:\n                      h = (r - g) / d + 4;\n                      break;\n              }\n              h /= 6;\n          }\n          return { h: h * 360, s: s, l: l, a: a };\n      };\n      // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n      Color.prototype.toHSV = function () {\n          var r = this.rgb[0] / 255;\n          var g = this.rgb[1] / 255;\n          var b = this.rgb[2] / 255;\n          var a = this.alpha;\n          var max = Math.max(r, g, b);\n          var min = Math.min(r, g, b);\n          var h;\n          var s;\n          var v = max;\n          var d = max - min;\n          if (max === 0) {\n              s = 0;\n          }\n          else {\n              s = d / max;\n          }\n          if (max === min) {\n              h = 0;\n          }\n          else {\n              switch (max) {\n                  case r:\n                      h = (g - b) / d + (g < b ? 6 : 0);\n                      break;\n                  case g:\n                      h = (b - r) / d + 2;\n                      break;\n                  case b:\n                      h = (r - g) / d + 4;\n                      break;\n              }\n              h /= 6;\n          }\n          return { h: h * 360, s: s, v: v, a: a };\n      };\n      Color.prototype.toARGB = function () {\n          return toHex([this.alpha * 255].concat(this.rgb));\n      };\n      Color.prototype.compare = function (x) {\n          return (x.rgb &&\n              x.rgb[0] === this.rgb[0] &&\n              x.rgb[1] === this.rgb[1] &&\n              x.rgb[2] === this.rgb[2] &&\n              x.alpha === this.alpha) ? 0 : undefined;\n      };\n      return Color;\n  }(Node));\n  Color.prototype.type = 'Color';\n  function clamp(v, max) {\n      return Math.min(Math.max(v, 0), max);\n  }\n  function toHex(v) {\n      return \"#\" + v.map(function (c) {\n          c = clamp(Math.round(c), 255);\n          return (c < 16 ? '0' : '') + c.toString(16);\n      }).join('');\n  }\n  Color.fromKeyword = function (keyword) {\n      var c;\n      var key = keyword.toLowerCase();\n      if (colors.hasOwnProperty(key)) {\n          c = new Color(colors[key].slice(1));\n      }\n      else if (key === 'transparent') {\n          c = new Color([0, 0, 0], 0);\n      }\n      if (c) {\n          c.value = keyword;\n          return c;\n      }\n  };\n\n  var Paren = /** @class */ (function (_super) {\n      __extends(Paren, _super);\n      function Paren(node) {\n          var _this = _super.call(this) || this;\n          _this.value = node;\n          return _this;\n      }\n      Paren.prototype.genCSS = function (context, output) {\n          output.add('(');\n          this.value.genCSS(context, output);\n          output.add(')');\n      };\n      Paren.prototype.eval = function (context) {\n          return new Paren(this.value.eval(context));\n      };\n      return Paren;\n  }(Node));\n  Paren.prototype.type = 'Paren';\n\n  var _noSpaceCombinators = {\n      '': true,\n      ' ': true,\n      '|': true\n  };\n  var Combinator = /** @class */ (function (_super) {\n      __extends(Combinator, _super);\n      function Combinator(value) {\n          var _this = _super.call(this) || this;\n          if (value === ' ') {\n              _this.value = ' ';\n              _this.emptyOrWhitespace = true;\n          }\n          else {\n              _this.value = value ? value.trim() : '';\n              _this.emptyOrWhitespace = _this.value === '';\n          }\n          return _this;\n      }\n      Combinator.prototype.genCSS = function (context, output) {\n          var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n          output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n      };\n      return Combinator;\n  }(Node));\n  Combinator.prototype.type = 'Combinator';\n\n  var Element = /** @class */ (function (_super) {\n      __extends(Element, _super);\n      function Element(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.combinator = combinator instanceof Combinator ?\n              combinator : new Combinator(combinator);\n          if (typeof value === 'string') {\n              _this.value = value.trim();\n          }\n          else if (value) {\n              _this.value = value;\n          }\n          else {\n              _this.value = '';\n          }\n          _this.isVariable = isVariable;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.setParent(_this.combinator, _this);\n          return _this;\n      }\n      Element.prototype.accept = function (visitor) {\n          var value = this.value;\n          this.combinator = visitor.visit(this.combinator);\n          if (typeof value === 'object') {\n              this.value = visitor.visit(value);\n          }\n      };\n      Element.prototype.eval = function (context) {\n          return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      };\n      Element.prototype.clone = function () {\n          return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      };\n      Element.prototype.genCSS = function (context, output) {\n          output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n      };\n      Element.prototype.toCSS = function (context) {\n          if (context === void 0) { context = {}; }\n          var value = this.value;\n          var firstSelector = context.firstSelector;\n          if (value instanceof Paren) {\n              // selector in parens should not be affected by outer selector\n              // flags (breaks only interpolated selectors - see #1973)\n              context.firstSelector = true;\n          }\n          value = value.toCSS ? value.toCSS(context) : value;\n          context.firstSelector = firstSelector;\n          if (value === '' && this.combinator.value.charAt(0) === '&') {\n              return '';\n          }\n          else {\n              return this.combinator.toCSS(context) + value;\n          }\n      };\n      return Element;\n  }(Node));\n  Element.prototype.type = 'Element';\n\n  var Math$1 = {\n      ALWAYS: 0,\n      PARENS_DIVISION: 1,\n      PARENS: 2,\n      STRICT_LEGACY: 3\n  };\n  var RewriteUrls = {\n      OFF: 0,\n      LOCAL: 1,\n      ALL: 2\n  };\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var clone_1 = createCommonjsModule(function (module) {\n      var clone = (function () {\n          function _instanceof(obj, type) {\n              return type != null && obj instanceof type;\n          }\n          var nativeMap;\n          try {\n              nativeMap = Map;\n          }\n          catch (_) {\n              // maybe a reference error because no `Map`. Give it a dummy value that no\n              // value will ever be an instanceof.\n              nativeMap = function () { };\n          }\n          var nativeSet;\n          try {\n              nativeSet = Set;\n          }\n          catch (_) {\n              nativeSet = function () { };\n          }\n          var nativePromise;\n          try {\n              nativePromise = Promise;\n          }\n          catch (_) {\n              nativePromise = function () { };\n          }\n          /**\n           * Clones (copies) an Object using deep copying.\n           *\n           * This function supports circular references by default, but if you are certain\n           * there are no circular references in your object, you can save some CPU time\n           * by calling clone(obj, false).\n           *\n           * Caution: if `circular` is false and `parent` contains circular references,\n           * your program may enter an infinite loop and crash.\n           *\n           * @param `parent` - the object to be cloned\n           * @param `circular` - set to true if the object to be cloned may contain\n           *    circular references. (optional - true by default)\n           * @param `depth` - set to a number if the object is only to be cloned to\n           *    a particular depth. (optional - defaults to Infinity)\n           * @param `prototype` - sets the prototype to be used when cloning an object.\n           *    (optional - defaults to parent prototype).\n           * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n           *    should be cloned as well. Non-enumerable properties on the prototype\n           *    chain will be ignored. (optional - false by default)\n          */\n          function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n              if (typeof circular === 'object') {\n                  depth = circular.depth;\n                  prototype = circular.prototype;\n                  includeNonEnumerable = circular.includeNonEnumerable;\n                  circular = circular.circular;\n              }\n              // maintain two arrays for circular references, where corresponding parents\n              // and children have the same index\n              var allParents = [];\n              var allChildren = [];\n              var useBuffer = typeof Buffer != 'undefined';\n              if (typeof circular == 'undefined')\n                  circular = true;\n              if (typeof depth == 'undefined')\n                  depth = Infinity;\n              // recurse this function so we don't reset allParents and allChildren\n              function _clone(parent, depth) {\n                  // cloning null always returns null\n                  if (parent === null)\n                      return null;\n                  if (depth === 0)\n                      return parent;\n                  var child;\n                  var proto;\n                  if (typeof parent != 'object') {\n                      return parent;\n                  }\n                  if (_instanceof(parent, nativeMap)) {\n                      child = new nativeMap();\n                  }\n                  else if (_instanceof(parent, nativeSet)) {\n                      child = new nativeSet();\n                  }\n                  else if (_instanceof(parent, nativePromise)) {\n                      child = new nativePromise(function (resolve, reject) {\n                          parent.then(function (value) {\n                              resolve(_clone(value, depth - 1));\n                          }, function (err) {\n                              reject(_clone(err, depth - 1));\n                          });\n                      });\n                  }\n                  else if (clone.__isArray(parent)) {\n                      child = [];\n                  }\n                  else if (clone.__isRegExp(parent)) {\n                      child = new RegExp(parent.source, __getRegExpFlags(parent));\n                      if (parent.lastIndex)\n                          child.lastIndex = parent.lastIndex;\n                  }\n                  else if (clone.__isDate(parent)) {\n                      child = new Date(parent.getTime());\n                  }\n                  else if (useBuffer && Buffer.isBuffer(parent)) {\n                      if (Buffer.allocUnsafe) {\n                          // Node.js >= 4.5.0\n                          child = Buffer.allocUnsafe(parent.length);\n                      }\n                      else {\n                          // Older Node.js versions\n                          child = new Buffer(parent.length);\n                      }\n                      parent.copy(child);\n                      return child;\n                  }\n                  else if (_instanceof(parent, Error)) {\n                      child = Object.create(parent);\n                  }\n                  else {\n                      if (typeof prototype == 'undefined') {\n                          proto = Object.getPrototypeOf(parent);\n                          child = Object.create(proto);\n                      }\n                      else {\n                          child = Object.create(prototype);\n                          proto = prototype;\n                      }\n                  }\n                  if (circular) {\n                      var index = allParents.indexOf(parent);\n                      if (index != -1) {\n                          return allChildren[index];\n                      }\n                      allParents.push(parent);\n                      allChildren.push(child);\n                  }\n                  if (_instanceof(parent, nativeMap)) {\n                      parent.forEach(function (value, key) {\n                          var keyChild = _clone(key, depth - 1);\n                          var valueChild = _clone(value, depth - 1);\n                          child.set(keyChild, valueChild);\n                      });\n                  }\n                  if (_instanceof(parent, nativeSet)) {\n                      parent.forEach(function (value) {\n                          var entryChild = _clone(value, depth - 1);\n                          child.add(entryChild);\n                      });\n                  }\n                  for (var i in parent) {\n                      var attrs;\n                      if (proto) {\n                          attrs = Object.getOwnPropertyDescriptor(proto, i);\n                      }\n                      if (attrs && attrs.set == null) {\n                          continue;\n                      }\n                      child[i] = _clone(parent[i], depth - 1);\n                  }\n                  if (Object.getOwnPropertySymbols) {\n                      var symbols = Object.getOwnPropertySymbols(parent);\n                      for (var i = 0; i < symbols.length; i++) {\n                          // Don't need to worry about cloning a symbol because it is a primitive,\n                          // like a number or string.\n                          var symbol = symbols[i];\n                          var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n                          if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n                              continue;\n                          }\n                          child[symbol] = _clone(parent[symbol], depth - 1);\n                          if (!descriptor.enumerable) {\n                              Object.defineProperty(child, symbol, {\n                                  enumerable: false\n                              });\n                          }\n                      }\n                  }\n                  if (includeNonEnumerable) {\n                      var allPropertyNames = Object.getOwnPropertyNames(parent);\n                      for (var i = 0; i < allPropertyNames.length; i++) {\n                          var propertyName = allPropertyNames[i];\n                          var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n                          if (descriptor && descriptor.enumerable) {\n                              continue;\n                          }\n                          child[propertyName] = _clone(parent[propertyName], depth - 1);\n                          Object.defineProperty(child, propertyName, {\n                              enumerable: false\n                          });\n                      }\n                  }\n                  return child;\n              }\n              return _clone(parent, depth);\n          }\n          /**\n           * Simple flat clone using prototype, accepts only objects, usefull for property\n           * override on FLAT configuration object (no nested props).\n           *\n           * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n           * works.\n           */\n          clone.clonePrototype = function clonePrototype(parent) {\n              if (parent === null)\n                  return null;\n              var c = function () { };\n              c.prototype = parent;\n              return new c();\n          };\n          // private utility functions\n          function __objToStr(o) {\n              return Object.prototype.toString.call(o);\n          }\n          clone.__objToStr = __objToStr;\n          function __isDate(o) {\n              return typeof o === 'object' && __objToStr(o) === '[object Date]';\n          }\n          clone.__isDate = __isDate;\n          function __isArray(o) {\n              return typeof o === 'object' && __objToStr(o) === '[object Array]';\n          }\n          clone.__isArray = __isArray;\n          function __isRegExp(o) {\n              return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n          }\n          clone.__isRegExp = __isRegExp;\n          function __getRegExpFlags(re) {\n              var flags = '';\n              if (re.global)\n                  flags += 'g';\n              if (re.ignoreCase)\n                  flags += 'i';\n              if (re.multiline)\n                  flags += 'm';\n              return flags;\n          }\n          clone.__getRegExpFlags = __getRegExpFlags;\n          return clone;\n      })();\n      if ( module.exports) {\n          module.exports = clone;\n      }\n  });\n\n  /* jshint proto: true */\n  function getLocation(index, inputStream) {\n      var n = index + 1;\n      var line = null;\n      var column = -1;\n      while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n          column++;\n      }\n      if (typeof index === 'number') {\n          line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n      }\n      return {\n          line: line,\n          column: column\n      };\n  }\n  function copyArray(arr) {\n      var i;\n      var length = arr.length;\n      var copy = new Array(length);\n      for (i = 0; i < length; i++) {\n          copy[i] = arr[i];\n      }\n      return copy;\n  }\n  function clone(obj) {\n      var cloned = {};\n      for (var prop in obj) {\n          if (obj.hasOwnProperty(prop)) {\n              cloned[prop] = obj[prop];\n          }\n      }\n      return cloned;\n  }\n  function defaults(obj1, obj2) {\n      var newObj = obj2 || {};\n      if (!obj2._defaults) {\n          newObj = {};\n          var defaults_1 = clone_1(obj1);\n          newObj._defaults = defaults_1;\n          var cloned = obj2 ? clone_1(obj2) : {};\n          Object.assign(newObj, defaults_1, cloned);\n      }\n      return newObj;\n  }\n  function copyOptions(obj1, obj2) {\n      if (obj2 && obj2._defaults) {\n          return obj2;\n      }\n      var opts = defaults(obj1, obj2);\n      if (opts.strictMath) {\n          opts.math = Math$1.STRICT_LEGACY;\n      }\n      // Back compat with changed relativeUrls option\n      if (opts.relativeUrls) {\n          opts.rewriteUrls = RewriteUrls.ALL;\n      }\n      if (typeof opts.math === 'string') {\n          switch (opts.math.toLowerCase()) {\n              case 'always':\n                  opts.math = Math$1.ALWAYS;\n                  break;\n              case 'parens-division':\n                  opts.math = Math$1.PARENS_DIVISION;\n                  break;\n              case 'strict':\n              case 'parens':\n                  opts.math = Math$1.PARENS;\n                  break;\n              case 'strict-legacy':\n                  opts.math = Math$1.STRICT_LEGACY;\n          }\n      }\n      if (typeof opts.rewriteUrls === 'string') {\n          switch (opts.rewriteUrls.toLowerCase()) {\n              case 'off':\n                  opts.rewriteUrls = RewriteUrls.OFF;\n                  break;\n              case 'local':\n                  opts.rewriteUrls = RewriteUrls.LOCAL;\n                  break;\n              case 'all':\n                  opts.rewriteUrls = RewriteUrls.ALL;\n                  break;\n          }\n      }\n      return opts;\n  }\n  function merge(obj1, obj2) {\n      for (var prop in obj2) {\n          if (obj2.hasOwnProperty(prop)) {\n              obj1[prop] = obj2[prop];\n          }\n      }\n      return obj1;\n  }\n  function flattenArray(arr, result) {\n      if (result === void 0) { result = []; }\n      for (var i_1 = 0, length_1 = arr.length; i_1 < length_1; i_1++) {\n          var value = arr[i_1];\n          if (Array.isArray(value)) {\n              flattenArray(value, result);\n          }\n          else {\n              if (value !== undefined) {\n                  result.push(value);\n              }\n          }\n      }\n      return result;\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n\n  var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\n  /**\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n   * Besides standard .message it keeps some additional data like a path to the file where the error\n   * occurred along with line and column numbers.\n   *\n   * @class\n   * @extends Error\n   * @type {module.LessError}\n   *\n   * @prop {string} type\n   * @prop {string} filename\n   * @prop {number} index\n   * @prop {number} line\n   * @prop {number} column\n   * @prop {number} callLine\n   * @prop {number} callExtract\n   * @prop {string[]} extract\n   *\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n   * @param {string} [currentFilename]\n   */\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\n      Error.call(this);\n      var filename = e.filename || currentFilename;\n      this.message = e.message;\n      this.stack = e.stack;\n      if (fileContentMap && filename) {\n          var input = fileContentMap.contents[filename];\n          var loc = getLocation(e.index, input);\n          var line = loc.line;\n          var col = loc.column;\n          var callLine = e.call && getLocation(e.call, input).line;\n          var lines = input ? input.split('\\n') : '';\n          this.type = e.type || 'Syntax';\n          this.filename = filename;\n          this.index = e.index;\n          this.line = typeof line === 'number' ? line + 1 : null;\n          this.column = col;\n          if (!this.line && this.stack) {\n              var found = this.stack.match(anonymousFunc);\n              /**\n               * We have to figure out how this environment stringifies anonymous functions\n               * so we can correctly map plugin errors.\n               *\n               * Note, in Node 8, the output of anonymous funcs varied based on parameters\n               * being present or not, so we inject dummy params.\n               */\n              var func = new Function('a', 'throw new Error()');\n              var lineAdjust = 0;\n              try {\n                  func();\n              }\n              catch (e) {\n                  var match = e.stack.match(anonymousFunc);\n                  var line_1 = parseInt(match[2]);\n                  lineAdjust = 1 - line_1;\n              }\n              if (found) {\n                  if (found[2]) {\n                      this.line = parseInt(found[2]) + lineAdjust;\n                  }\n                  if (found[3]) {\n                      this.column = parseInt(found[3]);\n                  }\n              }\n          }\n          this.callLine = callLine + 1;\n          this.callExtract = lines[callLine];\n          this.extract = [\n              lines[this.line - 2],\n              lines[this.line - 1],\n              lines[this.line]\n          ];\n      }\n  };\n  if (typeof Object.create === 'undefined') {\n      var F = function () { };\n      F.prototype = Error.prototype;\n      LessError.prototype = new F();\n  }\n  else {\n      LessError.prototype = Object.create(Error.prototype);\n  }\n  LessError.prototype.constructor = LessError;\n  /**\n   * An overridden version of the default Object.prototype.toString\n   * which uses additional information to create a helpful message.\n   *\n   * @param {Object} options\n   * @returns {string}\n   */\n  LessError.prototype.toString = function (options) {\n      if (options === void 0) { options = {}; }\n      var message = '';\n      var extract = this.extract || [];\n      var error = [];\n      var stylize = function (str) { return str; };\n      if (options.stylize) {\n          var type = typeof options.stylize;\n          if (type !== 'function') {\n              throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\n          }\n          stylize = options.stylize;\n      }\n      if (this.line !== null) {\n          if (typeof extract[0] === 'string') {\n              error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\n          }\n          if (typeof extract[1] === 'string') {\n              var errorTxt = this.line + \" \";\n              if (extract[1]) {\n                  errorTxt += extract[1].slice(0, this.column) +\n                      stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                          extract[1].slice(this.column + 1), 'red'), 'inverse');\n              }\n              error.push(errorTxt);\n          }\n          if (typeof extract[2] === 'string') {\n              error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\n          }\n          error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\n      }\n      message += stylize(this.type + \"Error: \" + this.message, 'red');\n      if (this.filename) {\n          message += stylize(' in ', 'red') + this.filename;\n      }\n      if (this.line) {\n          message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\n      }\n      message += \"\\n\" + error;\n      if (this.callLine) {\n          message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\n          message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\n      }\n      return message;\n  };\n\n  var Selector = /** @class */ (function (_super) {\n      __extends(Selector, _super);\n      function Selector(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.extendList = extendList;\n          _this.condition = condition;\n          _this.evaldCondition = !condition;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.elements = _this.getElements(elements);\n          _this.mixinElements_ = undefined;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.setParent(_this.elements, _this);\n          return _this;\n      }\n      Selector.prototype.accept = function (visitor) {\n          if (this.elements) {\n              this.elements = visitor.visitArray(this.elements);\n          }\n          if (this.extendList) {\n              this.extendList = visitor.visitArray(this.extendList);\n          }\n          if (this.condition) {\n              this.condition = visitor.visit(this.condition);\n          }\n      };\n      Selector.prototype.createDerived = function (elements, extendList, evaldCondition) {\n          elements = this.getElements(elements);\n          var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n          newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n          newSelector.mediaEmpty = this.mediaEmpty;\n          return newSelector;\n      };\n      Selector.prototype.getElements = function (els) {\n          if (!els) {\n              return [new Element('', '&', false, this._index, this._fileInfo)];\n          }\n          if (typeof els === 'string') {\n              this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\n                  if (err) {\n                      throw new LessError({\n                          index: err.index,\n                          message: err.message\n                      }, this.parse.imports, this._fileInfo.filename);\n                  }\n                  els = result[0].elements;\n              });\n          }\n          return els;\n      };\n      Selector.prototype.createEmptySelectors = function () {\n          var el = new Element('', '&', false, this._index, this._fileInfo);\n          var sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n          sels[0].mediaEmpty = true;\n          return sels;\n      };\n      Selector.prototype.match = function (other) {\n          var elements = this.elements;\n          var len = elements.length;\n          var olen;\n          var i;\n          other = other.mixinElements();\n          olen = other.length;\n          if (olen === 0 || len < olen) {\n              return 0;\n          }\n          else {\n              for (i = 0; i < olen; i++) {\n                  if (elements[i].value !== other[i]) {\n                      return 0;\n                  }\n              }\n          }\n          return olen; // return number of matched elements\n      };\n      Selector.prototype.mixinElements = function () {\n          if (this.mixinElements_) {\n              return this.mixinElements_;\n          }\n          var elements = this.elements.map(function (v) { return v.combinator.value + (v.value.value || v.value); }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n          if (elements) {\n              if (elements[0] === '&') {\n                  elements.shift();\n              }\n          }\n          else {\n              elements = [];\n          }\n          return (this.mixinElements_ = elements);\n      };\n      Selector.prototype.isJustParentSelector = function () {\n          return !this.mediaEmpty &&\n              this.elements.length === 1 &&\n              this.elements[0].value === '&' &&\n              (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n      };\n      Selector.prototype.eval = function (context) {\n          var evaldCondition = this.condition && this.condition.eval(context);\n          var elements = this.elements;\n          var extendList = this.extendList;\n          elements = elements && elements.map(function (e) { return e.eval(context); });\n          extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\n          return this.createDerived(elements, extendList, evaldCondition);\n      };\n      Selector.prototype.genCSS = function (context, output) {\n          var i;\n          var element;\n          if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n              output.add(' ', this.fileInfo(), this.getIndex());\n          }\n          for (i = 0; i < this.elements.length; i++) {\n              element = this.elements[i];\n              element.genCSS(context, output);\n          }\n      };\n      Selector.prototype.getIsOutput = function () {\n          return this.evaldCondition;\n      };\n      return Selector;\n  }(Node));\n  Selector.prototype.type = 'Selector';\n\n  var Value = /** @class */ (function (_super) {\n      __extends(Value, _super);\n      function Value(value) {\n          var _this = _super.call(this) || this;\n          if (!value) {\n              throw new Error('Value requires an array argument');\n          }\n          if (!Array.isArray(value)) {\n              _this.value = [value];\n          }\n          else {\n              _this.value = value;\n          }\n          return _this;\n      }\n      Value.prototype.accept = function (visitor) {\n          if (this.value) {\n              this.value = visitor.visitArray(this.value);\n          }\n      };\n      Value.prototype.eval = function (context) {\n          if (this.value.length === 1) {\n              return this.value[0].eval(context);\n          }\n          else {\n              return new Value(this.value.map(function (v) { return v.eval(context); }));\n          }\n      };\n      Value.prototype.genCSS = function (context, output) {\n          var i;\n          for (i = 0; i < this.value.length; i++) {\n              this.value[i].genCSS(context, output);\n              if (i + 1 < this.value.length) {\n                  output.add((context && context.compress) ? ',' : ', ');\n              }\n          }\n      };\n      return Value;\n  }(Node));\n  Value.prototype.type = 'Value';\n\n  var Keyword = /** @class */ (function (_super) {\n      __extends(Keyword, _super);\n      function Keyword(value) {\n          var _this = _super.call(this) || this;\n          _this.value = value;\n          return _this;\n      }\n      Keyword.prototype.genCSS = function (context, output) {\n          if (this.value === '%') {\n              throw { type: 'Syntax', message: 'Invalid % without number' };\n          }\n          output.add(this.value);\n      };\n      return Keyword;\n  }(Node));\n  Keyword.prototype.type = 'Keyword';\n  Keyword.True = new Keyword('true');\n  Keyword.False = new Keyword('false');\n\n  var Anonymous = /** @class */ (function (_super) {\n      __extends(Anonymous, _super);\n      function Anonymous(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.value = value;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.mapLines = mapLines;\n          _this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n          _this.allowRoot = true;\n          _this.copyVisibilityInfo(visibilityInfo);\n          return _this;\n      }\n      Anonymous.prototype.eval = function () {\n          return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n      };\n      Anonymous.prototype.compare = function (other) {\n          return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n      };\n      Anonymous.prototype.isRulesetLike = function () {\n          return this.rulesetLike;\n      };\n      Anonymous.prototype.genCSS = function (context, output) {\n          this.nodeVisible = Boolean(this.value);\n          if (this.nodeVisible) {\n              output.add(this.value, this._fileInfo, this._index, this.mapLines);\n          }\n      };\n      return Anonymous;\n  }(Node));\n  Anonymous.prototype.type = 'Anonymous';\n\n  var MATH = Math$1;\n  var Declaration = /** @class */ (function (_super) {\n      __extends(Declaration, _super);\n      function Declaration(name, value, important, merge, index, currentFileInfo, inline, variable) {\n          var _this = _super.call(this) || this;\n          _this.name = name;\n          _this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n          _this.important = important ? \" \" + important.trim() : '';\n          _this.merge = merge;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.inline = inline || false;\n          _this.variable = (variable !== undefined) ? variable\n              : (name.charAt && (name.charAt(0) === '@'));\n          _this.allowRoot = true;\n          _this.setParent(_this.value, _this);\n          return _this;\n      }\n      Declaration.prototype.genCSS = function (context, output) {\n          output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n          try {\n              this.value.genCSS(context, output);\n          }\n          catch (e) {\n              e.index = this._index;\n              e.filename = this._fileInfo.filename;\n              throw e;\n          }\n          output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\n      };\n      Declaration.prototype.eval = function (context) {\n          var mathBypass = false;\n          var prevMath;\n          var name = this.name;\n          var evaldValue;\n          var variable = this.variable;\n          if (typeof name !== 'string') {\n              // expand 'primitive' name directly to get\n              // things faster (~10% for benchmark.less):\n              name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                  name[0].value : evalName(context, name);\n              variable = false; // never treat expanded interpolation as new variable name\n          }\n          // @todo remove when parens-division is default\n          if (name === 'font' && context.math === MATH.ALWAYS) {\n              mathBypass = true;\n              prevMath = context.math;\n              context.math = MATH.PARENS_DIVISION;\n          }\n          try {\n              context.importantScope.push({});\n              evaldValue = this.value.eval(context);\n              if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n                  throw { message: 'Rulesets cannot be evaluated on a property.',\n                      index: this.getIndex(), filename: this.fileInfo().filename };\n              }\n              var important = this.important;\n              var importantResult = context.importantScope.pop();\n              if (!important && importantResult.important) {\n                  important = importantResult.important;\n              }\n              return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n          }\n          catch (e) {\n              if (typeof e.index !== 'number') {\n                  e.index = this.getIndex();\n                  e.filename = this.fileInfo().filename;\n              }\n              throw e;\n          }\n          finally {\n              if (mathBypass) {\n                  context.math = prevMath;\n              }\n          }\n      };\n      Declaration.prototype.makeImportant = function () {\n          return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n      };\n      return Declaration;\n  }(Node));\n  function evalName(context, name) {\n      var value = '';\n      var i;\n      var n = name.length;\n      var output = { add: function (s) { value += s; } };\n      for (i = 0; i < n; i++) {\n          name[i].eval(context).genCSS(context, output);\n      }\n      return value;\n  }\n  Declaration.prototype.type = 'Declaration';\n\n  var debugInfo = function (context, ctx, lineSeparator) {\n      var result = '';\n      if (context.dumpLineNumbers && !context.compress) {\n          switch (context.dumpLineNumbers) {\n              case 'comments':\n                  result = debugInfo.asComment(ctx);\n                  break;\n              case 'mediaquery':\n                  result = debugInfo.asMediaQuery(ctx);\n                  break;\n              case 'all':\n                  result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n                  break;\n          }\n      }\n      return result;\n  };\n  debugInfo.asComment = function (ctx) { return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\"; };\n  debugInfo.asMediaQuery = function (ctx) {\n      var filenameWithProtocol = ctx.debugInfo.fileName;\n      if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n          filenameWithProtocol = \"file://\" + filenameWithProtocol;\n      }\n      return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n          if (a == '\\\\') {\n              a = '\\/';\n          }\n          return \"\\\\\" + a;\n      }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\n  };\n\n  var Comment = /** @class */ (function (_super) {\n      __extends(Comment, _super);\n      function Comment(value, isLineComment, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.value = value;\n          _this.isLineComment = isLineComment;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.allowRoot = true;\n          return _this;\n      }\n      Comment.prototype.genCSS = function (context, output) {\n          if (this.debugInfo) {\n              output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\n          }\n          output.add(this.value);\n      };\n      Comment.prototype.isSilent = function (context) {\n          var isCompressed = context.compress && this.value[2] !== '!';\n          return this.isLineComment || isCompressed;\n      };\n      return Comment;\n  }(Node));\n  Comment.prototype.type = 'Comment';\n\n  var contexts = {};\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n      if (!original) {\n          return;\n      }\n      for (var i_1 = 0; i_1 < propertiesToCopy.length; i_1++) {\n          if (original.hasOwnProperty(propertiesToCopy[i_1])) {\n              destination[propertiesToCopy[i_1]] = original[propertiesToCopy[i_1]];\n          }\n      }\n  };\n  /*\n   parse is used whilst parsing\n   */\n  var parseCopyProperties = [\n      // options\n      'paths',\n      'rewriteUrls',\n      'rootpath',\n      'strictImports',\n      'insecure',\n      'dumpLineNumbers',\n      'compress',\n      'syncImport',\n      'chunkInput',\n      'mime',\n      'useFileCache',\n      // context\n      'processImports',\n      // Used by the import manager to stop multiple import visitors being created.\n      'pluginManager' // Used as the plugin manager for the session\n  ];\n  contexts.Parse = function (options) {\n      copyFromOriginal(options, this, parseCopyProperties);\n      if (typeof this.paths === 'string') {\n          this.paths = [this.paths];\n      }\n  };\n  var evalCopyProperties = [\n      'paths',\n      'compress',\n      'math',\n      'strictUnits',\n      'sourceMap',\n      'importMultiple',\n      'urlArgs',\n      'javascriptEnabled',\n      'pluginManager',\n      'importantScope',\n      'rewriteUrls' // option - whether to adjust URL's to be relative\n  ];\n  function isPathRelative(path) {\n      return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n  }\n  function isPathLocalRelative(path) {\n      return path.charAt(0) === '.';\n  }\n  contexts.Eval = /** @class */ (function () {\n      function Eval(options, frames) {\n          copyFromOriginal(options, this, evalCopyProperties);\n          if (typeof this.paths === 'string') {\n              this.paths = [this.paths];\n          }\n          this.frames = frames || [];\n          this.importantScope = this.importantScope || [];\n          this.inCalc = false;\n          this.mathOn = true;\n      }\n      Eval.prototype.enterCalc = function () {\n          if (!this.calcStack) {\n              this.calcStack = [];\n          }\n          this.calcStack.push(true);\n          this.inCalc = true;\n      };\n      Eval.prototype.exitCalc = function () {\n          this.calcStack.pop();\n          if (!this.calcStack) {\n              this.inCalc = false;\n          }\n      };\n      Eval.prototype.inParenthesis = function () {\n          if (!this.parensStack) {\n              this.parensStack = [];\n          }\n          this.parensStack.push(true);\n      };\n      Eval.prototype.outOfParenthesis = function () {\n          this.parensStack.pop();\n      };\n      Eval.prototype.isMathOn = function (op) {\n          if (!this.mathOn) {\n              return false;\n          }\n          if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n              return false;\n          }\n          if (this.math > Math$1.PARENS_DIVISION) {\n              return this.parensStack && this.parensStack.length;\n          }\n          return true;\n      };\n      Eval.prototype.pathRequiresRewrite = function (path) {\n          var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n          return isRelative(path);\n      };\n      Eval.prototype.rewritePath = function (path, rootpath) {\n          var newPath;\n          rootpath = rootpath || '';\n          newPath = this.normalizePath(rootpath + path);\n          // If a path was explicit relative and the rootpath was not an absolute path\n          // we must ensure that the new path is also explicit relative.\n          if (isPathLocalRelative(path) &&\n              isPathRelative(rootpath) &&\n              isPathLocalRelative(newPath) === false) {\n              newPath = \"./\" + newPath;\n          }\n          return newPath;\n      };\n      Eval.prototype.normalizePath = function (path) {\n          var segments = path.split('/').reverse();\n          var segment;\n          path = [];\n          while (segments.length !== 0) {\n              segment = segments.pop();\n              switch (segment) {\n                  case '.':\n                      break;\n                  case '..':\n                      if ((path.length === 0) || (path[path.length - 1] === '..')) {\n                          path.push(segment);\n                      }\n                      else {\n                          path.pop();\n                      }\n                      break;\n                  default:\n                      path.push(segment);\n                      break;\n              }\n          }\n          return path.join('/');\n      };\n      return Eval;\n  }());\n\n  function makeRegistry(base) {\n      return {\n          _data: {},\n          add: function (name, func) {\n              // precautionary case conversion, as later querying of\n              // the registry by function-caller uses lower case as well.\n              name = name.toLowerCase();\n              if (this._data.hasOwnProperty(name)) ;\n              this._data[name] = func;\n          },\n          addMultiple: function (functions) {\n              var _this = this;\n              Object.keys(functions).forEach(function (name) {\n                  _this.add(name, functions[name]);\n              });\n          },\n          get: function (name) {\n              return this._data[name] || (base && base.get(name));\n          },\n          getLocalFunctions: function () {\n              return this._data;\n          },\n          inherit: function () {\n              return makeRegistry(this);\n          },\n          create: function (base) {\n              return makeRegistry(base);\n          }\n      };\n  }\n  var functionRegistry = makeRegistry(null);\n\n  var defaultFunc = {\n      eval: function () {\n          var v = this.value_;\n          var e = this.error_;\n          if (e) {\n              throw e;\n          }\n          if (v != null) {\n              return v ? Keyword.True : Keyword.False;\n          }\n      },\n      value: function (v) {\n          this.value_ = v;\n      },\n      error: function (e) {\n          this.error_ = e;\n      },\n      reset: function () {\n          this.value_ = this.error_ = null;\n      }\n  };\n\n  var Ruleset = /** @class */ (function (_super) {\n      __extends(Ruleset, _super);\n      function Ruleset(selectors, rules, strictImports, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.selectors = selectors;\n          _this.rules = rules;\n          _this._lookups = {};\n          _this._variables = null;\n          _this._properties = null;\n          _this.strictImports = strictImports;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.allowRoot = true;\n          _this.setParent(_this.selectors, _this);\n          _this.setParent(_this.rules, _this);\n          return _this;\n      }\n      Ruleset.prototype.isRulesetLike = function () {\n          return true;\n      };\n      Ruleset.prototype.accept = function (visitor) {\n          if (this.paths) {\n              this.paths = visitor.visitArray(this.paths, true);\n          }\n          else if (this.selectors) {\n              this.selectors = visitor.visitArray(this.selectors);\n          }\n          if (this.rules && this.rules.length) {\n              this.rules = visitor.visitArray(this.rules);\n          }\n      };\n      Ruleset.prototype.eval = function (context) {\n          var selectors;\n          var selCnt;\n          var selector;\n          var i;\n          var hasVariable;\n          var hasOnePassingSelector = false;\n          if (this.selectors && (selCnt = this.selectors.length)) {\n              selectors = new Array(selCnt);\n              defaultFunc.error({\n                  type: 'Syntax',\n                  message: 'it is currently only allowed in parametric mixin guards,'\n              });\n              for (i = 0; i < selCnt; i++) {\n                  selector = this.selectors[i].eval(context);\n                  for (var j = 0; j < selector.elements.length; j++) {\n                      if (selector.elements[j].isVariable) {\n                          hasVariable = true;\n                          break;\n                      }\n                  }\n                  selectors[i] = selector;\n                  if (selector.evaldCondition) {\n                      hasOnePassingSelector = true;\n                  }\n              }\n              if (hasVariable) {\n                  var toParseSelectors = new Array(selCnt);\n                  for (i = 0; i < selCnt; i++) {\n                      selector = selectors[i];\n                      toParseSelectors[i] = selector.toCSS(context);\n                  }\n                  this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\n                      if (result) {\n                          selectors = flattenArray(result);\n                      }\n                  });\n              }\n              defaultFunc.reset();\n          }\n          else {\n              hasOnePassingSelector = true;\n          }\n          var rules = this.rules ? copyArray(this.rules) : null;\n          var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n          var rule;\n          var subRule;\n          ruleset.originalRuleset = this;\n          ruleset.root = this.root;\n          ruleset.firstRoot = this.firstRoot;\n          ruleset.allowImports = this.allowImports;\n          if (this.debugInfo) {\n              ruleset.debugInfo = this.debugInfo;\n          }\n          if (!hasOnePassingSelector) {\n              rules.length = 0;\n          }\n          // inherit a function registry from the frames stack when possible;\n          // otherwise from the global registry\n          ruleset.functionRegistry = (function (frames) {\n              var i = 0;\n              var n = frames.length;\n              var found;\n              for (; i !== n; ++i) {\n                  found = frames[i].functionRegistry;\n                  if (found) {\n                      return found;\n                  }\n              }\n              return functionRegistry;\n          })(context.frames).inherit();\n          // push the current ruleset to the frames stack\n          var ctxFrames = context.frames;\n          ctxFrames.unshift(ruleset);\n          // currrent selectors\n          var ctxSelectors = context.selectors;\n          if (!ctxSelectors) {\n              context.selectors = ctxSelectors = [];\n          }\n          ctxSelectors.unshift(this.selectors);\n          // Evaluate imports\n          if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n              ruleset.evalImports(context);\n          }\n          // Store the frames around mixin definitions,\n          // so they can be evaluated like closures when the time comes.\n          var rsRules = ruleset.rules;\n          for (i = 0; (rule = rsRules[i]); i++) {\n              if (rule.evalFirst) {\n                  rsRules[i] = rule.eval(context);\n              }\n          }\n          var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n          // Evaluate mixin calls.\n          for (i = 0; (rule = rsRules[i]); i++) {\n              if (rule.type === 'MixinCall') {\n                  /* jshint loopfunc:true */\n                  rules = rule.eval(context).filter(function (r) {\n                      if ((r instanceof Declaration) && r.variable) {\n                          // do not pollute the scope if the variable is\n                          // already there. consider returning false here\n                          // but we need a way to \"return\" variable from mixins\n                          return !(ruleset.variable(r.name));\n                      }\n                      return true;\n                  });\n                  rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                  i += rules.length - 1;\n                  ruleset.resetCache();\n              }\n              else if (rule.type === 'VariableCall') {\n                  /* jshint loopfunc:true */\n                  rules = rule.eval(context).rules.filter(function (r) {\n                      if ((r instanceof Declaration) && r.variable) {\n                          // do not pollute the scope at all\n                          return false;\n                      }\n                      return true;\n                  });\n                  rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                  i += rules.length - 1;\n                  ruleset.resetCache();\n              }\n          }\n          // Evaluate everything else\n          for (i = 0; (rule = rsRules[i]); i++) {\n              if (!rule.evalFirst) {\n                  rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n              }\n          }\n          // Evaluate everything else\n          for (i = 0; (rule = rsRules[i]); i++) {\n              // for rulesets, check if it is a css guard and can be removed\n              if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n                  // check if it can be folded in (e.g. & where)\n                  if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n                      rsRules.splice(i--, 1);\n                      for (var j = 0; (subRule = rule.rules[j]); j++) {\n                          if (subRule instanceof Node) {\n                              subRule.copyVisibilityInfo(rule.visibilityInfo());\n                              if (!(subRule instanceof Declaration) || !subRule.variable) {\n                                  rsRules.splice(++i, 0, subRule);\n                              }\n                          }\n                      }\n                  }\n              }\n          }\n          // Pop the stack\n          ctxFrames.shift();\n          ctxSelectors.shift();\n          if (context.mediaBlocks) {\n              for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n                  context.mediaBlocks[i].bubbleSelectors(selectors);\n              }\n          }\n          return ruleset;\n      };\n      Ruleset.prototype.evalImports = function (context) {\n          var rules = this.rules;\n          var i;\n          var importRules;\n          if (!rules) {\n              return;\n          }\n          for (i = 0; i < rules.length; i++) {\n              if (rules[i].type === 'Import') {\n                  importRules = rules[i].eval(context);\n                  if (importRules && (importRules.length || importRules.length === 0)) {\n                      rules.splice.apply(rules, [i, 1].concat(importRules));\n                      i += importRules.length - 1;\n                  }\n                  else {\n                      rules.splice(i, 1, importRules);\n                  }\n                  this.resetCache();\n              }\n          }\n      };\n      Ruleset.prototype.makeImportant = function () {\n          var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n              if (r.makeImportant) {\n                  return r.makeImportant();\n              }\n              else {\n                  return r;\n              }\n          }), this.strictImports, this.visibilityInfo());\n          return result;\n      };\n      Ruleset.prototype.matchArgs = function (args) {\n          return !args || args.length === 0;\n      };\n      // lets you call a css selector with a guard\n      Ruleset.prototype.matchCondition = function (args, context) {\n          var lastSelector = this.selectors[this.selectors.length - 1];\n          if (!lastSelector.evaldCondition) {\n              return false;\n          }\n          if (lastSelector.condition &&\n              !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\n              return false;\n          }\n          return true;\n      };\n      Ruleset.prototype.resetCache = function () {\n          this._rulesets = null;\n          this._variables = null;\n          this._properties = null;\n          this._lookups = {};\n      };\n      Ruleset.prototype.variables = function () {\n          if (!this._variables) {\n              this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                  if (r instanceof Declaration && r.variable === true) {\n                      hash[r.name] = r;\n                  }\n                  // when evaluating variables in an import statement, imports have not been eval'd\n                  // so we need to go inside import statements.\n                  // guard against root being a string (in the case of inlined less)\n                  if (r.type === 'Import' && r.root && r.root.variables) {\n                      var vars = r.root.variables();\n                      for (var name_1 in vars) {\n                          if (vars.hasOwnProperty(name_1)) {\n                              hash[name_1] = r.root.variable(name_1);\n                          }\n                      }\n                  }\n                  return hash;\n              }, {});\n          }\n          return this._variables;\n      };\n      Ruleset.prototype.properties = function () {\n          if (!this._properties) {\n              this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                  if (r instanceof Declaration && r.variable !== true) {\n                      var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                          r.name[0].value : r.name;\n                      // Properties don't overwrite as they can merge\n                      if (!hash[\"$\" + name_2]) {\n                          hash[\"$\" + name_2] = [r];\n                      }\n                      else {\n                          hash[\"$\" + name_2].push(r);\n                      }\n                  }\n                  return hash;\n              }, {});\n          }\n          return this._properties;\n      };\n      Ruleset.prototype.variable = function (name) {\n          var decl = this.variables()[name];\n          if (decl) {\n              return this.parseValue(decl);\n          }\n      };\n      Ruleset.prototype.property = function (name) {\n          var decl = this.properties()[name];\n          if (decl) {\n              return this.parseValue(decl);\n          }\n      };\n      Ruleset.prototype.lastDeclaration = function () {\n          for (var i_1 = this.rules.length; i_1 > 0; i_1--) {\n              var decl = this.rules[i_1 - 1];\n              if (decl instanceof Declaration) {\n                  return this.parseValue(decl);\n              }\n          }\n      };\n      Ruleset.prototype.parseValue = function (toParse) {\n          var self = this;\n          function transformDeclaration(decl) {\n              if (decl.value instanceof Anonymous && !decl.parsed) {\n                  if (typeof decl.value.value === 'string') {\n                      this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\n                          if (err) {\n                              decl.parsed = true;\n                          }\n                          if (result) {\n                              decl.value = result[0];\n                              decl.important = result[1] || '';\n                              decl.parsed = true;\n                          }\n                      });\n                  }\n                  else {\n                      decl.parsed = true;\n                  }\n                  return decl;\n              }\n              else {\n                  return decl;\n              }\n          }\n          if (!Array.isArray(toParse)) {\n              return transformDeclaration.call(self, toParse);\n          }\n          else {\n              var nodes_1 = [];\n              toParse.forEach(function (n) {\n                  nodes_1.push(transformDeclaration.call(self, n));\n              });\n              return nodes_1;\n          }\n      };\n      Ruleset.prototype.rulesets = function () {\n          if (!this.rules) {\n              return [];\n          }\n          var filtRules = [];\n          var rules = this.rules;\n          var i;\n          var rule;\n          for (i = 0; (rule = rules[i]); i++) {\n              if (rule.isRuleset) {\n                  filtRules.push(rule);\n              }\n          }\n          return filtRules;\n      };\n      Ruleset.prototype.prependRule = function (rule) {\n          var rules = this.rules;\n          if (rules) {\n              rules.unshift(rule);\n          }\n          else {\n              this.rules = [rule];\n          }\n          this.setParent(rule, this);\n      };\n      Ruleset.prototype.find = function (selector, self, filter) {\n          if (self === void 0) { self = this; }\n          var rules = [];\n          var match;\n          var foundMixins;\n          var key = selector.toCSS();\n          if (key in this._lookups) {\n              return this._lookups[key];\n          }\n          this.rulesets().forEach(function (rule) {\n              if (rule !== self) {\n                  for (var j = 0; j < rule.selectors.length; j++) {\n                      match = selector.match(rule.selectors[j]);\n                      if (match) {\n                          if (selector.elements.length > match) {\n                              if (!filter || filter(rule)) {\n                                  foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                                  for (var i_2 = 0; i_2 < foundMixins.length; ++i_2) {\n                                      foundMixins[i_2].path.push(rule);\n                                  }\n                                  Array.prototype.push.apply(rules, foundMixins);\n                              }\n                          }\n                          else {\n                              rules.push({ rule: rule, path: [] });\n                          }\n                          break;\n                      }\n                  }\n              }\n          });\n          this._lookups[key] = rules;\n          return rules;\n      };\n      Ruleset.prototype.genCSS = function (context, output) {\n          var i;\n          var j;\n          var charsetRuleNodes = [];\n          var ruleNodes = [];\n          var // Line number debugging\n          debugInfo$1;\n          var rule;\n          var path;\n          context.tabLevel = (context.tabLevel || 0);\n          if (!this.root) {\n              context.tabLevel++;\n          }\n          var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n          var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n          var sep;\n          var charsetNodeIndex = 0;\n          var importNodeIndex = 0;\n          for (i = 0; (rule = this.rules[i]); i++) {\n              if (rule instanceof Comment) {\n                  if (importNodeIndex === i) {\n                      importNodeIndex++;\n                  }\n                  ruleNodes.push(rule);\n              }\n              else if (rule.isCharset && rule.isCharset()) {\n                  ruleNodes.splice(charsetNodeIndex, 0, rule);\n                  charsetNodeIndex++;\n                  importNodeIndex++;\n              }\n              else if (rule.type === 'Import') {\n                  ruleNodes.splice(importNodeIndex, 0, rule);\n                  importNodeIndex++;\n              }\n              else {\n                  ruleNodes.push(rule);\n              }\n          }\n          ruleNodes = charsetRuleNodes.concat(ruleNodes);\n          // If this is the root node, we don't render\n          // a selector, or {}.\n          if (!this.root) {\n              debugInfo$1 = debugInfo(context, this, tabSetStr);\n              if (debugInfo$1) {\n                  output.add(debugInfo$1);\n                  output.add(tabSetStr);\n              }\n              var paths = this.paths;\n              var pathCnt = paths.length;\n              var pathSubCnt = void 0;\n              sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\n              for (i = 0; i < pathCnt; i++) {\n                  path = paths[i];\n                  if (!(pathSubCnt = path.length)) {\n                      continue;\n                  }\n                  if (i > 0) {\n                      output.add(sep);\n                  }\n                  context.firstSelector = true;\n                  path[0].genCSS(context, output);\n                  context.firstSelector = false;\n                  for (j = 1; j < pathSubCnt; j++) {\n                      path[j].genCSS(context, output);\n                  }\n              }\n              output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n          }\n          // Compile rules and rulesets\n          for (i = 0; (rule = ruleNodes[i]); i++) {\n              if (i + 1 === ruleNodes.length) {\n                  context.lastRule = true;\n              }\n              var currentLastRule = context.lastRule;\n              if (rule.isRulesetLike(rule)) {\n                  context.lastRule = false;\n              }\n              if (rule.genCSS) {\n                  rule.genCSS(context, output);\n              }\n              else if (rule.value) {\n                  output.add(rule.value.toString());\n              }\n              context.lastRule = currentLastRule;\n              if (!context.lastRule && rule.isVisible()) {\n                  output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\n              }\n              else {\n                  context.lastRule = false;\n              }\n          }\n          if (!this.root) {\n              output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\n              context.tabLevel--;\n          }\n          if (!output.isEmpty() && !context.compress && this.firstRoot) {\n              output.add('\\n');\n          }\n      };\n      Ruleset.prototype.joinSelectors = function (paths, context, selectors) {\n          for (var s = 0; s < selectors.length; s++) {\n              this.joinSelector(paths, context, selectors[s]);\n          }\n      };\n      Ruleset.prototype.joinSelector = function (paths, context, selector) {\n          function createParenthesis(elementsToPak, originalElement) {\n              var replacementParen;\n              var j;\n              if (elementsToPak.length === 0) {\n                  replacementParen = new Paren(elementsToPak[0]);\n              }\n              else {\n                  var insideParent = new Array(elementsToPak.length);\n                  for (j = 0; j < elementsToPak.length; j++) {\n                      insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n                  }\n                  replacementParen = new Paren(new Selector(insideParent));\n              }\n              return replacementParen;\n          }\n          function createSelector(containedElement, originalElement) {\n              var element;\n              var selector;\n              element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n              selector = new Selector([element]);\n              return selector;\n          }\n          // joins selector path from `beginningPath` with selector path in `addPath`\n          // `replacedElement` contains element that is being replaced by `addPath`\n          // returns concatenated path\n          function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n              var newSelectorPath;\n              var lastSelector;\n              var newJoinedSelector;\n              // our new selector path\n              newSelectorPath = [];\n              // construct the joined selector - if & is the first thing this will be empty,\n              // if not newJoinedSelector will be the last set of elements in the selector\n              if (beginningPath.length > 0) {\n                  newSelectorPath = copyArray(beginningPath);\n                  lastSelector = newSelectorPath.pop();\n                  newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\n              }\n              else {\n                  newJoinedSelector = originalSelector.createDerived([]);\n              }\n              if (addPath.length > 0) {\n                  // /deep/ is a CSS4 selector - (removed, so should deprecate)\n                  // that is valid without anything in front of it\n                  // so if the & does not have a combinator that is \"\" or \" \" then\n                  // and there is a combinator on the parent, then grab that.\n                  // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n                  var combinator = replacedElement.combinator;\n                  var parentEl = addPath[0].elements[0];\n                  if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                      combinator = parentEl.combinator;\n                  }\n                  // join the elements so far with the first part of the parent\n                  newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\n                  newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n              }\n              // now add the joined selector - but only if it is not empty\n              if (newJoinedSelector.elements.length !== 0) {\n                  newSelectorPath.push(newJoinedSelector);\n              }\n              // put together the parent selectors after the join (e.g. the rest of the parent)\n              if (addPath.length > 1) {\n                  var restOfPath = addPath.slice(1);\n                  restOfPath = restOfPath.map(function (selector) { return selector.createDerived(selector.elements, []); });\n                  newSelectorPath = newSelectorPath.concat(restOfPath);\n              }\n              return newSelectorPath;\n          }\n          // joins selector path from `beginningPath` with every selector path in `addPaths` array\n          // `replacedElement` contains element that is being replaced by `addPath`\n          // returns array with all concatenated paths\n          function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\n              var j;\n              for (j = 0; j < beginningPath.length; j++) {\n                  var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n                  result.push(newSelectorPath);\n              }\n              return result;\n          }\n          function mergeElementsOnToSelectors(elements, selectors) {\n              var i;\n              var sel;\n              if (elements.length === 0) {\n                  return;\n              }\n              if (selectors.length === 0) {\n                  selectors.push([new Selector(elements)]);\n                  return;\n              }\n              for (i = 0; (sel = selectors[i]); i++) {\n                  // if the previous thing in sel is a parent this needs to join on to it\n                  if (sel.length > 0) {\n                      sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n                  }\n                  else {\n                      sel.push(new Selector(elements));\n                  }\n              }\n          }\n          // replace all parent selectors inside `inSelector` by content of `context` array\n          // resulting selectors are returned inside `paths` array\n          // returns true if `inSelector` contained at least one parent selector\n          function replaceParentSelector(paths, context, inSelector) {\n              // The paths are [[Selector]]\n              // The first list is a list of comma separated selectors\n              // The inner list is a list of inheritance separated selectors\n              // e.g.\n              // .a, .b {\n              //   .c {\n              //   }\n              // }\n              // == [[.a] [.c]] [[.b] [.c]]\n              //\n              var i;\n              var j;\n              var k;\n              var currentElements;\n              var newSelectors;\n              var selectorsMultiplied;\n              var sel;\n              var el;\n              var hadParentSelector = false;\n              var length;\n              var lastSelector;\n              function findNestedSelector(element) {\n                  var maybeSelector;\n                  if (!(element.value instanceof Paren)) {\n                      return null;\n                  }\n                  maybeSelector = element.value.value;\n                  if (!(maybeSelector instanceof Selector)) {\n                      return null;\n                  }\n                  return maybeSelector;\n              }\n              // the elements from the current selector so far\n              currentElements = [];\n              // the current list of new selectors to add to the path.\n              // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n              // by the parents\n              newSelectors = [\n                  []\n              ];\n              for (i = 0; (el = inSelector.elements[i]); i++) {\n                  // non parent reference elements just get added\n                  if (el.value !== '&') {\n                      var nestedSelector = findNestedSelector(el);\n                      if (nestedSelector != null) {\n                          // merge the current list of non parent selector elements\n                          // on to the current list of selectors to add\n                          mergeElementsOnToSelectors(currentElements, newSelectors);\n                          var nestedPaths = [];\n                          var replaced = void 0;\n                          var replacedNewSelectors = [];\n                          replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                          hadParentSelector = hadParentSelector || replaced;\n                          // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                          for (k = 0; k < nestedPaths.length; k++) {\n                              var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                              addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                          }\n                          newSelectors = replacedNewSelectors;\n                          currentElements = [];\n                      }\n                      else {\n                          currentElements.push(el);\n                      }\n                  }\n                  else {\n                      hadParentSelector = true;\n                      // the new list of selectors to add\n                      selectorsMultiplied = [];\n                      // merge the current list of non parent selector elements\n                      // on to the current list of selectors to add\n                      mergeElementsOnToSelectors(currentElements, newSelectors);\n                      // loop through our current selectors\n                      for (j = 0; j < newSelectors.length; j++) {\n                          sel = newSelectors[j];\n                          // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                          // whether there are parents or not\n                          if (context.length === 0) {\n                              // the combinator used on el should now be applied to the next element instead so that\n                              // it is not lost\n                              if (sel.length > 0) {\n                                  sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                              }\n                              selectorsMultiplied.push(sel);\n                          }\n                          else {\n                              // and the parent selectors\n                              for (k = 0; k < context.length; k++) {\n                                  // We need to put the current selectors\n                                  // then join the last selector's elements on to the parents selectors\n                                  var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                                  // add that to our new set of selectors\n                                  selectorsMultiplied.push(newSelectorPath);\n                              }\n                          }\n                      }\n                      // our new selectors has been multiplied, so reset the state\n                      newSelectors = selectorsMultiplied;\n                      currentElements = [];\n                  }\n              }\n              // if we have any elements left over (e.g. .a& .b == .b)\n              // add them on to all the current selectors\n              mergeElementsOnToSelectors(currentElements, newSelectors);\n              for (i = 0; i < newSelectors.length; i++) {\n                  length = newSelectors[i].length;\n                  if (length > 0) {\n                      paths.push(newSelectors[i]);\n                      lastSelector = newSelectors[i][length - 1];\n                      newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n                  }\n              }\n              return hadParentSelector;\n          }\n          function deriveSelector(visibilityInfo, deriveFrom) {\n              var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n              newSelector.copyVisibilityInfo(visibilityInfo);\n              return newSelector;\n          }\n          // joinSelector code follows\n          var i;\n          var newPaths;\n          var hadParentSelector;\n          newPaths = [];\n          hadParentSelector = replaceParentSelector(newPaths, context, selector);\n          if (!hadParentSelector) {\n              if (context.length > 0) {\n                  newPaths = [];\n                  for (i = 0; i < context.length; i++) {\n                      var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n                      concatenated.push(selector);\n                      newPaths.push(concatenated);\n                  }\n              }\n              else {\n                  newPaths = [[selector]];\n              }\n          }\n          for (i = 0; i < newPaths.length; i++) {\n              paths.push(newPaths[i]);\n          }\n      };\n      return Ruleset;\n  }(Node));\n  Ruleset.prototype.type = 'Ruleset';\n  Ruleset.prototype.isRuleset = true;\n\n  var AtRule = /** @class */ (function (_super) {\n      __extends(AtRule, _super);\n      function AtRule(name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          var i;\n          _this.name = name;\n          _this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n          if (rules) {\n              if (Array.isArray(rules)) {\n                  _this.rules = rules;\n              }\n              else {\n                  _this.rules = [rules];\n                  _this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n              }\n              for (i = 0; i < _this.rules.length; i++) {\n                  _this.rules[i].allowImports = true;\n              }\n              _this.setParent(_this.rules, _this);\n          }\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.debugInfo = debugInfo;\n          _this.isRooted = isRooted || false;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.allowRoot = true;\n          return _this;\n      }\n      AtRule.prototype.accept = function (visitor) {\n          var value = this.value;\n          var rules = this.rules;\n          if (rules) {\n              this.rules = visitor.visitArray(rules);\n          }\n          if (value) {\n              this.value = visitor.visit(value);\n          }\n      };\n      AtRule.prototype.isRulesetLike = function () {\n          return this.rules || !this.isCharset();\n      };\n      AtRule.prototype.isCharset = function () {\n          return '@charset' === this.name;\n      };\n      AtRule.prototype.genCSS = function (context, output) {\n          var value = this.value;\n          var rules = this.rules;\n          output.add(this.name, this.fileInfo(), this.getIndex());\n          if (value) {\n              output.add(' ');\n              value.genCSS(context, output);\n          }\n          if (rules) {\n              this.outputRuleset(context, output, rules);\n          }\n          else {\n              output.add(';');\n          }\n      };\n      AtRule.prototype.eval = function (context) {\n          var mediaPathBackup;\n          var mediaBlocksBackup;\n          var value = this.value;\n          var rules = this.rules;\n          // media stored inside other atrule should not bubble over it\n          // backpup media bubbling information\n          mediaPathBackup = context.mediaPath;\n          mediaBlocksBackup = context.mediaBlocks;\n          // deleted media bubbling information\n          context.mediaPath = [];\n          context.mediaBlocks = [];\n          if (value) {\n              value = value.eval(context);\n          }\n          if (rules) {\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\n              rules = [rules[0].eval(context)];\n              rules[0].root = true;\n          }\n          // restore media bubbling information\n          context.mediaPath = mediaPathBackup;\n          context.mediaBlocks = mediaBlocksBackup;\n          return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n      };\n      AtRule.prototype.variable = function (name) {\n          if (this.rules) {\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\n              return Ruleset.prototype.variable.call(this.rules[0], name);\n          }\n      };\n      AtRule.prototype.find = function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n          }\n          if (this.rules) {\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\n              return Ruleset.prototype.find.apply(this.rules[0], args);\n          }\n      };\n      AtRule.prototype.rulesets = function () {\n          if (this.rules) {\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\n              return Ruleset.prototype.rulesets.apply(this.rules[0]);\n          }\n      };\n      AtRule.prototype.outputRuleset = function (context, output, rules) {\n          var ruleCnt = rules.length;\n          var i;\n          context.tabLevel = (context.tabLevel | 0) + 1;\n          // Compressed\n          if (context.compress) {\n              output.add('{');\n              for (i = 0; i < ruleCnt; i++) {\n                  rules[i].genCSS(context, output);\n              }\n              output.add('}');\n              context.tabLevel--;\n              return;\n          }\n          // Non-compressed\n          var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  ');\n          var tabRuleStr = tabSetStr + \"  \";\n          if (!ruleCnt) {\n              output.add(\" {\" + tabSetStr + \"}\");\n          }\n          else {\n              output.add(\" {\" + tabRuleStr);\n              rules[0].genCSS(context, output);\n              for (i = 1; i < ruleCnt; i++) {\n                  output.add(tabRuleStr);\n                  rules[i].genCSS(context, output);\n              }\n              output.add(tabSetStr + \"}\");\n          }\n          context.tabLevel--;\n      };\n      return AtRule;\n  }(Node));\n  AtRule.prototype.type = 'AtRule';\n\n  var DetachedRuleset = /** @class */ (function (_super) {\n      __extends(DetachedRuleset, _super);\n      function DetachedRuleset(ruleset, frames) {\n          var _this = _super.call(this) || this;\n          _this.ruleset = ruleset;\n          _this.frames = frames;\n          _this.setParent(_this.ruleset, _this);\n          return _this;\n      }\n      DetachedRuleset.prototype.accept = function (visitor) {\n          this.ruleset = visitor.visit(this.ruleset);\n      };\n      DetachedRuleset.prototype.eval = function (context) {\n          var frames = this.frames || copyArray(context.frames);\n          return new DetachedRuleset(this.ruleset, frames);\n      };\n      DetachedRuleset.prototype.callEval = function (context) {\n          return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n      };\n      return DetachedRuleset;\n  }(Node));\n  DetachedRuleset.prototype.type = 'DetachedRuleset';\n  DetachedRuleset.prototype.evalFirst = true;\n\n  var Unit = /** @class */ (function (_super) {\n      __extends(Unit, _super);\n      function Unit(numerator, denominator, backupUnit) {\n          var _this = _super.call(this) || this;\n          _this.numerator = numerator ? copyArray(numerator).sort() : [];\n          _this.denominator = denominator ? copyArray(denominator).sort() : [];\n          if (backupUnit) {\n              _this.backupUnit = backupUnit;\n          }\n          else if (numerator && numerator.length) {\n              _this.backupUnit = numerator[0];\n          }\n          return _this;\n      }\n      Unit.prototype.clone = function () {\n          return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\n      };\n      Unit.prototype.genCSS = function (context, output) {\n          // Dimension checks the unit is singular and throws an error if in strict math mode.\n          var strictUnits = context && context.strictUnits;\n          if (this.numerator.length === 1) {\n              output.add(this.numerator[0]); // the ideal situation\n          }\n          else if (!strictUnits && this.backupUnit) {\n              output.add(this.backupUnit);\n          }\n          else if (!strictUnits && this.denominator.length) {\n              output.add(this.denominator[0]);\n          }\n      };\n      Unit.prototype.toString = function () {\n          var i;\n          var returnStr = this.numerator.join('*');\n          for (i = 0; i < this.denominator.length; i++) {\n              returnStr += \"/\" + this.denominator[i];\n          }\n          return returnStr;\n      };\n      Unit.prototype.compare = function (other) {\n          return this.is(other.toString()) ? 0 : undefined;\n      };\n      Unit.prototype.is = function (unitString) {\n          return this.toString().toUpperCase() === unitString.toUpperCase();\n      };\n      Unit.prototype.isLength = function () {\n          return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n      };\n      Unit.prototype.isEmpty = function () {\n          return this.numerator.length === 0 && this.denominator.length === 0;\n      };\n      Unit.prototype.isSingular = function () {\n          return this.numerator.length <= 1 && this.denominator.length === 0;\n      };\n      Unit.prototype.map = function (callback) {\n          var i;\n          for (i = 0; i < this.numerator.length; i++) {\n              this.numerator[i] = callback(this.numerator[i], false);\n          }\n          for (i = 0; i < this.denominator.length; i++) {\n              this.denominator[i] = callback(this.denominator[i], true);\n          }\n      };\n      Unit.prototype.usedUnits = function () {\n          var group;\n          var result = {};\n          var mapUnit;\n          var groupName;\n          mapUnit = function (atomicUnit) {\n              /* jshint loopfunc:true */\n              if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n                  result[groupName] = atomicUnit;\n              }\n              return atomicUnit;\n          };\n          for (groupName in unitConversions) {\n              if (unitConversions.hasOwnProperty(groupName)) {\n                  group = unitConversions[groupName];\n                  this.map(mapUnit);\n              }\n          }\n          return result;\n      };\n      Unit.prototype.cancel = function () {\n          var counter = {};\n          var atomicUnit;\n          var i;\n          for (i = 0; i < this.numerator.length; i++) {\n              atomicUnit = this.numerator[i];\n              counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n          }\n          for (i = 0; i < this.denominator.length; i++) {\n              atomicUnit = this.denominator[i];\n              counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n          }\n          this.numerator = [];\n          this.denominator = [];\n          for (atomicUnit in counter) {\n              if (counter.hasOwnProperty(atomicUnit)) {\n                  var count = counter[atomicUnit];\n                  if (count > 0) {\n                      for (i = 0; i < count; i++) {\n                          this.numerator.push(atomicUnit);\n                      }\n                  }\n                  else if (count < 0) {\n                      for (i = 0; i < -count; i++) {\n                          this.denominator.push(atomicUnit);\n                      }\n                  }\n              }\n          }\n          this.numerator.sort();\n          this.denominator.sort();\n      };\n      return Unit;\n  }(Node));\n  Unit.prototype.type = 'Unit';\n\n  //\n  // A number with a unit\n  //\n  var Dimension = /** @class */ (function (_super) {\n      __extends(Dimension, _super);\n      function Dimension(value, unit) {\n          var _this = _super.call(this) || this;\n          _this.value = parseFloat(value);\n          if (isNaN(_this.value)) {\n              throw new Error('Dimension is not a number.');\n          }\n          _this.unit = (unit && unit instanceof Unit) ? unit :\n              new Unit(unit ? [unit] : undefined);\n          _this.setParent(_this.unit, _this);\n          return _this;\n      }\n      Dimension.prototype.accept = function (visitor) {\n          this.unit = visitor.visit(this.unit);\n      };\n      Dimension.prototype.eval = function (context) {\n          return this;\n      };\n      Dimension.prototype.toColor = function () {\n          return new Color([this.value, this.value, this.value]);\n      };\n      Dimension.prototype.genCSS = function (context, output) {\n          if ((context && context.strictUnits) && !this.unit.isSingular()) {\n              throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\n          }\n          var value = this.fround(context, this.value);\n          var strValue = String(value);\n          if (value !== 0 && value < 0.000001 && value > -0.000001) {\n              // would be output 1e-6 etc.\n              strValue = value.toFixed(20).replace(/0+$/, '');\n          }\n          if (context && context.compress) {\n              // Zero values doesn't need a unit\n              if (value === 0 && this.unit.isLength()) {\n                  output.add(strValue);\n                  return;\n              }\n              // Float values doesn't need a leading zero\n              if (value > 0 && value < 1) {\n                  strValue = (strValue).substr(1);\n              }\n          }\n          output.add(strValue);\n          this.unit.genCSS(context, output);\n      };\n      // In an operation between two Dimensions,\n      // we default to the first Dimension's unit,\n      // so `1px + 2` will yield `3px`.\n      Dimension.prototype.operate = function (context, op, other) {\n          /* jshint noempty:false */\n          var value = this._operate(context, op, this.value, other.value);\n          var unit = this.unit.clone();\n          if (op === '+' || op === '-') {\n              if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n                  unit = other.unit.clone();\n                  if (this.unit.backupUnit) {\n                      unit.backupUnit = this.unit.backupUnit;\n                  }\n              }\n              else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\n              else {\n                  other = other.convertTo(this.unit.usedUnits());\n                  if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                      throw new Error(\"Incompatible units. Change the units or use the unit function. \" +\n                          (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\n                  }\n                  value = this._operate(context, op, this.value, other.value);\n              }\n          }\n          else if (op === '*') {\n              unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n              unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n              unit.cancel();\n          }\n          else if (op === '/') {\n              unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n              unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n              unit.cancel();\n          }\n          return new Dimension(value, unit);\n      };\n      Dimension.prototype.compare = function (other) {\n          var a;\n          var b;\n          if (!(other instanceof Dimension)) {\n              return undefined;\n          }\n          if (this.unit.isEmpty() || other.unit.isEmpty()) {\n              a = this;\n              b = other;\n          }\n          else {\n              a = this.unify();\n              b = other.unify();\n              if (a.unit.compare(b.unit) !== 0) {\n                  return undefined;\n              }\n          }\n          return Node.numericCompare(a.value, b.value);\n      };\n      Dimension.prototype.unify = function () {\n          return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n      };\n      Dimension.prototype.convertTo = function (conversions) {\n          var value = this.value;\n          var unit = this.unit.clone();\n          var i;\n          var groupName;\n          var group;\n          var targetUnit;\n          var derivedConversions = {};\n          var applyUnit;\n          if (typeof conversions === 'string') {\n              for (i in unitConversions) {\n                  if (unitConversions[i].hasOwnProperty(conversions)) {\n                      derivedConversions = {};\n                      derivedConversions[i] = conversions;\n                  }\n              }\n              conversions = derivedConversions;\n          }\n          applyUnit = function (atomicUnit, denominator) {\n              /* jshint loopfunc:true */\n              if (group.hasOwnProperty(atomicUnit)) {\n                  if (denominator) {\n                      value = value / (group[atomicUnit] / group[targetUnit]);\n                  }\n                  else {\n                      value = value * (group[atomicUnit] / group[targetUnit]);\n                  }\n                  return targetUnit;\n              }\n              return atomicUnit;\n          };\n          for (groupName in conversions) {\n              if (conversions.hasOwnProperty(groupName)) {\n                  targetUnit = conversions[groupName];\n                  group = unitConversions[groupName];\n                  unit.map(applyUnit);\n              }\n          }\n          unit.cancel();\n          return new Dimension(value, unit);\n      };\n      return Dimension;\n  }(Node));\n  Dimension.prototype.type = 'Dimension';\n\n  var MATH$1 = Math$1;\n  var Operation = /** @class */ (function (_super) {\n      __extends(Operation, _super);\n      function Operation(op, operands, isSpaced) {\n          var _this = _super.call(this) || this;\n          _this.op = op.trim();\n          _this.operands = operands;\n          _this.isSpaced = isSpaced;\n          return _this;\n      }\n      Operation.prototype.accept = function (visitor) {\n          this.operands = visitor.visitArray(this.operands);\n      };\n      Operation.prototype.eval = function (context) {\n          var a = this.operands[0].eval(context);\n          var b = this.operands[1].eval(context);\n          var op;\n          if (context.isMathOn(this.op)) {\n              op = this.op === './' ? '/' : this.op;\n              if (a instanceof Dimension && b instanceof Color) {\n                  a = a.toColor();\n              }\n              if (b instanceof Dimension && a instanceof Color) {\n                  b = b.toColor();\n              }\n              if (!a.operate) {\n                  if (a instanceof Operation && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\n                      return new Operation(this.op, [a, b], this.isSpaced);\n                  }\n                  throw { type: 'Operation',\n                      message: 'Operation on an invalid type' };\n              }\n              return a.operate(context, op, b);\n          }\n          else {\n              return new Operation(this.op, [a, b], this.isSpaced);\n          }\n      };\n      Operation.prototype.genCSS = function (context, output) {\n          this.operands[0].genCSS(context, output);\n          if (this.isSpaced) {\n              output.add(' ');\n          }\n          output.add(this.op);\n          if (this.isSpaced) {\n              output.add(' ');\n          }\n          this.operands[1].genCSS(context, output);\n      };\n      return Operation;\n  }(Node));\n  Operation.prototype.type = 'Operation';\n\n  var MATH$2 = Math$1;\n  var Expression = /** @class */ (function (_super) {\n      __extends(Expression, _super);\n      function Expression(value, noSpacing) {\n          var _this = _super.call(this) || this;\n          _this.value = value;\n          _this.noSpacing = noSpacing;\n          if (!value) {\n              throw new Error('Expression requires an array parameter');\n          }\n          return _this;\n      }\n      Expression.prototype.accept = function (visitor) {\n          this.value = visitor.visitArray(this.value);\n      };\n      Expression.prototype.eval = function (context) {\n          var returnValue;\n          var mathOn = context.isMathOn();\n          var inParenthesis = this.parens &&\n              (context.math !== MATH$2.STRICT_LEGACY || !this.parensInOp);\n          var doubleParen = false;\n          if (inParenthesis) {\n              context.inParenthesis();\n          }\n          if (this.value.length > 1) {\n              returnValue = new Expression(this.value.map(function (e) {\n                  if (!e.eval) {\n                      return e;\n                  }\n                  return e.eval(context);\n              }), this.noSpacing);\n          }\n          else if (this.value.length === 1) {\n              if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n                  doubleParen = true;\n              }\n              returnValue = this.value[0].eval(context);\n          }\n          else {\n              returnValue = this;\n          }\n          if (inParenthesis) {\n              context.outOfParenthesis();\n          }\n          if (this.parens && this.parensInOp && !mathOn && !doubleParen\n              && (!(returnValue instanceof Dimension))) {\n              returnValue = new Paren(returnValue);\n          }\n          return returnValue;\n      };\n      Expression.prototype.genCSS = function (context, output) {\n          for (var i_1 = 0; i_1 < this.value.length; i_1++) {\n              this.value[i_1].genCSS(context, output);\n              if (!this.noSpacing && i_1 + 1 < this.value.length) {\n                  output.add(' ');\n              }\n          }\n      };\n      Expression.prototype.throwAwayComments = function () {\n          this.value = this.value.filter(function (v) { return !(v instanceof Comment); });\n      };\n      return Expression;\n  }(Node));\n  Expression.prototype.type = 'Expression';\n\n  var functionCaller = /** @class */ (function () {\n      function functionCaller(name, context, index, currentFileInfo) {\n          this.name = name.toLowerCase();\n          this.index = index;\n          this.context = context;\n          this.currentFileInfo = currentFileInfo;\n          this.func = context.frames[0].functionRegistry.get(this.name);\n      }\n      functionCaller.prototype.isValid = function () {\n          return Boolean(this.func);\n      };\n      functionCaller.prototype.call = function (args) {\n          // This code is terrible and should be replaced as per this issue...\n          // https://github.com/less/less.js/issues/2477\n          if (Array.isArray(args)) {\n              args = args.filter(function (item) {\n                  if (item.type === 'Comment') {\n                      return false;\n                  }\n                  return true;\n              })\n                  .map(function (item) {\n                  if (item.type === 'Expression') {\n                      var subNodes = item.value.filter(function (item) {\n                          if (item.type === 'Comment') {\n                              return false;\n                          }\n                          return true;\n                      });\n                      if (subNodes.length === 1) {\n                          return subNodes[0];\n                      }\n                      else {\n                          return new Expression(subNodes);\n                      }\n                  }\n                  return item;\n              });\n          }\n          return this.func.apply(this, args);\n      };\n      return functionCaller;\n  }());\n\n  //\n  // A function call node.\n  //\n  var Call = /** @class */ (function (_super) {\n      __extends(Call, _super);\n      function Call(name, args, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.name = name;\n          _this.args = args;\n          _this.calc = name === 'calc';\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          return _this;\n      }\n      Call.prototype.accept = function (visitor) {\n          if (this.args) {\n              this.args = visitor.visitArray(this.args);\n          }\n      };\n      //\n      // When evaluating a function call,\n      // we either find the function in the functionRegistry,\n      // in which case we call it, passing the  evaluated arguments,\n      // if this returns null or we cannot find the function, we\n      // simply print it out as it appeared originally [2].\n      //\n      // The reason why we evaluate the arguments, is in the case where\n      // we try to pass a variable to a function, like: `saturate(@color)`.\n      // The function should receive the value, not the variable.\n      //\n      Call.prototype.eval = function (context) {\n          /**\n           * Turn off math for calc(), and switch back on for evaluating nested functions\n           */\n          var currentMathContext = context.mathOn;\n          context.mathOn = !this.calc;\n          if (this.calc || context.inCalc) {\n              context.enterCalc();\n          }\n          var args = this.args.map(function (a) { return a.eval(context); });\n          if (this.calc || context.inCalc) {\n              context.exitCalc();\n          }\n          context.mathOn = currentMathContext;\n          var result;\n          var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\n          if (funcCaller.isValid()) {\n              try {\n                  result = funcCaller.call(args);\n              }\n              catch (e) {\n                  throw {\n                      type: e.type || 'Runtime',\n                      message: \"error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\n                      index: this.getIndex(),\n                      filename: this.fileInfo().filename,\n                      line: e.lineNumber,\n                      column: e.columnNumber\n                  };\n              }\n              if (result !== null && result !== undefined) {\n                  // Results that that are not nodes are cast as Anonymous nodes\n                  // Falsy values or booleans are returned as empty nodes\n                  if (!(result instanceof Node)) {\n                      if (!result || result === true) {\n                          result = new Anonymous(null);\n                      }\n                      else {\n                          result = new Anonymous(result.toString());\n                      }\n                  }\n                  result._index = this._index;\n                  result._fileInfo = this._fileInfo;\n                  return result;\n              }\n          }\n          return new Call(this.name, args, this.getIndex(), this.fileInfo());\n      };\n      Call.prototype.genCSS = function (context, output) {\n          output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\n          for (var i_1 = 0; i_1 < this.args.length; i_1++) {\n              this.args[i_1].genCSS(context, output);\n              if (i_1 + 1 < this.args.length) {\n                  output.add(', ');\n              }\n          }\n          output.add(')');\n      };\n      return Call;\n  }(Node));\n  Call.prototype.type = 'Call';\n\n  var Variable = /** @class */ (function (_super) {\n      __extends(Variable, _super);\n      function Variable(name, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.name = name;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          return _this;\n      }\n      Variable.prototype.eval = function (context) {\n          var variable;\n          var name = this.name;\n          if (name.indexOf('@@') === 0) {\n              name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\n          }\n          if (this.evaluating) {\n              throw { type: 'Name',\n                  message: \"Recursive variable definition for \" + name,\n                  filename: this.fileInfo().filename,\n                  index: this.getIndex() };\n          }\n          this.evaluating = true;\n          variable = this.find(context.frames, function (frame) {\n              var v = frame.variable(name);\n              if (v) {\n                  if (v.important) {\n                      var importantScope = context.importantScope[context.importantScope.length - 1];\n                      importantScope.important = v.important;\n                  }\n                  // If in calc, wrap vars in a function call to cascade evaluate args first\n                  if (context.inCalc) {\n                      return (new Call('_SELF', [v.value])).eval(context);\n                  }\n                  else {\n                      return v.value.eval(context);\n                  }\n              }\n          });\n          if (variable) {\n              this.evaluating = false;\n              return variable;\n          }\n          else {\n              throw { type: 'Name',\n                  message: \"variable \" + name + \" is undefined\",\n                  filename: this.fileInfo().filename,\n                  index: this.getIndex() };\n          }\n      };\n      Variable.prototype.find = function (obj, fun) {\n          for (var i_1 = 0, r = void 0; i_1 < obj.length; i_1++) {\n              r = fun.call(obj, obj[i_1]);\n              if (r) {\n                  return r;\n              }\n          }\n          return null;\n      };\n      return Variable;\n  }(Node));\n  Variable.prototype.type = 'Variable';\n\n  var Property = /** @class */ (function (_super) {\n      __extends(Property, _super);\n      function Property(name, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.name = name;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          return _this;\n      }\n      Property.prototype.eval = function (context) {\n          var property;\n          var name = this.name;\n          // TODO: shorten this reference\n          var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n          if (this.evaluating) {\n              throw { type: 'Name',\n                  message: \"Recursive property reference for \" + name,\n                  filename: this.fileInfo().filename,\n                  index: this.getIndex() };\n          }\n          this.evaluating = true;\n          property = this.find(context.frames, function (frame) {\n              var v;\n              var vArr = frame.property(name);\n              if (vArr) {\n                  for (var i_1 = 0; i_1 < vArr.length; i_1++) {\n                      v = vArr[i_1];\n                      vArr[i_1] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\n                  }\n                  mergeRules(vArr);\n                  v = vArr[vArr.length - 1];\n                  if (v.important) {\n                      var importantScope = context.importantScope[context.importantScope.length - 1];\n                      importantScope.important = v.important;\n                  }\n                  v = v.value.eval(context);\n                  return v;\n              }\n          });\n          if (property) {\n              this.evaluating = false;\n              return property;\n          }\n          else {\n              throw { type: 'Name',\n                  message: \"Property '\" + name + \"' is undefined\",\n                  filename: this.currentFileInfo.filename,\n                  index: this.index };\n          }\n      };\n      Property.prototype.find = function (obj, fun) {\n          for (var i_2 = 0, r = void 0; i_2 < obj.length; i_2++) {\n              r = fun.call(obj, obj[i_2]);\n              if (r) {\n                  return r;\n              }\n          }\n          return null;\n      };\n      return Property;\n  }(Node));\n  Property.prototype.type = 'Property';\n\n  var Attribute = /** @class */ (function (_super) {\n      __extends(Attribute, _super);\n      function Attribute(key, op, value) {\n          var _this = _super.call(this) || this;\n          _this.key = key;\n          _this.op = op;\n          _this.value = value;\n          return _this;\n      }\n      Attribute.prototype.eval = function (context) {\n          return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n      };\n      Attribute.prototype.genCSS = function (context, output) {\n          output.add(this.toCSS(context));\n      };\n      Attribute.prototype.toCSS = function (context) {\n          var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n          if (this.op) {\n              value += this.op;\n              value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n          }\n          return \"[\" + value + \"]\";\n      };\n      return Attribute;\n  }(Node));\n  Attribute.prototype.type = 'Attribute';\n\n  var Quoted = /** @class */ (function (_super) {\n      __extends(Quoted, _super);\n      function Quoted(str, content, escaped, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.escaped = (escaped == null) ? true : escaped;\n          _this.value = content || '';\n          _this.quote = str.charAt(0);\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.variableRegex = /@\\{([\\w-]+)\\}/g;\n          _this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n          _this.allowRoot = escaped;\n          return _this;\n      }\n      Quoted.prototype.genCSS = function (context, output) {\n          if (!this.escaped) {\n              output.add(this.quote, this.fileInfo(), this.getIndex());\n          }\n          output.add(this.value);\n          if (!this.escaped) {\n              output.add(this.quote);\n          }\n      };\n      Quoted.prototype.containsVariables = function () {\n          return this.value.match(this.variableRegex);\n      };\n      Quoted.prototype.eval = function (context) {\n          var that = this;\n          var value = this.value;\n          var variableReplacement = function (_, name) {\n              var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n              return (v instanceof Quoted) ? v.value : v.toCSS();\n          };\n          var propertyReplacement = function (_, name) {\n              var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n              return (v instanceof Quoted) ? v.value : v.toCSS();\n          };\n          function iterativeReplace(value, regexp, replacementFnc) {\n              var evaluatedValue = value;\n              do {\n                  value = evaluatedValue.toString();\n                  evaluatedValue = value.replace(regexp, replacementFnc);\n              } while (value !== evaluatedValue);\n              return evaluatedValue;\n          }\n          value = iterativeReplace(value, this.variableRegex, variableReplacement);\n          value = iterativeReplace(value, this.propRegex, propertyReplacement);\n          return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n      };\n      Quoted.prototype.compare = function (other) {\n          // when comparing quoted strings allow the quote to differ\n          if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n              return Node.numericCompare(this.value, other.value);\n          }\n          else {\n              return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n          }\n      };\n      return Quoted;\n  }(Node));\n  Quoted.prototype.type = 'Quoted';\n\n  var URL = /** @class */ (function (_super) {\n      __extends(URL, _super);\n      function URL(val, index, currentFileInfo, isEvald) {\n          var _this = _super.call(this) || this;\n          _this.value = val;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.isEvald = isEvald;\n          return _this;\n      }\n      URL.prototype.accept = function (visitor) {\n          this.value = visitor.visit(this.value);\n      };\n      URL.prototype.genCSS = function (context, output) {\n          output.add('url(');\n          this.value.genCSS(context, output);\n          output.add(')');\n      };\n      URL.prototype.eval = function (context) {\n          var val = this.value.eval(context);\n          var rootpath;\n          if (!this.isEvald) {\n              // Add the rootpath if the URL requires a rewrite\n              rootpath = this.fileInfo() && this.fileInfo().rootpath;\n              if (typeof rootpath === 'string' &&\n                  typeof val.value === 'string' &&\n                  context.pathRequiresRewrite(val.value)) {\n                  if (!val.quote) {\n                      rootpath = escapePath(rootpath);\n                  }\n                  val.value = context.rewritePath(val.value, rootpath);\n              }\n              else {\n                  val.value = context.normalizePath(val.value);\n              }\n              // Add url args if enabled\n              if (context.urlArgs) {\n                  if (!val.value.match(/^\\s*data:/)) {\n                      var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                      var urlArgs = delimiter + context.urlArgs;\n                      if (val.value.indexOf('#') !== -1) {\n                          val.value = val.value.replace('#', urlArgs + \"#\");\n                      }\n                      else {\n                          val.value += urlArgs;\n                      }\n                  }\n              }\n          }\n          return new URL(val, this.getIndex(), this.fileInfo(), true);\n      };\n      return URL;\n  }(Node));\n  URL.prototype.type = 'Url';\n  function escapePath(path) {\n      return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\n  }\n\n  var Media = /** @class */ (function (_super) {\n      __extends(Media, _super);\n      function Media(value, features, index, currentFileInfo, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          var selectors = (new Selector([], null, null, _this._index, _this._fileInfo)).createEmptySelectors();\n          _this.features = new Value(features);\n          _this.rules = [new Ruleset(selectors, value)];\n          _this.rules[0].allowImports = true;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.allowRoot = true;\n          _this.setParent(selectors, _this);\n          _this.setParent(_this.features, _this);\n          _this.setParent(_this.rules, _this);\n          return _this;\n      }\n      Media.prototype.isRulesetLike = function () {\n          return true;\n      };\n      Media.prototype.accept = function (visitor) {\n          if (this.features) {\n              this.features = visitor.visit(this.features);\n          }\n          if (this.rules) {\n              this.rules = visitor.visitArray(this.rules);\n          }\n      };\n      Media.prototype.genCSS = function (context, output) {\n          output.add('@media ', this._fileInfo, this._index);\n          this.features.genCSS(context, output);\n          this.outputRuleset(context, output, this.rules);\n      };\n      Media.prototype.eval = function (context) {\n          if (!context.mediaBlocks) {\n              context.mediaBlocks = [];\n              context.mediaPath = [];\n          }\n          var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n          if (this.debugInfo) {\n              this.rules[0].debugInfo = this.debugInfo;\n              media.debugInfo = this.debugInfo;\n          }\n          media.features = this.features.eval(context);\n          context.mediaPath.push(media);\n          context.mediaBlocks.push(media);\n          this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n          context.frames.unshift(this.rules[0]);\n          media.rules = [this.rules[0].eval(context)];\n          context.frames.shift();\n          context.mediaPath.pop();\n          return context.mediaPath.length === 0 ? media.evalTop(context) :\n              media.evalNested(context);\n      };\n      Media.prototype.evalTop = function (context) {\n          var result = this;\n          // Render all dependent Media blocks.\n          if (context.mediaBlocks.length > 1) {\n              var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n              result = new Ruleset(selectors, context.mediaBlocks);\n              result.multiMedia = true;\n              result.copyVisibilityInfo(this.visibilityInfo());\n              this.setParent(result, this);\n          }\n          delete context.mediaBlocks;\n          delete context.mediaPath;\n          return result;\n      };\n      Media.prototype.evalNested = function (context) {\n          var i;\n          var value;\n          var path = context.mediaPath.concat([this]);\n          // Extract the media-query conditions separated with `,` (OR).\n          for (i = 0; i < path.length; i++) {\n              value = path[i].features instanceof Value ?\n                  path[i].features.value : path[i].features;\n              path[i] = Array.isArray(value) ? value : [value];\n          }\n          // Trace all permutations to generate the resulting media-query.\n          //\n          // (a, b and c) with nested (d, e) ->\n          //    a and d\n          //    a and e\n          //    b and c and d\n          //    b and c and e\n          this.features = new Value(this.permute(path).map(function (path) {\n              path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\n              for (i = path.length - 1; i > 0; i--) {\n                  path.splice(i, 0, new Anonymous('and'));\n              }\n              return new Expression(path);\n          }));\n          this.setParent(this.features, this);\n          // Fake a tree-node that doesn't output anything.\n          return new Ruleset([], []);\n      };\n      Media.prototype.permute = function (arr) {\n          if (arr.length === 0) {\n              return [];\n          }\n          else if (arr.length === 1) {\n              return arr[0];\n          }\n          else {\n              var result = [];\n              var rest = this.permute(arr.slice(1));\n              for (var i_1 = 0; i_1 < rest.length; i_1++) {\n                  for (var j = 0; j < arr[0].length; j++) {\n                      result.push([arr[0][j]].concat(rest[i_1]));\n                  }\n              }\n              return result;\n          }\n      };\n      Media.prototype.bubbleSelectors = function (selectors) {\n          if (!selectors) {\n              return;\n          }\n          this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\n          this.setParent(this.rules, this);\n      };\n      return Media;\n  }(AtRule));\n  Media.prototype.type = 'Media';\n\n  //\n  // CSS @import node\n  //\n  // The general strategy here is that we don't want to wait\n  // for the parsing to be completed, before we start importing\n  // the file. That's because in the context of a browser,\n  // most of the time will be spent waiting for the server to respond.\n  //\n  // On creation, we push the import path to our import queue, though\n  // `import,push`, we also pass it a callback, which it'll call once\n  // the file has been fetched, and parsed.\n  //\n  var Import = /** @class */ (function (_super) {\n      __extends(Import, _super);\n      function Import(path, features, options, index, currentFileInfo, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.options = options;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.path = path;\n          _this.features = features;\n          _this.allowRoot = true;\n          if (_this.options.less !== undefined || _this.options.inline) {\n              _this.css = !_this.options.less || _this.options.inline;\n          }\n          else {\n              var pathValue = _this.getPath();\n              if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n                  _this.css = true;\n              }\n          }\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.setParent(_this.features, _this);\n          _this.setParent(_this.path, _this);\n          return _this;\n      }\n      Import.prototype.accept = function (visitor) {\n          if (this.features) {\n              this.features = visitor.visit(this.features);\n          }\n          this.path = visitor.visit(this.path);\n          if (!this.options.isPlugin && !this.options.inline && this.root) {\n              this.root = visitor.visit(this.root);\n          }\n      };\n      Import.prototype.genCSS = function (context, output) {\n          if (this.css && this.path._fileInfo.reference === undefined) {\n              output.add('@import ', this._fileInfo, this._index);\n              this.path.genCSS(context, output);\n              if (this.features) {\n                  output.add(' ');\n                  this.features.genCSS(context, output);\n              }\n              output.add(';');\n          }\n      };\n      Import.prototype.getPath = function () {\n          return (this.path instanceof URL) ?\n              this.path.value.value : this.path.value;\n      };\n      Import.prototype.isVariableImport = function () {\n          var path = this.path;\n          if (path instanceof URL) {\n              path = path.value;\n          }\n          if (path instanceof Quoted) {\n              return path.containsVariables();\n          }\n          return true;\n      };\n      Import.prototype.evalForImport = function (context) {\n          var path = this.path;\n          if (path instanceof URL) {\n              path = path.value;\n          }\n          return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n      };\n      Import.prototype.evalPath = function (context) {\n          var path = this.path.eval(context);\n          var fileInfo = this._fileInfo;\n          if (!(path instanceof URL)) {\n              // Add the rootpath if the URL requires a rewrite\n              var pathValue = path.value;\n              if (fileInfo &&\n                  pathValue &&\n                  context.pathRequiresRewrite(pathValue)) {\n                  path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n              }\n              else {\n                  path.value = context.normalizePath(path.value);\n              }\n          }\n          return path;\n      };\n      Import.prototype.eval = function (context) {\n          var result = this.doEval(context);\n          if (this.options.reference || this.blocksVisibility()) {\n              if (result.length || result.length === 0) {\n                  result.forEach(function (node) {\n                      node.addVisibilityBlock();\n                  });\n              }\n              else {\n                  result.addVisibilityBlock();\n              }\n          }\n          return result;\n      };\n      Import.prototype.doEval = function (context) {\n          var ruleset;\n          var registry;\n          var features = this.features && this.features.eval(context);\n          if (this.options.isPlugin) {\n              if (this.root && this.root.eval) {\n                  try {\n                      this.root.eval(context);\n                  }\n                  catch (e) {\n                      e.message = 'Plugin error during evaluation';\n                      throw new LessError(e, this.root.imports, this.root.filename);\n                  }\n              }\n              registry = context.frames[0] && context.frames[0].functionRegistry;\n              if (registry && this.root && this.root.functions) {\n                  registry.addMultiple(this.root.functions);\n              }\n              return [];\n          }\n          if (this.skip) {\n              if (typeof this.skip === 'function') {\n                  this.skip = this.skip();\n              }\n              if (this.skip) {\n                  return [];\n              }\n          }\n          if (this.options.inline) {\n              var contents = new Anonymous(this.root, 0, {\n                  filename: this.importedFilename,\n                  reference: this.path._fileInfo && this.path._fileInfo.reference\n              }, true, true);\n              return this.features ? new Media([contents], this.features.value) : [contents];\n          }\n          else if (this.css) {\n              var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n              if (!newImport.css && this.error) {\n                  throw this.error;\n              }\n              return newImport;\n          }\n          else {\n              ruleset = new Ruleset(null, copyArray(this.root.rules));\n              ruleset.evalImports(context);\n              return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n          }\n      };\n      return Import;\n  }(Node));\n  Import.prototype.type = 'Import';\n\n  var JsEvalNode = /** @class */ (function (_super) {\n      __extends(JsEvalNode, _super);\n      function JsEvalNode() {\n          return _super !== null && _super.apply(this, arguments) || this;\n      }\n      JsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\n          var result;\n          var that = this;\n          var evalContext = {};\n          if (!context.javascriptEnabled) {\n              throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\n                  filename: this.fileInfo().filename,\n                  index: this.getIndex() };\n          }\n          expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) { return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context)); });\n          try {\n              expression = new Function(\"return (\" + expression + \")\");\n          }\n          catch (e) {\n              throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\n                  filename: this.fileInfo().filename,\n                  index: this.getIndex() };\n          }\n          var variables = context.frames[0].variables();\n          for (var k in variables) {\n              if (variables.hasOwnProperty(k)) {\n                  /* jshint loopfunc:true */\n                  evalContext[k.slice(1)] = {\n                      value: variables[k].value,\n                      toJS: function () {\n                          return this.value.eval(context).toCSS();\n                      }\n                  };\n              }\n          }\n          try {\n              result = expression.call(evalContext);\n          }\n          catch (e) {\n              throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\n                  filename: this.fileInfo().filename,\n                  index: this.getIndex() };\n          }\n          return result;\n      };\n      JsEvalNode.prototype.jsify = function (obj) {\n          if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n              return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\n          }\n          else {\n              return obj.toCSS();\n          }\n      };\n      return JsEvalNode;\n  }(Node));\n\n  var JavaScript = /** @class */ (function (_super) {\n      __extends(JavaScript, _super);\n      function JavaScript(string, escaped, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.escaped = escaped;\n          _this.expression = string;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          return _this;\n      }\n      JavaScript.prototype.eval = function (context) {\n          var result = this.evaluateJavaScript(this.expression, context);\n          var type = typeof result;\n          if (type === 'number' && !isNaN(result)) {\n              return new Dimension(result);\n          }\n          else if (type === 'string') {\n              return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\n          }\n          else if (Array.isArray(result)) {\n              return new Anonymous(result.join(', '));\n          }\n          else {\n              return new Anonymous(result);\n          }\n      };\n      return JavaScript;\n  }(JsEvalNode));\n  JavaScript.prototype.type = 'JavaScript';\n\n  var Assignment = /** @class */ (function (_super) {\n      __extends(Assignment, _super);\n      function Assignment(key, val) {\n          var _this = _super.call(this) || this;\n          _this.key = key;\n          _this.value = val;\n          return _this;\n      }\n      Assignment.prototype.accept = function (visitor) {\n          this.value = visitor.visit(this.value);\n      };\n      Assignment.prototype.eval = function (context) {\n          if (this.value.eval) {\n              return new Assignment(this.key, this.value.eval(context));\n          }\n          return this;\n      };\n      Assignment.prototype.genCSS = function (context, output) {\n          output.add(this.key + \"=\");\n          if (this.value.genCSS) {\n              this.value.genCSS(context, output);\n          }\n          else {\n              output.add(this.value);\n          }\n      };\n      return Assignment;\n  }(Node));\n  Assignment.prototype.type = 'Assignment';\n\n  var Condition = /** @class */ (function (_super) {\n      __extends(Condition, _super);\n      function Condition(op, l, r, i, negate) {\n          var _this = _super.call(this) || this;\n          _this.op = op.trim();\n          _this.lvalue = l;\n          _this.rvalue = r;\n          _this._index = i;\n          _this.negate = negate;\n          return _this;\n      }\n      Condition.prototype.accept = function (visitor) {\n          this.lvalue = visitor.visit(this.lvalue);\n          this.rvalue = visitor.visit(this.rvalue);\n      };\n      Condition.prototype.eval = function (context) {\n          var result = (function (op, a, b) {\n              switch (op) {\n                  case 'and': return a && b;\n                  case 'or': return a || b;\n                  default:\n                      switch (Node.compare(a, b)) {\n                          case -1:\n                              return op === '<' || op === '=<' || op === '<=';\n                          case 0:\n                              return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                          case 1:\n                              return op === '>' || op === '>=';\n                          default:\n                              return false;\n                      }\n              }\n          })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n          return this.negate ? !result : result;\n      };\n      return Condition;\n  }(Node));\n  Condition.prototype.type = 'Condition';\n\n  var UnicodeDescriptor = /** @class */ (function (_super) {\n      __extends(UnicodeDescriptor, _super);\n      function UnicodeDescriptor(value) {\n          var _this = _super.call(this) || this;\n          _this.value = value;\n          return _this;\n      }\n      return UnicodeDescriptor;\n  }(Node));\n  UnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\n  var Negative = /** @class */ (function (_super) {\n      __extends(Negative, _super);\n      function Negative(node) {\n          var _this = _super.call(this) || this;\n          _this.value = node;\n          return _this;\n      }\n      Negative.prototype.genCSS = function (context, output) {\n          output.add('-');\n          this.value.genCSS(context, output);\n      };\n      Negative.prototype.eval = function (context) {\n          if (context.isMathOn()) {\n              return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n          }\n          return new Negative(this.value.eval(context));\n      };\n      return Negative;\n  }(Node));\n  Negative.prototype.type = 'Negative';\n\n  var Extend = /** @class */ (function (_super) {\n      __extends(Extend, _super);\n      function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.selector = selector;\n          _this.option = option;\n          _this.object_id = Extend.next_id++;\n          _this.parent_ids = [_this.object_id];\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.allowRoot = true;\n          switch (option) {\n              case 'all':\n                  _this.allowBefore = true;\n                  _this.allowAfter = true;\n                  break;\n              default:\n                  _this.allowBefore = false;\n                  _this.allowAfter = false;\n                  break;\n          }\n          _this.setParent(_this.selector, _this);\n          return _this;\n      }\n      Extend.prototype.accept = function (visitor) {\n          this.selector = visitor.visit(this.selector);\n      };\n      Extend.prototype.eval = function (context) {\n          return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      };\n      Extend.prototype.clone = function (context) {\n          return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      };\n      // it concatenates (joins) all selectors in selector array\n      Extend.prototype.findSelfSelectors = function (selectors) {\n          var selfElements = [];\n          var i;\n          var selectorElements;\n          for (i = 0; i < selectors.length; i++) {\n              selectorElements = selectors[i].elements;\n              // duplicate the logic in genCSS function inside the selector node.\n              // future TODO - move both logics into the selector joiner visitor\n              if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n                  selectorElements[0].combinator.value = ' ';\n              }\n              selfElements = selfElements.concat(selectors[i].elements);\n          }\n          this.selfSelectors = [new Selector(selfElements)];\n          this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n      };\n      return Extend;\n  }(Node));\n  Extend.next_id = 0;\n  Extend.prototype.type = 'Extend';\n\n  var VariableCall = /** @class */ (function (_super) {\n      __extends(VariableCall, _super);\n      function VariableCall(variable, index, currentFileInfo) {\n          var _this = _super.call(this) || this;\n          _this.variable = variable;\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.allowRoot = true;\n          return _this;\n      }\n      VariableCall.prototype.eval = function (context) {\n          var rules;\n          var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n          var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\n          if (!detachedRuleset.ruleset) {\n              if (detachedRuleset.rules) {\n                  rules = detachedRuleset;\n              }\n              else if (Array.isArray(detachedRuleset)) {\n                  rules = new Ruleset('', detachedRuleset);\n              }\n              else if (Array.isArray(detachedRuleset.value)) {\n                  rules = new Ruleset('', detachedRuleset.value);\n              }\n              else {\n                  throw error;\n              }\n              detachedRuleset = new DetachedRuleset(rules);\n          }\n          if (detachedRuleset.ruleset) {\n              return detachedRuleset.callEval(context);\n          }\n          throw error;\n      };\n      return VariableCall;\n  }(Node));\n  VariableCall.prototype.type = 'VariableCall';\n\n  var NamespaceValue = /** @class */ (function (_super) {\n      __extends(NamespaceValue, _super);\n      function NamespaceValue(ruleCall, lookups, index, fileInfo) {\n          var _this = _super.call(this) || this;\n          _this.value = ruleCall;\n          _this.lookups = lookups;\n          _this._index = index;\n          _this._fileInfo = fileInfo;\n          return _this;\n      }\n      NamespaceValue.prototype.eval = function (context) {\n          var i;\n          var name;\n          var rules = this.value.eval(context);\n          for (i = 0; i < this.lookups.length; i++) {\n              name = this.lookups[i];\n              /**\n               * Eval'd DRs return rulesets.\n               * Eval'd mixins return rules, so let's make a ruleset if we need it.\n               * We need to do this because of late parsing of values\n               */\n              if (Array.isArray(rules)) {\n                  rules = new Ruleset([new Selector()], rules);\n              }\n              if (name === '') {\n                  rules = rules.lastDeclaration();\n              }\n              else if (name.charAt(0) === '@') {\n                  if (name.charAt(1) === '@') {\n                      name = \"@\" + new Variable(name.substr(1)).eval(context).value;\n                  }\n                  if (rules.variables) {\n                      rules = rules.variable(name);\n                  }\n                  if (!rules) {\n                      throw { type: 'Name',\n                          message: \"variable \" + name + \" not found\",\n                          filename: this.fileInfo().filename,\n                          index: this.getIndex() };\n                  }\n              }\n              else {\n                  if (name.substring(0, 2) === '$@') {\n                      name = \"$\" + new Variable(name.substr(1)).eval(context).value;\n                  }\n                  else {\n                      name = name.charAt(0) === '$' ? name : \"$\" + name;\n                  }\n                  if (rules.properties) {\n                      rules = rules.property(name);\n                  }\n                  if (!rules) {\n                      throw { type: 'Name',\n                          message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\n                          filename: this.fileInfo().filename,\n                          index: this.getIndex() };\n                  }\n                  // Properties are an array of values, since a ruleset can have multiple props.\n                  // We pick the last one (the \"cascaded\" value)\n                  rules = rules[rules.length - 1];\n              }\n              if (rules.value) {\n                  rules = rules.eval(context).value;\n              }\n              if (rules.ruleset) {\n                  rules = rules.ruleset.eval(context);\n              }\n          }\n          return rules;\n      };\n      return NamespaceValue;\n  }(Node));\n  NamespaceValue.prototype.type = 'NamespaceValue';\n\n  var Definition = /** @class */ (function (_super) {\n      __extends(Definition, _super);\n      function Definition(name, params, rules, condition, variadic, frames, visibilityInfo) {\n          var _this = _super.call(this) || this;\n          _this.name = name || 'anonymous mixin';\n          _this.selectors = [new Selector([new Element(null, name, false, _this._index, _this._fileInfo)])];\n          _this.params = params;\n          _this.condition = condition;\n          _this.variadic = variadic;\n          _this.arity = params.length;\n          _this.rules = rules;\n          _this._lookups = {};\n          var optionalParameters = [];\n          _this.required = params.reduce(function (count, p) {\n              if (!p.name || (p.name && !p.value)) {\n                  return count + 1;\n              }\n              else {\n                  optionalParameters.push(p.name);\n                  return count;\n              }\n          }, 0);\n          _this.optionalParameters = optionalParameters;\n          _this.frames = frames;\n          _this.copyVisibilityInfo(visibilityInfo);\n          _this.allowRoot = true;\n          return _this;\n      }\n      Definition.prototype.accept = function (visitor) {\n          if (this.params && this.params.length) {\n              this.params = visitor.visitArray(this.params);\n          }\n          this.rules = visitor.visitArray(this.rules);\n          if (this.condition) {\n              this.condition = visitor.visit(this.condition);\n          }\n      };\n      Definition.prototype.evalParams = function (context, mixinEnv, args, evaldArguments) {\n          /* jshint boss:true */\n          var frame = new Ruleset(null, null);\n          var varargs;\n          var arg;\n          var params = copyArray(this.params);\n          var i;\n          var j;\n          var val;\n          var name;\n          var isNamedFound;\n          var argIndex;\n          var argsLength = 0;\n          if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n              frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n          }\n          mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n          if (args) {\n              args = copyArray(args);\n              argsLength = args.length;\n              for (i = 0; i < argsLength; i++) {\n                  arg = args[i];\n                  if (name = (arg && arg.name)) {\n                      isNamedFound = false;\n                      for (j = 0; j < params.length; j++) {\n                          if (!evaldArguments[j] && name === params[j].name) {\n                              evaldArguments[j] = arg.value.eval(context);\n                              frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                              isNamedFound = true;\n                              break;\n                          }\n                      }\n                      if (isNamedFound) {\n                          args.splice(i, 1);\n                          i--;\n                          continue;\n                      }\n                      else {\n                          throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\n                      }\n                  }\n              }\n          }\n          argIndex = 0;\n          for (i = 0; i < params.length; i++) {\n              if (evaldArguments[i]) {\n                  continue;\n              }\n              arg = args && args[argIndex];\n              if (name = params[i].name) {\n                  if (params[i].variadic) {\n                      varargs = [];\n                      for (j = argIndex; j < argsLength; j++) {\n                          varargs.push(args[j].value.eval(context));\n                      }\n                      frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n                  }\n                  else {\n                      val = arg && arg.value;\n                      if (val) {\n                          // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                          if (Array.isArray(val)) {\n                              val = new DetachedRuleset(new Ruleset('', val));\n                          }\n                          else {\n                              val = val.eval(context);\n                          }\n                      }\n                      else if (params[i].value) {\n                          val = params[i].value.eval(mixinEnv);\n                          frame.resetCache();\n                      }\n                      else {\n                          throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\n                      }\n                      frame.prependRule(new Declaration(name, val));\n                      evaldArguments[i] = val;\n                  }\n              }\n              if (params[i].variadic && args) {\n                  for (j = argIndex; j < argsLength; j++) {\n                      evaldArguments[j] = args[j].value.eval(context);\n                  }\n              }\n              argIndex++;\n          }\n          return frame;\n      };\n      Definition.prototype.makeImportant = function () {\n          var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n              if (r.makeImportant) {\n                  return r.makeImportant(true);\n              }\n              else {\n                  return r;\n              }\n          });\n          var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n          return result;\n      };\n      Definition.prototype.eval = function (context) {\n          return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\n      };\n      Definition.prototype.evalCall = function (context, args, important) {\n          var _arguments = [];\n          var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n          var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n          var rules;\n          var ruleset;\n          frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n          rules = copyArray(this.rules);\n          ruleset = new Ruleset(null, rules);\n          ruleset.originalRuleset = this;\n          ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n          if (important) {\n              ruleset = ruleset.makeImportant();\n          }\n          return ruleset;\n      };\n      Definition.prototype.matchCondition = function (args, context) {\n          if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n              .concat(this.frames || []) // the parent namespace/mixin frames\n              .concat(context.frames)))) { // the current environment frames\n              return false;\n          }\n          return true;\n      };\n      Definition.prototype.matchArgs = function (args, context) {\n          var allArgsCnt = (args && args.length) || 0;\n          var len;\n          var optionalParameters = this.optionalParameters;\n          var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n              if (optionalParameters.indexOf(p.name) < 0) {\n                  return count + 1;\n              }\n              else {\n                  return count;\n              }\n          }, 0);\n          if (!this.variadic) {\n              if (requiredArgsCnt < this.required) {\n                  return false;\n              }\n              if (allArgsCnt > this.params.length) {\n                  return false;\n              }\n          }\n          else {\n              if (requiredArgsCnt < (this.required - 1)) {\n                  return false;\n              }\n          }\n          // check patterns\n          len = Math.min(requiredArgsCnt, this.arity);\n          for (var i_1 = 0; i_1 < len; i_1++) {\n              if (!this.params[i_1].name && !this.params[i_1].variadic) {\n                  if (args[i_1].value.eval(context).toCSS() != this.params[i_1].value.eval(context).toCSS()) {\n                      return false;\n                  }\n              }\n          }\n          return true;\n      };\n      return Definition;\n  }(Ruleset));\n  Definition.prototype.type = 'MixinDefinition';\n  Definition.prototype.evalFirst = true;\n\n  var MixinCall = /** @class */ (function (_super) {\n      __extends(MixinCall, _super);\n      function MixinCall(elements, args, index, currentFileInfo, important) {\n          var _this = _super.call(this) || this;\n          _this.selector = new Selector(elements);\n          _this.arguments = args || [];\n          _this._index = index;\n          _this._fileInfo = currentFileInfo;\n          _this.important = important;\n          _this.allowRoot = true;\n          _this.setParent(_this.selector, _this);\n          return _this;\n      }\n      MixinCall.prototype.accept = function (visitor) {\n          if (this.selector) {\n              this.selector = visitor.visit(this.selector);\n          }\n          if (this.arguments.length) {\n              this.arguments = visitor.visitArray(this.arguments);\n          }\n      };\n      MixinCall.prototype.eval = function (context) {\n          var mixins;\n          var mixin;\n          var mixinPath;\n          var args = [];\n          var arg;\n          var argValue;\n          var rules = [];\n          var match = false;\n          var i;\n          var m;\n          var f;\n          var isRecursive;\n          var isOneFound;\n          var candidates = [];\n          var candidate;\n          var conditionResult = [];\n          var defaultResult;\n          var defFalseEitherCase = -1;\n          var defNone = 0;\n          var defTrue = 1;\n          var defFalse = 2;\n          var count;\n          var originalRuleset;\n          var noArgumentsFilter;\n          this.selector = this.selector.eval(context);\n          function calcDefGroup(mixin, mixinPath) {\n              var f;\n              var p;\n              var namespace;\n              for (f = 0; f < 2; f++) {\n                  conditionResult[f] = true;\n                  defaultFunc.value(f);\n                  for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                      namespace = mixinPath[p];\n                      if (namespace.matchCondition) {\n                          conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                      }\n                  }\n                  if (mixin.matchCondition) {\n                      conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n                  }\n              }\n              if (conditionResult[0] || conditionResult[1]) {\n                  if (conditionResult[0] != conditionResult[1]) {\n                      return conditionResult[1] ?\n                          defTrue : defFalse;\n                  }\n                  return defNone;\n              }\n              return defFalseEitherCase;\n          }\n          for (i = 0; i < this.arguments.length; i++) {\n              arg = this.arguments[i];\n              argValue = arg.value.eval(context);\n              if (arg.expand && Array.isArray(argValue.value)) {\n                  argValue = argValue.value;\n                  for (m = 0; m < argValue.length; m++) {\n                      args.push({ value: argValue[m] });\n                  }\n              }\n              else {\n                  args.push({ name: arg.name, value: argValue });\n              }\n          }\n          noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\n          for (i = 0; i < context.frames.length; i++) {\n              if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n                  isOneFound = true;\n                  // To make `default()` function independent of definition order we have two \"subpasses\" here.\n                  // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n                  // and build candidate list with corresponding flags. Then, when we know all possible matches,\n                  // we make a final decision.\n                  for (m = 0; m < mixins.length; m++) {\n                      mixin = mixins[m].rule;\n                      mixinPath = mixins[m].path;\n                      isRecursive = false;\n                      for (f = 0; f < context.frames.length; f++) {\n                          if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                              isRecursive = true;\n                              break;\n                          }\n                      }\n                      if (isRecursive) {\n                          continue;\n                      }\n                      if (mixin.matchArgs(args, context)) {\n                          candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\n                          if (candidate.group !== defFalseEitherCase) {\n                              candidates.push(candidate);\n                          }\n                          match = true;\n                      }\n                  }\n                  defaultFunc.reset();\n                  count = [0, 0, 0];\n                  for (m = 0; m < candidates.length; m++) {\n                      count[candidates[m].group]++;\n                  }\n                  if (count[defNone] > 0) {\n                      defaultResult = defFalse;\n                  }\n                  else {\n                      defaultResult = defTrue;\n                      if ((count[defTrue] + count[defFalse]) > 1) {\n                          throw { type: 'Runtime',\n                              message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\n                              index: this.getIndex(), filename: this.fileInfo().filename };\n                      }\n                  }\n                  for (m = 0; m < candidates.length; m++) {\n                      candidate = candidates[m].group;\n                      if ((candidate === defNone) || (candidate === defaultResult)) {\n                          try {\n                              mixin = candidates[m].mixin;\n                              if (!(mixin instanceof Definition)) {\n                                  originalRuleset = mixin.originalRuleset || mixin;\n                                  mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                                  mixin.originalRuleset = originalRuleset;\n                              }\n                              var newRules = mixin.evalCall(context, args, this.important).rules;\n                              this._setVisibilityToReplacement(newRules);\n                              Array.prototype.push.apply(rules, newRules);\n                          }\n                          catch (e) {\n                              throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                          }\n                      }\n                  }\n                  if (match) {\n                      return rules;\n                  }\n              }\n          }\n          if (isOneFound) {\n              throw { type: 'Runtime',\n                  message: \"No matching definition was found for `\" + this.format(args) + \"`\",\n                  index: this.getIndex(), filename: this.fileInfo().filename };\n          }\n          else {\n              throw { type: 'Name',\n                  message: this.selector.toCSS().trim() + \" is undefined\",\n                  index: this.getIndex(), filename: this.fileInfo().filename };\n          }\n      };\n      MixinCall.prototype._setVisibilityToReplacement = function (replacement) {\n          var i;\n          var rule;\n          if (this.blocksVisibility()) {\n              for (i = 0; i < replacement.length; i++) {\n                  rule = replacement[i];\n                  rule.addVisibilityBlock();\n              }\n          }\n      };\n      MixinCall.prototype.format = function (args) {\n          return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\n              var argValue = '';\n              if (a.name) {\n                  argValue += a.name + \":\";\n              }\n              if (a.value.toCSS) {\n                  argValue += a.value.toCSS();\n              }\n              else {\n                  argValue += '???';\n              }\n              return argValue;\n          }).join(', ') : '') + \")\";\n      };\n      return MixinCall;\n  }(Node));\n  MixinCall.prototype.type = 'MixinCall';\n\n  var tree = {\n      Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\n      Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\n      Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\n      Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\n      Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\n      Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\n      Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\n      mixin: {\n          Call: MixinCall,\n          Definition: Definition\n      }\n  };\n\n  var logger = {\n      error: function (msg) {\n          this._fireEvent('error', msg);\n      },\n      warn: function (msg) {\n          this._fireEvent('warn', msg);\n      },\n      info: function (msg) {\n          this._fireEvent('info', msg);\n      },\n      debug: function (msg) {\n          this._fireEvent('debug', msg);\n      },\n      addListener: function (listener) {\n          this._listeners.push(listener);\n      },\n      removeListener: function (listener) {\n          for (var i_1 = 0; i_1 < this._listeners.length; i_1++) {\n              if (this._listeners[i_1] === listener) {\n                  this._listeners.splice(i_1, 1);\n                  return;\n              }\n          }\n      },\n      _fireEvent: function (type, msg) {\n          for (var i_2 = 0; i_2 < this._listeners.length; i_2++) {\n              var logFunction = this._listeners[i_2][type];\n              if (logFunction) {\n                  logFunction(msg);\n              }\n          }\n      },\n      _listeners: []\n  };\n\n  /**\n   * @todo Document why this abstraction exists, and the relationship between\n   *       environment, file managers, and plugin manager\n   */\n  var environment = /** @class */ (function () {\n      function environment(externalEnvironment, fileManagers) {\n          this.fileManagers = fileManagers || [];\n          externalEnvironment = externalEnvironment || {};\n          var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n          var requiredFunctions = [];\n          var functions = requiredFunctions.concat(optionalFunctions);\n          for (var i_1 = 0; i_1 < functions.length; i_1++) {\n              var propName = functions[i_1];\n              var environmentFunc = externalEnvironment[propName];\n              if (environmentFunc) {\n                  this[propName] = environmentFunc.bind(externalEnvironment);\n              }\n              else if (i_1 < requiredFunctions.length) {\n                  this.warn(\"missing required function in environment - \" + propName);\n              }\n          }\n      }\n      environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n          if (!filename) {\n              logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n          }\n          if (currentDirectory == null) {\n              logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n          }\n          var fileManagers = this.fileManagers;\n          if (options.pluginManager) {\n              fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n          }\n          for (var i_2 = fileManagers.length - 1; i_2 >= 0; i_2--) {\n              var fileManager = fileManagers[i_2];\n              if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n                  return fileManager;\n              }\n          }\n          return null;\n      };\n      environment.prototype.addFileManager = function (fileManager) {\n          this.fileManagers.push(fileManager);\n      };\n      environment.prototype.clearFileManagers = function () {\n          this.fileManagers = [];\n      };\n      return environment;\n  }());\n\n  var AbstractFileManager = /** @class */ (function () {\n      function AbstractFileManager() {\n      }\n      AbstractFileManager.prototype.getPath = function (filename) {\n          var j = filename.lastIndexOf('?');\n          if (j > 0) {\n              filename = filename.slice(0, j);\n          }\n          j = filename.lastIndexOf('/');\n          if (j < 0) {\n              j = filename.lastIndexOf('\\\\');\n          }\n          if (j < 0) {\n              return '';\n          }\n          return filename.slice(0, j + 1);\n      };\n      AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\n          return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n      };\n      AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\n          return this.tryAppendExtension(path, '.less');\n      };\n      AbstractFileManager.prototype.supportsSync = function () { return false; };\n      AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () { return false; };\n      AbstractFileManager.prototype.isPathAbsolute = function (filename) {\n          return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n      };\n      // TODO: pull out / replace?\n      AbstractFileManager.prototype.join = function (basePath, laterPath) {\n          if (!basePath) {\n              return laterPath;\n          }\n          return basePath + laterPath;\n      };\n      AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\n          // diff between two paths to create a relative path\n          var urlParts = this.extractUrlParts(url);\n          var baseUrlParts = this.extractUrlParts(baseUrl);\n          var i;\n          var max;\n          var urlDirectories;\n          var baseUrlDirectories;\n          var diff = '';\n          if (urlParts.hostPart !== baseUrlParts.hostPart) {\n              return '';\n          }\n          max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n          for (i = 0; i < max; i++) {\n              if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n                  break;\n              }\n          }\n          baseUrlDirectories = baseUrlParts.directories.slice(i);\n          urlDirectories = urlParts.directories.slice(i);\n          for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n              diff += '../';\n          }\n          for (i = 0; i < urlDirectories.length - 1; i++) {\n              diff += urlDirectories[i] + \"/\";\n          }\n          return diff;\n      };\n      // helper function, not part of API\n      AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\n          // urlParts[1] = protocol://hostname/ OR /\n          // urlParts[2] = / if path relative to host base\n          // urlParts[3] = directories\n          // urlParts[4] = filename\n          // urlParts[5] = parameters\n          var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n          var urlParts = url.match(urlPartsRegex);\n          var returner = {};\n          var rawDirectories = [];\n          var directories = [];\n          var i;\n          var baseUrlParts;\n          if (!urlParts) {\n              throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n          }\n          // Stylesheets in IE don't always return the full path\n          if (baseUrl && (!urlParts[1] || urlParts[2])) {\n              baseUrlParts = baseUrl.match(urlPartsRegex);\n              if (!baseUrlParts) {\n                  throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n              }\n              urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n              if (!urlParts[2]) {\n                  urlParts[3] = baseUrlParts[3] + urlParts[3];\n              }\n          }\n          if (urlParts[3]) {\n              rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\n              // collapse '..' and skip '.'\n              for (i = 0; i < rawDirectories.length; i++) {\n                  if (rawDirectories[i] === '..') {\n                      directories.pop();\n                  }\n                  else if (rawDirectories[i] !== '.') {\n                      directories.push(rawDirectories[i]);\n                  }\n              }\n          }\n          returner.hostPart = urlParts[1];\n          returner.directories = directories;\n          returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n          returner.path = (urlParts[1] || '') + directories.join('/');\n          returner.filename = urlParts[4];\n          returner.fileUrl = returner.path + (urlParts[4] || '');\n          returner.url = returner.fileUrl + (urlParts[5] || '');\n          return returner;\n      };\n      return AbstractFileManager;\n  }());\n\n  var AbstractPluginLoader = /** @class */ (function () {\n      function AbstractPluginLoader() {\n          // Implemented by Node.js plugin loader\n          this.require = function () { return null; };\n      }\n      AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\n          var loader;\n          var registry;\n          var pluginObj;\n          var localModule;\n          var pluginManager;\n          var filename;\n          var result;\n          pluginManager = context.pluginManager;\n          if (fileInfo) {\n              if (typeof fileInfo === 'string') {\n                  filename = fileInfo;\n              }\n              else {\n                  filename = fileInfo.filename;\n              }\n          }\n          var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n          if (filename) {\n              pluginObj = pluginManager.get(filename);\n              if (pluginObj) {\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                  if (result) {\n                      return result;\n                  }\n                  try {\n                      if (pluginObj.use) {\n                          pluginObj.use.call(this.context, pluginObj);\n                      }\n                  }\n                  catch (e) {\n                      e.message = e.message || 'Error during @plugin call';\n                      return new LessError(e, imports, filename);\n                  }\n                  return pluginObj;\n              }\n          }\n          localModule = {\n              exports: {},\n              pluginManager: pluginManager,\n              fileInfo: fileInfo\n          };\n          registry = functionRegistry.create();\n          var registerPlugin = function (obj) {\n              pluginObj = obj;\n          };\n          try {\n              loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n              loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n          }\n          catch (e) {\n              return new LessError(e, imports, filename);\n          }\n          if (!pluginObj) {\n              pluginObj = localModule.exports;\n          }\n          pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n          if (pluginObj instanceof LessError) {\n              return pluginObj;\n          }\n          if (pluginObj) {\n              pluginObj.imports = imports;\n              pluginObj.filename = filename;\n              // For < 3.x (or unspecified minVersion) - setOptions() before install()\n              if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                  if (result) {\n                      return result;\n                  }\n              }\n              // Run on first load\n              pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n              pluginObj.functions = registry.getLocalFunctions();\n              // Need to call setOptions again because the pluginObj might have functions\n              result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n              if (result) {\n                  return result;\n              }\n              // Run every @plugin call\n              try {\n                  if (pluginObj.use) {\n                      pluginObj.use.call(this.context, pluginObj);\n                  }\n              }\n              catch (e) {\n                  e.message = e.message || 'Error during @plugin call';\n                  return new LessError(e, imports, filename);\n              }\n          }\n          else {\n              return new LessError({ message: 'Not a valid plugin' }, imports, filename);\n          }\n          return pluginObj;\n      };\n      AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\n          if (options && !plugin.setOptions) {\n              return new LessError({\n                  message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\n              });\n          }\n          try {\n              plugin.setOptions && plugin.setOptions(options);\n          }\n          catch (e) {\n              return new LessError(e);\n          }\n      };\n      AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\n          if (plugin) {\n              // support plugins being a function\n              // so that the plugin can be more usable programmatically\n              if (typeof plugin === 'function') {\n                  plugin = new plugin();\n              }\n              if (plugin.minVersion) {\n                  if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                      return new LessError({\n                          message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\n                      });\n                  }\n              }\n              return plugin;\n          }\n          return null;\n      };\n      AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\n          if (typeof aVersion === 'string') {\n              aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n              aVersion.shift();\n          }\n          for (var i_1 = 0; i_1 < aVersion.length; i_1++) {\n              if (aVersion[i_1] !== bVersion[i_1]) {\n                  return parseInt(aVersion[i_1]) > parseInt(bVersion[i_1]) ? -1 : 1;\n              }\n          }\n          return 0;\n      };\n      AbstractPluginLoader.prototype.versionToString = function (version) {\n          var versionString = '';\n          for (var i_2 = 0; i_2 < version.length; i_2++) {\n              versionString += (versionString ? '.' : '') + version[i_2];\n          }\n          return versionString;\n      };\n      AbstractPluginLoader.prototype.printUsage = function (plugins) {\n          for (var i_3 = 0; i_3 < plugins.length; i_3++) {\n              var plugin = plugins[i_3];\n              if (plugin.printUsage) {\n                  plugin.printUsage();\n              }\n          }\n      };\n      return AbstractPluginLoader;\n  }());\n\n  var _visitArgs = { visitDeeper: true };\n  var _hasIndexed = false;\n  function _noop(node) {\n      return node;\n  }\n  function indexNodeTypes(parent, ticker) {\n      // add .typeIndex to tree node types for lookup table\n      var key;\n      var child;\n      for (key in parent) {\n          /* eslint guard-for-in: 0 */\n          child = parent[key];\n          switch (typeof child) {\n              case 'function':\n                  // ignore bound functions directly on tree which do not have a prototype\n                  // or aren't nodes\n                  if (child.prototype && child.prototype.type) {\n                      child.prototype.typeIndex = ticker++;\n                  }\n                  break;\n              case 'object':\n                  ticker = indexNodeTypes(child, ticker);\n                  break;\n          }\n      }\n      return ticker;\n  }\n  var Visitor = /** @class */ (function () {\n      function Visitor(implementation) {\n          this._implementation = implementation;\n          this._visitInCache = {};\n          this._visitOutCache = {};\n          if (!_hasIndexed) {\n              indexNodeTypes(tree, 1);\n              _hasIndexed = true;\n          }\n      }\n      Visitor.prototype.visit = function (node) {\n          if (!node) {\n              return node;\n          }\n          var nodeTypeIndex = node.typeIndex;\n          if (!nodeTypeIndex) {\n              // MixinCall args aren't a node type?\n              if (node.value && node.value.typeIndex) {\n                  this.visit(node.value);\n              }\n              return node;\n          }\n          var impl = this._implementation;\n          var func = this._visitInCache[nodeTypeIndex];\n          var funcOut = this._visitOutCache[nodeTypeIndex];\n          var visitArgs = _visitArgs;\n          var fnName;\n          visitArgs.visitDeeper = true;\n          if (!func) {\n              fnName = \"visit\" + node.type;\n              func = impl[fnName] || _noop;\n              funcOut = impl[fnName + \"Out\"] || _noop;\n              this._visitInCache[nodeTypeIndex] = func;\n              this._visitOutCache[nodeTypeIndex] = funcOut;\n          }\n          if (func !== _noop) {\n              var newNode = func.call(impl, node, visitArgs);\n              if (node && impl.isReplacing) {\n                  node = newNode;\n              }\n          }\n          if (visitArgs.visitDeeper && node) {\n              if (node.length) {\n                  for (var i = 0, cnt = node.length; i < cnt; i++) {\n                      if (node[i].accept) {\n                          node[i].accept(this);\n                      }\n                  }\n              }\n              else if (node.accept) {\n                  node.accept(this);\n              }\n          }\n          if (funcOut != _noop) {\n              funcOut.call(impl, node);\n          }\n          return node;\n      };\n      Visitor.prototype.visitArray = function (nodes, nonReplacing) {\n          if (!nodes) {\n              return nodes;\n          }\n          var cnt = nodes.length;\n          var i;\n          // Non-replacing\n          if (nonReplacing || !this._implementation.isReplacing) {\n              for (i = 0; i < cnt; i++) {\n                  this.visit(nodes[i]);\n              }\n              return nodes;\n          }\n          // Replacing\n          var out = [];\n          for (i = 0; i < cnt; i++) {\n              var evald = this.visit(nodes[i]);\n              if (evald === undefined) {\n                  continue;\n              }\n              if (!evald.splice) {\n                  out.push(evald);\n              }\n              else if (evald.length) {\n                  this.flatten(evald, out);\n              }\n          }\n          return out;\n      };\n      Visitor.prototype.flatten = function (arr, out) {\n          if (!out) {\n              out = [];\n          }\n          var cnt;\n          var i;\n          var item;\n          var nestedCnt;\n          var j;\n          var nestedItem;\n          for (i = 0, cnt = arr.length; i < cnt; i++) {\n              item = arr[i];\n              if (item === undefined) {\n                  continue;\n              }\n              if (!item.splice) {\n                  out.push(item);\n                  continue;\n              }\n              for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                  nestedItem = item[j];\n                  if (nestedItem === undefined) {\n                      continue;\n                  }\n                  if (!nestedItem.splice) {\n                      out.push(nestedItem);\n                  }\n                  else if (nestedItem.length) {\n                      this.flatten(nestedItem, out);\n                  }\n              }\n          }\n          return out;\n      };\n      return Visitor;\n  }());\n\n  var ImportSequencer = /** @class */ (function () {\n      function ImportSequencer(onSequencerEmpty) {\n          this.imports = [];\n          this.variableImports = [];\n          this._onSequencerEmpty = onSequencerEmpty;\n          this._currentDepth = 0;\n      }\n      ImportSequencer.prototype.addImport = function (callback) {\n          var importSequencer = this;\n          var importItem = {\n              callback: callback,\n              args: null,\n              isReady: false\n          };\n          this.imports.push(importItem);\n          return function () {\n              var args = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  args[_i] = arguments[_i];\n              }\n              importItem.args = Array.prototype.slice.call(args, 0);\n              importItem.isReady = true;\n              importSequencer.tryRun();\n          };\n      };\n      ImportSequencer.prototype.addVariableImport = function (callback) {\n          this.variableImports.push(callback);\n      };\n      ImportSequencer.prototype.tryRun = function () {\n          this._currentDepth++;\n          try {\n              while (true) {\n                  while (this.imports.length > 0) {\n                      var importItem = this.imports[0];\n                      if (!importItem.isReady) {\n                          return;\n                      }\n                      this.imports = this.imports.slice(1);\n                      importItem.callback.apply(null, importItem.args);\n                  }\n                  if (this.variableImports.length === 0) {\n                      break;\n                  }\n                  var variableImport = this.variableImports[0];\n                  this.variableImports = this.variableImports.slice(1);\n                  variableImport();\n              }\n          }\n          finally {\n              this._currentDepth--;\n          }\n          if (this._currentDepth === 0 && this._onSequencerEmpty) {\n              this._onSequencerEmpty();\n          }\n      };\n      return ImportSequencer;\n  }());\n\n  var ImportVisitor = function (importer, finish) {\n      this._visitor = new Visitor(this);\n      this._importer = importer;\n      this._finish = finish;\n      this.context = new contexts.Eval();\n      this.importCount = 0;\n      this.onceFileDetectionMap = {};\n      this.recursionDetector = {};\n      this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n  };\n  ImportVisitor.prototype = {\n      isReplacing: false,\n      run: function (root) {\n          try {\n              // process the contents\n              this._visitor.visit(root);\n          }\n          catch (e) {\n              this.error = e;\n          }\n          this.isFinished = true;\n          this._sequencer.tryRun();\n      },\n      _onSequencerEmpty: function () {\n          if (!this.isFinished) {\n              return;\n          }\n          this._finish(this.error);\n      },\n      visitImport: function (importNode, visitArgs) {\n          var inlineCSS = importNode.options.inline;\n          if (!importNode.css || inlineCSS) {\n              var context = new contexts.Eval(this.context, copyArray(this.context.frames));\n              var importParent = context.frames[0];\n              this.importCount++;\n              if (importNode.isVariableImport()) {\n                  this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n              }\n              else {\n                  this.processImportNode(importNode, context, importParent);\n              }\n          }\n          visitArgs.visitDeeper = false;\n      },\n      processImportNode: function (importNode, context, importParent) {\n          var evaldImportNode;\n          var inlineCSS = importNode.options.inline;\n          try {\n              evaldImportNode = importNode.evalForImport(context);\n          }\n          catch (e) {\n              if (!e.filename) {\n                  e.index = importNode.getIndex();\n                  e.filename = importNode.fileInfo().filename;\n              }\n              // attempt to eval properly and treat as css\n              importNode.css = true;\n              // if that fails, this error will be thrown\n              importNode.error = e;\n          }\n          if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n              if (evaldImportNode.options.multiple) {\n                  context.importMultiple = true;\n              }\n              // try appending if we haven't determined if it is css or not\n              var tryAppendLessExtension = evaldImportNode.css === undefined;\n              for (var i_1 = 0; i_1 < importParent.rules.length; i_1++) {\n                  if (importParent.rules[i_1] === importNode) {\n                      importParent.rules[i_1] = evaldImportNode;\n                      break;\n                  }\n              }\n              var onImported = this.onImported.bind(this, evaldImportNode, context);\n              var sequencedOnImported = this._sequencer.addImport(onImported);\n              this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n          }\n          else {\n              this.importCount--;\n              if (this.isFinished) {\n                  this._sequencer.tryRun();\n              }\n          }\n      },\n      onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n          if (e) {\n              if (!e.filename) {\n                  e.index = importNode.getIndex();\n                  e.filename = importNode.fileInfo().filename;\n              }\n              this.error = e;\n          }\n          var importVisitor = this;\n          var inlineCSS = importNode.options.inline;\n          var isPlugin = importNode.options.isPlugin;\n          var isOptional = importNode.options.optional;\n          var duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n          if (!context.importMultiple) {\n              if (duplicateImport) {\n                  importNode.skip = true;\n              }\n              else {\n                  importNode.skip = function () {\n                      if (fullPath in importVisitor.onceFileDetectionMap) {\n                          return true;\n                      }\n                      importVisitor.onceFileDetectionMap[fullPath] = true;\n                      return false;\n                  };\n              }\n          }\n          if (!fullPath && isOptional) {\n              importNode.skip = true;\n          }\n          if (root) {\n              importNode.root = root;\n              importNode.importedFilename = fullPath;\n              if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                  importVisitor.recursionDetector[fullPath] = true;\n                  var oldContext = this.context;\n                  this.context = context;\n                  try {\n                      this._visitor.visit(root);\n                  }\n                  catch (e) {\n                      this.error = e;\n                  }\n                  this.context = oldContext;\n              }\n          }\n          importVisitor.importCount--;\n          if (importVisitor.isFinished) {\n              importVisitor._sequencer.tryRun();\n          }\n      },\n      visitDeclaration: function (declNode, visitArgs) {\n          if (declNode.value.type === 'DetachedRuleset') {\n              this.context.frames.unshift(declNode);\n          }\n          else {\n              visitArgs.visitDeeper = false;\n          }\n      },\n      visitDeclarationOut: function (declNode) {\n          if (declNode.value.type === 'DetachedRuleset') {\n              this.context.frames.shift();\n          }\n      },\n      visitAtRule: function (atRuleNode, visitArgs) {\n          this.context.frames.unshift(atRuleNode);\n      },\n      visitAtRuleOut: function (atRuleNode) {\n          this.context.frames.shift();\n      },\n      visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n          this.context.frames.unshift(mixinDefinitionNode);\n      },\n      visitMixinDefinitionOut: function (mixinDefinitionNode) {\n          this.context.frames.shift();\n      },\n      visitRuleset: function (rulesetNode, visitArgs) {\n          this.context.frames.unshift(rulesetNode);\n      },\n      visitRulesetOut: function (rulesetNode) {\n          this.context.frames.shift();\n      },\n      visitMedia: function (mediaNode, visitArgs) {\n          this.context.frames.unshift(mediaNode.rules[0]);\n      },\n      visitMediaOut: function (mediaNode) {\n          this.context.frames.shift();\n      }\n  };\n\n  var SetTreeVisibilityVisitor = /** @class */ (function () {\n      function SetTreeVisibilityVisitor(visible) {\n          this.visible = visible;\n      }\n      SetTreeVisibilityVisitor.prototype.run = function (root) {\n          this.visit(root);\n      };\n      SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\n          if (!nodes) {\n              return nodes;\n          }\n          var cnt = nodes.length;\n          var i;\n          for (i = 0; i < cnt; i++) {\n              this.visit(nodes[i]);\n          }\n          return nodes;\n      };\n      SetTreeVisibilityVisitor.prototype.visit = function (node) {\n          if (!node) {\n              return node;\n          }\n          if (node.constructor === Array) {\n              return this.visitArray(node);\n          }\n          if (!node.blocksVisibility || node.blocksVisibility()) {\n              return node;\n          }\n          if (this.visible) {\n              node.ensureVisibility();\n          }\n          else {\n              node.ensureInvisibility();\n          }\n          node.accept(this);\n          return node;\n      };\n      return SetTreeVisibilityVisitor;\n  }());\n\n  /* jshint loopfunc:true */\n  var ExtendFinderVisitor = /** @class */ (function () {\n      function ExtendFinderVisitor() {\n          this._visitor = new Visitor(this);\n          this.contexts = [];\n          this.allExtendsStack = [[]];\n      }\n      ExtendFinderVisitor.prototype.run = function (root) {\n          root = this._visitor.visit(root);\n          root.allExtends = this.allExtendsStack[0];\n          return root;\n      };\n      ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n          if (rulesetNode.root) {\n              return;\n          }\n          var i;\n          var j;\n          var extend;\n          var allSelectorsExtendList = [];\n          var extendList;\n          // get &:extend(.a); rules which apply to all selectors in this ruleset\n          var rules = rulesetNode.rules;\n          var ruleCnt = rules ? rules.length : 0;\n          for (i = 0; i < ruleCnt; i++) {\n              if (rulesetNode.rules[i] instanceof tree.Extend) {\n                  allSelectorsExtendList.push(rules[i]);\n                  rulesetNode.extendOnEveryPath = true;\n              }\n          }\n          // now find every selector and apply the extends that apply to all extends\n          // and the ones which apply to an individual extend\n          var paths = rulesetNode.paths;\n          for (i = 0; i < paths.length; i++) {\n              var selectorPath = paths[i];\n              var selector = selectorPath[selectorPath.length - 1];\n              var selExtendList = selector.extendList;\n              extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\n                  : allSelectorsExtendList;\n              if (extendList) {\n                  extendList = extendList.map(function (allSelectorsExtend) { return allSelectorsExtend.clone(); });\n              }\n              for (j = 0; j < extendList.length; j++) {\n                  this.foundExtends = true;\n                  extend = extendList[j];\n                  extend.findSelfSelectors(selectorPath);\n                  extend.ruleset = rulesetNode;\n                  if (j === 0) {\n                      extend.firstExtendOnThisSelectorPath = true;\n                  }\n                  this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n              }\n          }\n          this.contexts.push(rulesetNode.selectors);\n      };\n      ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n          if (!rulesetNode.root) {\n              this.contexts.length = this.contexts.length - 1;\n          }\n      };\n      ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n          mediaNode.allExtends = [];\n          this.allExtendsStack.push(mediaNode.allExtends);\n      };\n      ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\n      };\n      ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n          atRuleNode.allExtends = [];\n          this.allExtendsStack.push(atRuleNode.allExtends);\n      };\n      ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\n      };\n      return ExtendFinderVisitor;\n  }());\n  var ProcessExtendsVisitor = /** @class */ (function () {\n      function ProcessExtendsVisitor() {\n          this._visitor = new Visitor(this);\n      }\n      ProcessExtendsVisitor.prototype.run = function (root) {\n          var extendFinder = new ExtendFinderVisitor();\n          this.extendIndices = {};\n          extendFinder.run(root);\n          if (!extendFinder.foundExtends) {\n              return root;\n          }\n          root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n          this.allExtendsStack = [root.allExtends];\n          var newRoot = this._visitor.visit(root);\n          this.checkExtendsForNonMatched(root.allExtends);\n          return newRoot;\n      };\n      ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\n          var indices = this.extendIndices;\n          extendList.filter(function (extend) { return !extend.hasFoundMatches && extend.parent_ids.length == 1; }).forEach(function (extend) {\n              var selector = '_unknown_';\n              try {\n                  selector = extend.selector.toCSS({});\n              }\n              catch (_) { }\n              if (!indices[extend.index + \" \" + selector]) {\n                  indices[extend.index + \" \" + selector] = true;\n                  logger.warn(\"extend '\" + selector + \"' has no matches\");\n              }\n          });\n      };\n      ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\n          //\n          // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n          // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n          // this means this new extend can then go and alter other extends\n          //\n          // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n          // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n          // processed if we look at each selector at a time, as is done in visitRuleset\n          var extendIndex;\n          var targetExtendIndex;\n          var matches;\n          var extendsToAdd = [];\n          var newSelector;\n          var extendVisitor = this;\n          var selectorPath;\n          var extend;\n          var targetExtend;\n          var newExtend;\n          iterationCount = iterationCount || 0;\n          // loop through comparing every extend with every target extend.\n          // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n          // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n          // and the second is the target.\n          // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n          // case when processing media queries\n          for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n              for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n                  extend = extendsList[extendIndex];\n                  targetExtend = extendsListTarget[targetExtendIndex];\n                  // look for circular references\n                  if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\n                      continue;\n                  }\n                  // find a match in the target extends self selector (the bit before :extend)\n                  selectorPath = [targetExtend.selfSelectors[0]];\n                  matches = extendVisitor.findMatch(extend, selectorPath);\n                  if (matches.length) {\n                      extend.hasFoundMatches = true;\n                      // we found a match, so for each self selector..\n                      extend.selfSelectors.forEach(function (selfSelector) {\n                          var info = targetExtend.visibilityInfo();\n                          // process the extend as usual\n                          newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n                          // but now we create a new extend from it\n                          newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                          newExtend.selfSelectors = newSelector;\n                          // add the extend onto the list of extends for that selector\n                          newSelector[newSelector.length - 1].extendList = [newExtend];\n                          // record that we need to add it.\n                          extendsToAdd.push(newExtend);\n                          newExtend.ruleset = targetExtend.ruleset;\n                          // remember its parents for circular references\n                          newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n                          // only process the selector once.. if we have :extend(.a,.b) then multiple\n                          // extends will look at the same selector path, so when extending\n                          // we know that any others will be duplicates in terms of what is added to the css\n                          if (targetExtend.firstExtendOnThisSelectorPath) {\n                              newExtend.firstExtendOnThisSelectorPath = true;\n                              targetExtend.ruleset.paths.push(newSelector);\n                          }\n                      });\n                  }\n              }\n          }\n          if (extendsToAdd.length) {\n              // try to detect circular references to stop a stack overflow.\n              // may no longer be needed.\n              this.extendChainCount++;\n              if (iterationCount > 100) {\n                  var selectorOne = '{unable to calculate}';\n                  var selectorTwo = '{unable to calculate}';\n                  try {\n                      selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                      selectorTwo = extendsToAdd[0].selector.toCSS();\n                  }\n                  catch (e) { }\n                  throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\n              }\n              // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n              // d extending e...\n              return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n          }\n          else {\n              return extendsToAdd;\n          }\n      };\n      ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n          if (rulesetNode.root) {\n              return;\n          }\n          var matches;\n          var pathIndex;\n          var extendIndex;\n          var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n          var selectorsToAdd = [];\n          var extendVisitor = this;\n          var selectorPath;\n          // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n          for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n              for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                  selectorPath = rulesetNode.paths[pathIndex];\n                  // extending extends happens initially, before the main pass\n                  if (rulesetNode.extendOnEveryPath) {\n                      continue;\n                  }\n                  var extendList = selectorPath[selectorPath.length - 1].extendList;\n                  if (extendList && extendList.length) {\n                      continue;\n                  }\n                  matches = this.findMatch(allExtends[extendIndex], selectorPath);\n                  if (matches.length) {\n                      allExtends[extendIndex].hasFoundMatches = true;\n                      allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\n                          var extendedSelectors;\n                          extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                          selectorsToAdd.push(extendedSelectors);\n                      });\n                  }\n              }\n          }\n          rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n      };\n      ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\n          //\n          // look through the haystack selector path to try and find the needle - extend.selector\n          // returns an array of selector matches that can then be replaced\n          //\n          var haystackSelectorIndex;\n          var hackstackSelector;\n          var hackstackElementIndex;\n          var haystackElement;\n          var targetCombinator;\n          var i;\n          var extendVisitor = this;\n          var needleElements = extend.selector.elements;\n          var potentialMatches = [];\n          var potentialMatch;\n          var matches = [];\n          // loop through the haystack elements\n          for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n              hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n              for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n                  haystackElement = hackstackSelector.elements[hackstackElementIndex];\n                  // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                  if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                      potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                          initialCombinator: haystackElement.combinator });\n                  }\n                  for (i = 0; i < potentialMatches.length; i++) {\n                      potentialMatch = potentialMatches[i];\n                      // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                      // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                      // work out what the resulting combinator will be\n                      targetCombinator = haystackElement.combinator.value;\n                      if (targetCombinator === '' && hackstackElementIndex === 0) {\n                          targetCombinator = ' ';\n                      }\n                      // if we don't match, null our match to indicate failure\n                      if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                          (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                          potentialMatch = null;\n                      }\n                      else {\n                          potentialMatch.matched++;\n                      }\n                      // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                      if (potentialMatch) {\n                          potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                          if (potentialMatch.finished &&\n                              (!extend.allowAfter &&\n                                  (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                              potentialMatch = null;\n                          }\n                      }\n                      // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                      if (potentialMatch) {\n                          if (potentialMatch.finished) {\n                              potentialMatch.length = needleElements.length;\n                              potentialMatch.endPathIndex = haystackSelectorIndex;\n                              potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                              potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                              matches.push(potentialMatch);\n                          }\n                      }\n                      else {\n                          potentialMatches.splice(i, 1);\n                          i--;\n                      }\n                  }\n              }\n          }\n          return matches;\n      };\n      ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\n          if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n              return elementValue1 === elementValue2;\n          }\n          if (elementValue1 instanceof tree.Attribute) {\n              if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                  return false;\n              }\n              if (!elementValue1.value || !elementValue2.value) {\n                  if (elementValue1.value || elementValue2.value) {\n                      return false;\n                  }\n                  return true;\n              }\n              elementValue1 = elementValue1.value.value || elementValue1.value;\n              elementValue2 = elementValue2.value.value || elementValue2.value;\n              return elementValue1 === elementValue2;\n          }\n          elementValue1 = elementValue1.value;\n          elementValue2 = elementValue2.value;\n          if (elementValue1 instanceof tree.Selector) {\n              if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                  return false;\n              }\n              for (var i_1 = 0; i_1 < elementValue1.elements.length; i_1++) {\n                  if (elementValue1.elements[i_1].combinator.value !== elementValue2.elements[i_1].combinator.value) {\n                      if (i_1 !== 0 || (elementValue1.elements[i_1].combinator.value || ' ') !== (elementValue2.elements[i_1].combinator.value || ' ')) {\n                          return false;\n                      }\n                  }\n                  if (!this.isElementValuesEqual(elementValue1.elements[i_1].value, elementValue2.elements[i_1].value)) {\n                      return false;\n                  }\n              }\n              return true;\n          }\n          return false;\n      };\n      ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\n          // for a set of matches, replace each match with the replacement selector\n          var currentSelectorPathIndex = 0;\n          var currentSelectorPathElementIndex = 0;\n          var path = [];\n          var matchIndex;\n          var selector;\n          var firstElement;\n          var match;\n          var newElements;\n          for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n              match = matches[matchIndex];\n              selector = selectorPath[match.pathIndex];\n              firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\n              if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                  path[path.length - 1].elements = path[path.length - 1]\n                      .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                  currentSelectorPathElementIndex = 0;\n                  currentSelectorPathIndex++;\n              }\n              newElements = selector.elements\n                  .slice(currentSelectorPathElementIndex, match.index)\n                  .concat([firstElement])\n                  .concat(replacementSelector.elements.slice(1));\n              if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                  path[path.length - 1].elements =\n                      path[path.length - 1].elements.concat(newElements);\n              }\n              else {\n                  path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n                  path.push(new tree.Selector(newElements));\n              }\n              currentSelectorPathIndex = match.endPathIndex;\n              currentSelectorPathElementIndex = match.endPathElementIndex;\n              if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                  currentSelectorPathElementIndex = 0;\n                  currentSelectorPathIndex++;\n              }\n          }\n          if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n              path[path.length - 1].elements = path[path.length - 1]\n                  .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n              currentSelectorPathIndex++;\n          }\n          path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n          path = path.map(function (currentValue) {\n              // we can re-use elements here, because the visibility property matters only for selectors\n              var derived = currentValue.createDerived(currentValue.elements);\n              if (isVisible) {\n                  derived.ensureVisibility();\n              }\n              else {\n                  derived.ensureInvisibility();\n              }\n              return derived;\n          });\n          return path;\n      };\n      ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n          var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n          this.allExtendsStack.push(newAllExtends);\n      };\n      ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\n          var lastIndex = this.allExtendsStack.length - 1;\n          this.allExtendsStack.length = lastIndex;\n      };\n      ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n          var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n          this.allExtendsStack.push(newAllExtends);\n      };\n      ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n          var lastIndex = this.allExtendsStack.length - 1;\n          this.allExtendsStack.length = lastIndex;\n      };\n      return ProcessExtendsVisitor;\n  }());\n\n  var JoinSelectorVisitor = /** @class */ (function () {\n      function JoinSelectorVisitor() {\n          this.contexts = [[]];\n          this._visitor = new Visitor(this);\n      }\n      JoinSelectorVisitor.prototype.run = function (root) {\n          return this._visitor.visit(root);\n      };\n      JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n          visitArgs.visitDeeper = false;\n      };\n      JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n          var context = this.contexts[this.contexts.length - 1];\n          var paths = [];\n          var selectors;\n          this.contexts.push(paths);\n          if (!rulesetNode.root) {\n              selectors = rulesetNode.selectors;\n              if (selectors) {\n                  selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\n                  rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                  if (selectors) {\n                      rulesetNode.joinSelectors(paths, context, selectors);\n                  }\n              }\n              if (!selectors) {\n                  rulesetNode.rules = null;\n              }\n              rulesetNode.paths = paths;\n          }\n      };\n      JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n          this.contexts.length = this.contexts.length - 1;\n      };\n      JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n          var context = this.contexts[this.contexts.length - 1];\n          mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n      };\n      JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n          var context = this.contexts[this.contexts.length - 1];\n          if (atRuleNode.rules && atRuleNode.rules.length) {\n              atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n          }\n      };\n      return JoinSelectorVisitor;\n  }());\n\n  var CSSVisitorUtils = /** @class */ (function () {\n      function CSSVisitorUtils(context) {\n          this._visitor = new Visitor(this);\n          this._context = context;\n      }\n      CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\n          var rule;\n          if (!bodyRules) {\n              return false;\n          }\n          for (var r = 0; r < bodyRules.length; r++) {\n              rule = bodyRules[r];\n              if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                  // the atrule contains something that was referenced (likely by extend)\n                  // therefore it needs to be shown in output too\n                  return true;\n              }\n          }\n          return false;\n      };\n      CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\n          if (owner && owner.rules) {\n              owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\n          }\n      };\n      CSSVisitorUtils.prototype.isEmpty = function (owner) {\n          return (owner && owner.rules)\n              ? (owner.rules.length === 0) : true;\n      };\n      CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\n          return (rulesetNode && rulesetNode.paths)\n              ? (rulesetNode.paths.length > 0) : false;\n      };\n      CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\n          if (!node.blocksVisibility()) {\n              if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                  return;\n              }\n              return node;\n          }\n          var compiledRulesBody = node.rules[0];\n          this.keepOnlyVisibleChilds(compiledRulesBody);\n          if (this.isEmpty(compiledRulesBody)) {\n              return;\n          }\n          node.ensureVisibility();\n          node.removeVisibilityBlock();\n          return node;\n      };\n      CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\n          if (rulesetNode.firstRoot) {\n              return true;\n          }\n          if (this.isEmpty(rulesetNode)) {\n              return false;\n          }\n          if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n              return false;\n          }\n          return true;\n      };\n      return CSSVisitorUtils;\n  }());\n  var ToCSSVisitor = function (context) {\n      this._visitor = new Visitor(this);\n      this._context = context;\n      this.utils = new CSSVisitorUtils(context);\n  };\n  ToCSSVisitor.prototype = {\n      isReplacing: true,\n      run: function (root) {\n          return this._visitor.visit(root);\n      },\n      visitDeclaration: function (declNode, visitArgs) {\n          if (declNode.blocksVisibility() || declNode.variable) {\n              return;\n          }\n          return declNode;\n      },\n      visitMixinDefinition: function (mixinNode, visitArgs) {\n          // mixin definitions do not get eval'd - this means they keep state\n          // so we have to clear that state here so it isn't used if toCSS is called twice\n          mixinNode.frames = [];\n      },\n      visitExtend: function (extendNode, visitArgs) {\n      },\n      visitComment: function (commentNode, visitArgs) {\n          if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n              return;\n          }\n          return commentNode;\n      },\n      visitMedia: function (mediaNode, visitArgs) {\n          var originalRules = mediaNode.rules[0].rules;\n          mediaNode.accept(this._visitor);\n          visitArgs.visitDeeper = false;\n          return this.utils.resolveVisibility(mediaNode, originalRules);\n      },\n      visitImport: function (importNode, visitArgs) {\n          if (importNode.blocksVisibility()) {\n              return;\n          }\n          return importNode;\n      },\n      visitAtRule: function (atRuleNode, visitArgs) {\n          if (atRuleNode.rules && atRuleNode.rules.length) {\n              return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n          }\n          else {\n              return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n          }\n      },\n      visitAnonymous: function (anonymousNode, visitArgs) {\n          if (!anonymousNode.blocksVisibility()) {\n              anonymousNode.accept(this._visitor);\n              return anonymousNode;\n          }\n      },\n      visitAtRuleWithBody: function (atRuleNode, visitArgs) {\n          // if there is only one nested ruleset and that one has no path, then it is\n          // just fake ruleset\n          function hasFakeRuleset(atRuleNode) {\n              var bodyRules = atRuleNode.rules;\n              return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n          }\n          function getBodyRules(atRuleNode) {\n              var nodeRules = atRuleNode.rules;\n              if (hasFakeRuleset(atRuleNode)) {\n                  return nodeRules[0].rules;\n              }\n              return nodeRules;\n          }\n          // it is still true that it is only one ruleset in array\n          // this is last such moment\n          // process childs\n          var originalRules = getBodyRules(atRuleNode);\n          atRuleNode.accept(this._visitor);\n          visitArgs.visitDeeper = false;\n          if (!this.utils.isEmpty(atRuleNode)) {\n              this._mergeRules(atRuleNode.rules[0].rules);\n          }\n          return this.utils.resolveVisibility(atRuleNode, originalRules);\n      },\n      visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\n          if (atRuleNode.blocksVisibility()) {\n              return;\n          }\n          if (atRuleNode.name === '@charset') {\n              // Only output the debug info together with subsequent @charset definitions\n              // a comment (or @media statement) before the actual @charset atrule would\n              // be considered illegal css as it has to be on the first line\n              if (this.charset) {\n                  if (atRuleNode.debugInfo) {\n                      var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\n                      comment.debugInfo = atRuleNode.debugInfo;\n                      return this._visitor.visit(comment);\n                  }\n                  return;\n              }\n              this.charset = true;\n          }\n          return atRuleNode;\n      },\n      checkValidNodes: function (rules, isRoot) {\n          if (!rules) {\n              return;\n          }\n          for (var i_1 = 0; i_1 < rules.length; i_1++) {\n              var ruleNode = rules[i_1];\n              if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                  throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\n                      index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n              }\n              if (ruleNode instanceof tree.Call) {\n                  throw { message: \"Function '\" + ruleNode.name + \"' is undefined\",\n                      index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n              }\n              if (ruleNode.type && !ruleNode.allowRoot) {\n                  throw { message: ruleNode.type + \" node returned by a function is not valid here\",\n                      index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n              }\n          }\n      },\n      visitRuleset: function (rulesetNode, visitArgs) {\n          // at this point rulesets are nested into each other\n          var rule;\n          var rulesets = [];\n          this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n          if (!rulesetNode.root) {\n              // remove invisible paths\n              this._compileRulesetPaths(rulesetNode);\n              // remove rulesets from this ruleset body and compile them separately\n              var nodeRules = rulesetNode.rules;\n              var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n              for (var i_2 = 0; i_2 < nodeRuleCnt;) {\n                  rule = nodeRules[i_2];\n                  if (rule && rule.rules) {\n                      // visit because we are moving them out from being a child\n                      rulesets.push(this._visitor.visit(rule));\n                      nodeRules.splice(i_2, 1);\n                      nodeRuleCnt--;\n                      continue;\n                  }\n                  i_2++;\n              }\n              // accept the visitor to remove rules and refactor itself\n              // then we can decide nogw whether we want it or not\n              // compile body\n              if (nodeRuleCnt > 0) {\n                  rulesetNode.accept(this._visitor);\n              }\n              else {\n                  rulesetNode.rules = null;\n              }\n              visitArgs.visitDeeper = false;\n          }\n          else { // if (! rulesetNode.root) {\n              rulesetNode.accept(this._visitor);\n              visitArgs.visitDeeper = false;\n          }\n          if (rulesetNode.rules) {\n              this._mergeRules(rulesetNode.rules);\n              this._removeDuplicateRules(rulesetNode.rules);\n          }\n          // now decide whether we keep the ruleset\n          if (this.utils.isVisibleRuleset(rulesetNode)) {\n              rulesetNode.ensureVisibility();\n              rulesets.splice(0, 0, rulesetNode);\n          }\n          if (rulesets.length === 1) {\n              return rulesets[0];\n          }\n          return rulesets;\n      },\n      _compileRulesetPaths: function (rulesetNode) {\n          if (rulesetNode.paths) {\n              rulesetNode.paths = rulesetNode.paths\n                  .filter(function (p) {\n                  var i;\n                  if (p[0].elements[0].combinator.value === ' ') {\n                      p[0].elements[0].combinator = new (tree.Combinator)('');\n                  }\n                  for (i = 0; i < p.length; i++) {\n                      if (p[i].isVisible() && p[i].getIsOutput()) {\n                          return true;\n                      }\n                  }\n                  return false;\n              });\n          }\n      },\n      _removeDuplicateRules: function (rules) {\n          if (!rules) {\n              return;\n          }\n          // remove duplicates\n          var ruleCache = {};\n          var ruleList;\n          var rule;\n          var i;\n          for (i = rules.length - 1; i >= 0; i--) {\n              rule = rules[i];\n              if (rule instanceof tree.Declaration) {\n                  if (!ruleCache[rule.name]) {\n                      ruleCache[rule.name] = rule;\n                  }\n                  else {\n                      ruleList = ruleCache[rule.name];\n                      if (ruleList instanceof tree.Declaration) {\n                          ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                      }\n                      var ruleCSS = rule.toCSS(this._context);\n                      if (ruleList.indexOf(ruleCSS) !== -1) {\n                          rules.splice(i, 1);\n                      }\n                      else {\n                          ruleList.push(ruleCSS);\n                      }\n                  }\n              }\n          }\n      },\n      _mergeRules: function (rules) {\n          if (!rules) {\n              return;\n          }\n          var groups = {};\n          var groupsArr = [];\n          for (var i_3 = 0; i_3 < rules.length; i_3++) {\n              var rule = rules[i_3];\n              if (rule.merge) {\n                  var key = rule.name;\n                  groups[key] ? rules.splice(i_3--, 1) :\n                      groupsArr.push(groups[key] = []);\n                  groups[key].push(rule);\n              }\n          }\n          groupsArr.forEach(function (group) {\n              if (group.length > 0) {\n                  var result_1 = group[0];\n                  var space_1 = [];\n                  var comma_1 = [new tree.Expression(space_1)];\n                  group.forEach(function (rule) {\n                      if ((rule.merge === '+') && (space_1.length > 0)) {\n                          comma_1.push(new tree.Expression(space_1 = []));\n                      }\n                      space_1.push(rule.value);\n                      result_1.important = result_1.important || rule.important;\n                  });\n                  result_1.value = new tree.Value(comma_1);\n              }\n          });\n      }\n  };\n\n  var visitors = {\n      Visitor: Visitor,\n      ImportVisitor: ImportVisitor,\n      MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\n      ExtendVisitor: ProcessExtendsVisitor,\n      JoinSelectorVisitor: JoinSelectorVisitor,\n      ToCSSVisitor: ToCSSVisitor\n  };\n\n  // Split the input into chunks.\n  var chunker = (function (input, fail) {\n      var len = input.length;\n      var level = 0;\n      var parenLevel = 0;\n      var lastOpening;\n      var lastOpeningParen;\n      var lastMultiComment;\n      var lastMultiCommentEndBrace;\n      var chunks = [];\n      var emitFrom = 0;\n      var chunkerCurrentIndex;\n      var currentChunkStartIndex;\n      var cc;\n      var cc2;\n      var matched;\n      function emitChunk(force) {\n          var len = chunkerCurrentIndex - emitFrom;\n          if (((len < 512) && !force) || !len) {\n              return;\n          }\n          chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n          emitFrom = chunkerCurrentIndex + 1;\n      }\n      for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n          cc = input.charCodeAt(chunkerCurrentIndex);\n          if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n              // a-z or whitespace\n              continue;\n          }\n          switch (cc) {\n              case 40: // (\n                  parenLevel++;\n                  lastOpeningParen = chunkerCurrentIndex;\n                  continue;\n              case 41: // )\n                  if (--parenLevel < 0) {\n                      return fail('missing opening `(`', chunkerCurrentIndex);\n                  }\n                  continue;\n              case 59: // ;\n                  if (!parenLevel) {\n                      emitChunk();\n                  }\n                  continue;\n              case 123: // {\n                  level++;\n                  lastOpening = chunkerCurrentIndex;\n                  continue;\n              case 125: // }\n                  if (--level < 0) {\n                      return fail('missing opening `{`', chunkerCurrentIndex);\n                  }\n                  if (!level && !parenLevel) {\n                      emitChunk();\n                  }\n                  continue;\n              case 92: // \\\n                  if (chunkerCurrentIndex < len - 1) {\n                      chunkerCurrentIndex++;\n                      continue;\n                  }\n                  return fail('unescaped `\\\\`', chunkerCurrentIndex);\n              case 34:\n              case 39:\n              case 96: // \", ' and `\n                  matched = 0;\n                  currentChunkStartIndex = chunkerCurrentIndex;\n                  for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                      cc2 = input.charCodeAt(chunkerCurrentIndex);\n                      if (cc2 > 96) {\n                          continue;\n                      }\n                      if (cc2 == cc) {\n                          matched = 1;\n                          break;\n                      }\n                      if (cc2 == 92) { // \\\n                          if (chunkerCurrentIndex == len - 1) {\n                              return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                          }\n                          chunkerCurrentIndex++;\n                      }\n                  }\n                  if (matched) {\n                      continue;\n                  }\n                  return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n              case 47: // /, check for comment\n                  if (parenLevel || (chunkerCurrentIndex == len - 1)) {\n                      continue;\n                  }\n                  cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                  if (cc2 == 47) {\n                      // //, find lnfeed\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\n                          if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\n                              break;\n                          }\n                      }\n                  }\n                  else if (cc2 == 42) {\n                      // /*, find */\n                      lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\n                          if (cc2 == 125) {\n                              lastMultiCommentEndBrace = chunkerCurrentIndex;\n                          }\n                          if (cc2 != 42) {\n                              continue;\n                          }\n                          if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n                              break;\n                          }\n                      }\n                      if (chunkerCurrentIndex == len - 1) {\n                          return fail('missing closing `*/`', currentChunkStartIndex);\n                      }\n                      chunkerCurrentIndex++;\n                  }\n                  continue;\n              case 42: // *, check for unmatched */\n                  if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                      return fail('unmatched `/*`', chunkerCurrentIndex);\n                  }\n                  continue;\n          }\n      }\n      if (level !== 0) {\n          if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n              return fail('missing closing `}` or `*/`', lastOpening);\n          }\n          else {\n              return fail('missing closing `}`', lastOpening);\n          }\n      }\n      else if (parenLevel !== 0) {\n          return fail('missing closing `)`', lastOpeningParen);\n      }\n      emitChunk(true);\n      return chunks;\n  });\n\n  var getParserInput = (function () {\n      var // Less input string\n      input;\n      var // current chunk\n      j;\n      var // holds state for backtracking\n      saveStack = [];\n      var // furthest index the parser has gone to\n      furthest;\n      var // if this is furthest we got to, this is the probably cause\n      furthestPossibleErrorMessage;\n      var // chunkified input\n      chunks;\n      var // current chunk\n      current;\n      var // index of current chunk, in `input`\n      currentPos;\n      var parserInput = {};\n      var CHARCODE_SPACE = 32;\n      var CHARCODE_TAB = 9;\n      var CHARCODE_LF = 10;\n      var CHARCODE_CR = 13;\n      var CHARCODE_PLUS = 43;\n      var CHARCODE_COMMA = 44;\n      var CHARCODE_FORWARD_SLASH = 47;\n      var CHARCODE_9 = 57;\n      function skipWhitespace(length) {\n          var oldi = parserInput.i;\n          var oldj = j;\n          var curr = parserInput.i - currentPos;\n          var endIndex = parserInput.i + current.length - curr;\n          var mem = (parserInput.i += length);\n          var inp = input;\n          var c;\n          var nextChar;\n          var comment;\n          for (; parserInput.i < endIndex; parserInput.i++) {\n              c = inp.charCodeAt(parserInput.i);\n              if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                  nextChar = inp.charAt(parserInput.i + 1);\n                  if (nextChar === '/') {\n                      comment = { index: parserInput.i, isLineComment: true };\n                      var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n                      if (nextNewLine < 0) {\n                          nextNewLine = endIndex;\n                      }\n                      parserInput.i = nextNewLine;\n                      comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                      parserInput.commentStore.push(comment);\n                      continue;\n                  }\n                  else if (nextChar === '*') {\n                      var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n                      if (nextStarSlash >= 0) {\n                          comment = {\n                              index: parserInput.i,\n                              text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                              isLineComment: false\n                          };\n                          parserInput.i += comment.text.length - 1;\n                          parserInput.commentStore.push(comment);\n                          continue;\n                      }\n                  }\n                  break;\n              }\n              if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                  break;\n              }\n          }\n          current = current.slice(length + parserInput.i - mem + curr);\n          currentPos = parserInput.i;\n          if (!current.length) {\n              if (j < chunks.length - 1) {\n                  current = chunks[++j];\n                  skipWhitespace(0); // skip space at the beginning of a chunk\n                  return true; // things changed\n              }\n              parserInput.finished = true;\n          }\n          return oldi !== parserInput.i || oldj !== j;\n      }\n      parserInput.save = function () {\n          currentPos = parserInput.i;\n          saveStack.push({ current: current, i: parserInput.i, j: j });\n      };\n      parserInput.restore = function (possibleErrorMessage) {\n          if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n              furthest = parserInput.i;\n              furthestPossibleErrorMessage = possibleErrorMessage;\n          }\n          var state = saveStack.pop();\n          current = state.current;\n          currentPos = parserInput.i = state.i;\n          j = state.j;\n      };\n      parserInput.forget = function () {\n          saveStack.pop();\n      };\n      parserInput.isWhitespace = function (offset) {\n          var pos = parserInput.i + (offset || 0);\n          var code = input.charCodeAt(pos);\n          return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n      };\n      // Specialization of $(tok)\n      parserInput.$re = function (tok) {\n          if (parserInput.i > currentPos) {\n              current = current.slice(parserInput.i - currentPos);\n              currentPos = parserInput.i;\n          }\n          var m = tok.exec(current);\n          if (!m) {\n              return null;\n          }\n          skipWhitespace(m[0].length);\n          if (typeof m === 'string') {\n              return m;\n          }\n          return m.length === 1 ? m[0] : m;\n      };\n      parserInput.$char = function (tok) {\n          if (input.charAt(parserInput.i) !== tok) {\n              return null;\n          }\n          skipWhitespace(1);\n          return tok;\n      };\n      parserInput.$str = function (tok) {\n          var tokLength = tok.length;\n          // https://jsperf.com/string-startswith/21\n          for (var i_1 = 0; i_1 < tokLength; i_1++) {\n              if (input.charAt(parserInput.i + i_1) !== tok.charAt(i_1)) {\n                  return null;\n              }\n          }\n          skipWhitespace(tokLength);\n          return tok;\n      };\n      parserInput.$quoted = function (loc) {\n          var pos = loc || parserInput.i;\n          var startChar = input.charAt(pos);\n          if (startChar !== '\\'' && startChar !== '\"') {\n              return;\n          }\n          var length = input.length;\n          var currentPosition = pos;\n          for (var i_2 = 1; i_2 + currentPosition < length; i_2++) {\n              var nextChar = input.charAt(i_2 + currentPosition);\n              switch (nextChar) {\n                  case '\\\\':\n                      i_2++;\n                      continue;\n                  case '\\r':\n                  case '\\n':\n                      break;\n                  case startChar:\n                      var str = input.substr(currentPosition, i_2 + 1);\n                      if (!loc && loc !== 0) {\n                          skipWhitespace(i_2 + 1);\n                          return str;\n                      }\n                      return [startChar, str];\n              }\n          }\n          return null;\n      };\n      /**\n       * Permissive parsing. Ignores everything except matching {} [] () and quotes\n       * until matching token (outside of blocks)\n       */\n      parserInput.$parseUntil = function (tok) {\n          var quote = '';\n          var returnVal = null;\n          var inComment = false;\n          var blockDepth = 0;\n          var blockStack = [];\n          var parseGroups = [];\n          var length = input.length;\n          var startPos = parserInput.i;\n          var lastPos = parserInput.i;\n          var i = parserInput.i;\n          var loop = true;\n          var testChar;\n          if (typeof tok === 'string') {\n              testChar = function (char) { return char === tok; };\n          }\n          else {\n              testChar = function (char) { return tok.test(char); };\n          }\n          do {\n              var nextChar = input.charAt(i);\n              if (blockDepth === 0 && testChar(nextChar)) {\n                  returnVal = input.substr(lastPos, i - lastPos);\n                  if (returnVal) {\n                      parseGroups.push(returnVal);\n                  }\n                  else {\n                      parseGroups.push(' ');\n                  }\n                  returnVal = parseGroups;\n                  skipWhitespace(i - startPos);\n                  loop = false;\n              }\n              else {\n                  if (inComment) {\n                      if (nextChar === '*' &&\n                          input.charAt(i + 1) === '/') {\n                          i++;\n                          blockDepth--;\n                          inComment = false;\n                      }\n                      i++;\n                      continue;\n                  }\n                  switch (nextChar) {\n                      case '\\\\':\n                          i++;\n                          nextChar = input.charAt(i);\n                          parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n                          lastPos = i + 1;\n                          break;\n                      case '/':\n                          if (input.charAt(i + 1) === '*') {\n                              i++;\n                              inComment = true;\n                              blockDepth++;\n                          }\n                          break;\n                      case '\\'':\n                      case '\"':\n                          quote = parserInput.$quoted(i);\n                          if (quote) {\n                              parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                              i += quote[1].length - 1;\n                              lastPos = i + 1;\n                          }\n                          else {\n                              skipWhitespace(i - startPos);\n                              returnVal = nextChar;\n                              loop = false;\n                          }\n                          break;\n                      case '{':\n                          blockStack.push('}');\n                          blockDepth++;\n                          break;\n                      case '(':\n                          blockStack.push(')');\n                          blockDepth++;\n                          break;\n                      case '[':\n                          blockStack.push(']');\n                          blockDepth++;\n                          break;\n                      case '}':\n                      case ')':\n                      case ']':\n                          var expected = blockStack.pop();\n                          if (nextChar === expected) {\n                              blockDepth--;\n                          }\n                          else {\n                              // move the parser to the error and return expected\n                              skipWhitespace(i - startPos);\n                              returnVal = expected;\n                              loop = false;\n                          }\n                  }\n                  i++;\n                  if (i > length) {\n                      loop = false;\n                  }\n              }\n          } while (loop);\n          return returnVal ? returnVal : null;\n      };\n      parserInput.autoCommentAbsorb = true;\n      parserInput.commentStore = [];\n      parserInput.finished = false;\n      // Same as $(), but don't change the state of the parser,\n      // just return the match.\n      parserInput.peek = function (tok) {\n          if (typeof tok === 'string') {\n              // https://jsperf.com/string-startswith/21\n              for (var i_3 = 0; i_3 < tok.length; i_3++) {\n                  if (input.charAt(parserInput.i + i_3) !== tok.charAt(i_3)) {\n                      return false;\n                  }\n              }\n              return true;\n          }\n          else {\n              return tok.test(current);\n          }\n      };\n      // Specialization of peek()\n      // TODO remove or change some currentChar calls to peekChar\n      parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\n      parserInput.currentChar = function () { return input.charAt(parserInput.i); };\n      parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\n      parserInput.getInput = function () { return input; };\n      parserInput.peekNotNumeric = function () {\n          var c = input.charCodeAt(parserInput.i);\n          // Is the first char of the dimension 0-9, '.', '+' or '-'\n          return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n      };\n      parserInput.start = function (str, chunkInput, failFunction) {\n          input = str;\n          parserInput.i = j = currentPos = furthest = 0;\n          // chunking apparently makes things quicker (but my tests indicate\n          // it might actually make things slower in node at least)\n          // and it is a non-perfect parse - it can't recognise\n          // unquoted urls, meaning it can't distinguish comments\n          // meaning comments with quotes or {}() in them get 'counted'\n          // and then lead to parse errors.\n          // In addition if the chunking chunks in the wrong place we might\n          // not be able to parse a parser statement in one go\n          // this is officially deprecated but can be switched on via an option\n          // in the case it causes too much performance issues.\n          if (chunkInput) {\n              chunks = chunker(str, failFunction);\n          }\n          else {\n              chunks = [str];\n          }\n          current = chunks[0];\n          skipWhitespace(0);\n      };\n      parserInput.end = function () {\n          var message;\n          var isFinished = parserInput.i >= input.length;\n          if (parserInput.i < furthest) {\n              message = furthestPossibleErrorMessage;\n              parserInput.i = furthest;\n          }\n          return {\n              isFinished: isFinished,\n              furthest: parserInput.i,\n              furthestPossibleErrorMessage: message,\n              furthestReachedEnd: parserInput.i >= input.length - 1,\n              furthestChar: input[parserInput.i]\n          };\n      };\n      return parserInput;\n  });\n\n  //\n  // less.js - parser\n  //\n  //    A relatively straight-forward predictive parser.\n  //    There is no tokenization/lexing stage, the input is parsed\n  //    in one sweep.\n  //\n  //    To make the parser fast enough to run in the browser, several\n  //    optimization had to be made:\n  //\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\n  //      The solution is to chunkify the input into smaller strings.\n  //      The chunks are stored in the `chunks` var,\n  //      `j` holds the current chunk index, and `currentPos` holds\n  //      the index of the current chunk in relation to `input`.\n  //      This gives us an almost 4x speed-up.\n  //\n  //    - In many cases, we don't need to match individual tokens;\n  //      for example, if a value doesn't hold any variables, operations\n  //      or dynamic references, the parser can effectively 'skip' it,\n  //      treating it as a literal.\n  //      An example would be '1px solid #000' - which evaluates to itself,\n  //      we don't need to know what the individual components are.\n  //      The drawback, of course is that you don't get the benefits of\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n  //      and a smaller speed-up in the code-gen.\n  //\n  //\n  //    Token matching is done with the `$` function, which either takes\n  //    a terminal string or regexp, or a non-terminal function to call.\n  //    It also takes care of moving all the indices forwards.\n  //\n  var Parser = function Parser(context, imports, fileInfo) {\n      var parsers;\n      var parserInput = getParserInput();\n      function error(msg, type) {\n          throw new LessError({\n              index: parserInput.i,\n              filename: fileInfo.filename,\n              type: type || 'Syntax',\n              message: msg\n          }, imports);\n      }\n      function expect(arg, msg) {\n          // some older browsers return typeof 'function' for RegExp\n          var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n          if (result) {\n              return result;\n          }\n          error(msg || (typeof arg === 'string'\n              ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\n              : 'unexpected token'));\n      }\n      // Specialization of expect()\n      function expectChar(arg, msg) {\n          if (parserInput.$char(arg)) {\n              return arg;\n          }\n          error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\n      }\n      function getDebugInfo(index) {\n          var filename = fileInfo.filename;\n          return {\n              lineNumber: getLocation(index, parserInput.getInput()).line + 1,\n              fileName: filename\n          };\n      }\n      /**\n       *  Used after initial parsing to create nodes on the fly\n       *\n       *  @param {String} str          - string to parse\n       *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n       *  @param {Number} currentIndex - start number to begin indexing\n       *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n       */\n      function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n          var result;\n          var returnNodes = [];\n          var parser = parserInput;\n          try {\n              parser.start(str, false, function fail(msg, index) {\n                  callback({\n                      message: msg,\n                      index: index + currentIndex\n                  });\n              });\n              for (var x = 0, p = void 0, i_1; (p = parseList[x]); x++) {\n                  i_1 = parser.i;\n                  result = parsers[p]();\n                  if (result) {\n                      try {\n                          result._index = i_1 + currentIndex;\n                          result._fileInfo = fileInfo;\n                      }\n                      catch (e) { }\n                      returnNodes.push(result);\n                  }\n                  else {\n                      returnNodes.push(null);\n                  }\n              }\n              var endInfo = parser.end();\n              if (endInfo.isFinished) {\n                  callback(null, returnNodes);\n              }\n              else {\n                  callback(true, null);\n              }\n          }\n          catch (e) {\n              throw new LessError({\n                  index: e.index + currentIndex,\n                  message: e.message\n              }, imports, fileInfo.filename);\n          }\n      }\n      //\n      // The Parser\n      //\n      return {\n          parserInput: parserInput,\n          imports: imports,\n          fileInfo: fileInfo,\n          parseNode: parseNode,\n          //\n          // Parse an input string into an abstract syntax tree,\n          // @param str A string containing 'less' markup\n          // @param callback call `callback` when done.\n          // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n          //\n          parse: function (str, callback, additionalData) {\n              var root;\n              var error = null;\n              var globalVars;\n              var modifyVars;\n              var ignored;\n              var preText = '';\n              globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\n              modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\n              if (context.pluginManager) {\n                  var preProcessors = context.pluginManager.getPreProcessors();\n                  for (var i_2 = 0; i_2 < preProcessors.length; i_2++) {\n                      str = preProcessors[i_2].process(str, { context: context, imports: imports, fileInfo: fileInfo });\n                  }\n              }\n              if (globalVars || (additionalData && additionalData.banner)) {\n                  preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\n                  ignored = imports.contentsIgnoredChars;\n                  ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                  ignored[fileInfo.filename] += preText.length;\n              }\n              str = str.replace(/\\r\\n?/g, '\\n');\n              // Remove potential UTF Byte Order Mark\n              str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n              imports.contents[fileInfo.filename] = str;\n              // Start with the primary rule.\n              // The whole syntax tree is held under a Ruleset node,\n              // with the `root` property set to true, so no `{}` are\n              // output. The callback is called when the input is parsed.\n              try {\n                  parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                      throw new LessError({\n                          index: index,\n                          type: 'Parse',\n                          message: msg,\n                          filename: fileInfo.filename\n                      }, imports);\n                  });\n                  tree.Node.prototype.parse = this;\n                  root = new tree.Ruleset(null, this.parsers.primary());\n                  tree.Node.prototype.rootNode = root;\n                  root.root = true;\n                  root.firstRoot = true;\n                  root.functionRegistry = functionRegistry.inherit();\n              }\n              catch (e) {\n                  return callback(new LessError(e, imports, fileInfo.filename));\n              }\n              // If `i` is smaller than the `input.length - 1`,\n              // it means the parser wasn't able to parse the whole\n              // string, so we've got a parsing error.\n              //\n              // We try to extract a \\n delimited string,\n              // showing the line where the parse error occurred.\n              // We split it up into two parts (the part which parsed,\n              // and the part which didn't), so we can color them differently.\n              var endInfo = parserInput.end();\n              if (!endInfo.isFinished) {\n                  var message = endInfo.furthestPossibleErrorMessage;\n                  if (!message) {\n                      message = 'Unrecognised input';\n                      if (endInfo.furthestChar === '}') {\n                          message += '. Possibly missing opening \\'{\\'';\n                      }\n                      else if (endInfo.furthestChar === ')') {\n                          message += '. Possibly missing opening \\'(\\'';\n                      }\n                      else if (endInfo.furthestReachedEnd) {\n                          message += '. Possibly missing something';\n                      }\n                  }\n                  error = new LessError({\n                      type: 'Parse',\n                      message: message,\n                      index: endInfo.furthest,\n                      filename: fileInfo.filename\n                  }, imports);\n              }\n              var finish = function (e) {\n                  e = error || e || imports.error;\n                  if (e) {\n                      if (!(e instanceof LessError)) {\n                          e = new LessError(e, imports, fileInfo.filename);\n                      }\n                      return callback(e);\n                  }\n                  else {\n                      return callback(null, root);\n                  }\n              };\n              if (context.processImports !== false) {\n                  new visitors.ImportVisitor(imports, finish)\n                      .run(root);\n              }\n              else {\n                  return finish();\n              }\n          },\n          //\n          // Here in, the parsing rules/functions\n          //\n          // The basic structure of the syntax tree generated is as follows:\n          //\n          //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n          //\n          // Here's some Less code:\n          //\n          //    .class {\n          //      color: #fff;\n          //      border: 1px solid #000;\n          //      width: @w + 4px;\n          //      > .child {...}\n          //    }\n          //\n          // And here's what the parse tree might look like:\n          //\n          //     Ruleset (Selector '.class', [\n          //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n          //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n          //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n          //         Ruleset (Selector [Element '>', '.child'], [...])\n          //     ])\n          //\n          //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n          //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n          //  first, before parsing, that's when we use `peek()`.\n          //\n          parsers: parsers = {\n              //\n              // The `primary` rule is the *entry* and *exit* point of the parser.\n              // The rules here can appear at any level of the parse tree.\n              //\n              // The recursive nature of the grammar is an interplay between the `block`\n              // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n              // as represented by this simplified grammar:\n              //\n              //     primary  →  (ruleset | declaration)+\n              //     ruleset  →  selector+ block\n              //     block    →  '{' primary '}'\n              //\n              // Only at one point is the primary rule not called from the\n              // block rule: at the root level.\n              //\n              primary: function () {\n                  var mixin = this.mixin;\n                  var root = [];\n                  var node;\n                  while (true) {\n                      while (true) {\n                          node = this.comment();\n                          if (!node) {\n                              break;\n                          }\n                          root.push(node);\n                      }\n                      // always process comments before deciding if finished\n                      if (parserInput.finished) {\n                          break;\n                      }\n                      if (parserInput.peek('}')) {\n                          break;\n                      }\n                      node = this.extendRule();\n                      if (node) {\n                          root = root.concat(node);\n                          continue;\n                      }\n                      node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\n                          this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\n                      if (node) {\n                          root.push(node);\n                      }\n                      else {\n                          var foundSemiColon = false;\n                          while (parserInput.$char(';')) {\n                              foundSemiColon = true;\n                          }\n                          if (!foundSemiColon) {\n                              break;\n                          }\n                      }\n                  }\n                  return root;\n              },\n              // comments are collected by the main parsing mechanism and then assigned to nodes\n              // where the current structure allows it\n              comment: function () {\n                  if (parserInput.commentStore.length) {\n                      var comment = parserInput.commentStore.shift();\n                      return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                  }\n              },\n              //\n              // Entities are tokens which can be found inside an Expression\n              //\n              entities: {\n                  mixinLookup: function () {\n                      return parsers.mixin.call(true, true);\n                  },\n                  //\n                  // A string, which supports escaping \" and '\n                  //\n                  //     \"milky way\" 'he\\'s the one!'\n                  //\n                  quoted: function (forceEscaped) {\n                      var str;\n                      var index = parserInput.i;\n                      var isEscaped = false;\n                      parserInput.save();\n                      if (parserInput.$char('~')) {\n                          isEscaped = true;\n                      }\n                      else if (forceEscaped) {\n                          parserInput.restore();\n                          return;\n                      }\n                      str = parserInput.$quoted();\n                      if (!str) {\n                          parserInput.restore();\n                          return;\n                      }\n                      parserInput.forget();\n                      return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                  },\n                  //\n                  // A catch-all word, such as:\n                  //\n                  //     black border-collapse\n                  //\n                  keyword: function () {\n                      var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n                      if (k) {\n                          return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\n                      }\n                  },\n                  //\n                  // A function call\n                  //\n                  //     rgb(255, 0, 255)\n                  //\n                  // The arguments are parsed with the `entities.arguments` parser.\n                  //\n                  call: function () {\n                      var name;\n                      var args;\n                      var func;\n                      var index = parserInput.i;\n                      // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                      if (parserInput.peek(/^url\\(/i)) {\n                          return;\n                      }\n                      parserInput.save();\n                      name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\n                      if (!name) {\n                          parserInput.forget();\n                          return;\n                      }\n                      name = name[1];\n                      func = this.customFuncCall(name);\n                      if (func) {\n                          args = func.parse();\n                          if (args && func.stop) {\n                              parserInput.forget();\n                              return args;\n                          }\n                      }\n                      args = this.arguments(args);\n                      if (!parserInput.$char(')')) {\n                          parserInput.restore('Could not parse call arguments or missing \\')\\'');\n                          return;\n                      }\n                      parserInput.forget();\n                      return new (tree.Call)(name, args, index, fileInfo);\n                  },\n                  //\n                  // Parsing rules for functions with non-standard args, e.g.:\n                  //\n                  //     boolean(not(2 > 1))\n                  //\n                  //     This is a quick prototype, to be modified/improved when\n                  //     more custom-parsed funcs come (e.g. `selector(...)`)\n                  //\n                  customFuncCall: function (name) {\n                      /* Ideally the table is to be moved out of here for faster perf.,\n                         but it's quite tricky since it relies on all these `parsers`\n                         and `expect` available only here */\n                      return {\n                          alpha: f(parsers.ieAlpha, true),\n                          boolean: f(condition),\n                          'if': f(condition)\n                      }[name.toLowerCase()];\n                      function f(parse, stop) {\n                          return {\n                              parse: parse,\n                              stop: stop // when true - stop after parse() and return its result, \n                              // otherwise continue for plain args\n                          };\n                      }\n                      function condition() {\n                          return [expect(parsers.condition, 'expected condition')];\n                      }\n                  },\n                  arguments: function (prevArgs) {\n                      var argsComma = prevArgs || [];\n                      var argsSemiColon = [];\n                      var isSemiColonSeparated;\n                      var value;\n                      parserInput.save();\n                      while (true) {\n                          if (prevArgs) {\n                              prevArgs = false;\n                          }\n                          else {\n                              value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                              if (!value) {\n                                  break;\n                              }\n                              if (value.value && value.value.length == 1) {\n                                  value = value.value[0];\n                              }\n                              argsComma.push(value);\n                          }\n                          if (parserInput.$char(',')) {\n                              continue;\n                          }\n                          if (parserInput.$char(';') || isSemiColonSeparated) {\n                              isSemiColonSeparated = true;\n                              value = (argsComma.length < 1) ? argsComma[0]\n                                  : new tree.Value(argsComma);\n                              argsSemiColon.push(value);\n                              argsComma = [];\n                          }\n                      }\n                      parserInput.forget();\n                      return isSemiColonSeparated ? argsSemiColon : argsComma;\n                  },\n                  literal: function () {\n                      return this.dimension() ||\n                          this.color() ||\n                          this.quoted() ||\n                          this.unicodeDescriptor();\n                  },\n                  // Assignments are argument entities for calls.\n                  // They are present in ie filter properties as shown below.\n                  //\n                  //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                  //\n                  assignment: function () {\n                      var key;\n                      var value;\n                      parserInput.save();\n                      key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                      if (!key) {\n                          parserInput.restore();\n                          return;\n                      }\n                      if (!parserInput.$char('=')) {\n                          parserInput.restore();\n                          return;\n                      }\n                      value = parsers.entity();\n                      if (value) {\n                          parserInput.forget();\n                          return new (tree.Assignment)(key, value);\n                      }\n                      else {\n                          parserInput.restore();\n                      }\n                  },\n                  //\n                  // Parse url() tokens\n                  //\n                  // We use a specific rule for urls, because they don't really behave like\n                  // standard function calls. The difference is that the argument doesn't have\n                  // to be enclosed within a string, so it can't be parsed as an Expression.\n                  //\n                  url: function () {\n                      var value;\n                      var index = parserInput.i;\n                      parserInput.autoCommentAbsorb = false;\n                      if (!parserInput.$str('url(')) {\n                          parserInput.autoCommentAbsorb = true;\n                          return;\n                      }\n                      value = this.quoted() || this.variable() || this.property() ||\n                          parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n                      parserInput.autoCommentAbsorb = true;\n                      expectChar(')');\n                      return new (tree.URL)((value.value != null ||\n                          value instanceof tree.Variable ||\n                          value instanceof tree.Property) ?\n                          value : new (tree.Anonymous)(value, index), index, fileInfo);\n                  },\n                  //\n                  // A Variable entity, such as `@fink`, in\n                  //\n                  //     width: @fink + 2px\n                  //\n                  // We use a different parser for variable definitions,\n                  // see `parsers.variable`.\n                  //\n                  variable: function () {\n                      var ch;\n                      var name;\n                      var index = parserInput.i;\n                      parserInput.save();\n                      if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                          ch = parserInput.currentChar();\n                          if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                              // this may be a VariableCall lookup\n                              var result = parsers.variableCall(name);\n                              if (result) {\n                                  parserInput.forget();\n                                  return result;\n                              }\n                          }\n                          parserInput.forget();\n                          return new (tree.Variable)(name, index, fileInfo);\n                      }\n                      parserInput.restore();\n                  },\n                  // A variable entity using the protective {} e.g. @{var}\n                  variableCurly: function () {\n                      var curly;\n                      var index = parserInput.i;\n                      if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                          return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\n                      }\n                  },\n                  //\n                  // A Property accessor, such as `$color`, in\n                  //\n                  //     background-color: $color\n                  //\n                  property: function () {\n                      var name;\n                      var index = parserInput.i;\n                      if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                          return new (tree.Property)(name, index, fileInfo);\n                      }\n                  },\n                  // A property entity useing the protective {} e.g. ${prop}\n                  propertyCurly: function () {\n                      var curly;\n                      var index = parserInput.i;\n                      if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                          return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\n                      }\n                  },\n                  //\n                  // A Hexadecimal color\n                  //\n                  //     #4F3C2F\n                  //\n                  // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                  //\n                  color: function () {\n                      var rgb;\n                      parserInput.save();\n                      if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n                          if (!rgb[2]) {\n                              parserInput.forget();\n                              return new (tree.Color)(rgb[1], undefined, rgb[0]);\n                          }\n                      }\n                      parserInput.restore();\n                  },\n                  colorKeyword: function () {\n                      parserInput.save();\n                      var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                      parserInput.autoCommentAbsorb = false;\n                      var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                      parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                      if (!k) {\n                          parserInput.forget();\n                          return;\n                      }\n                      parserInput.restore();\n                      var color = tree.Color.fromKeyword(k);\n                      if (color) {\n                          parserInput.$str(k);\n                          return color;\n                      }\n                  },\n                  //\n                  // A Dimension, that is, a number and a unit\n                  //\n                  //     0.5em 95%\n                  //\n                  dimension: function () {\n                      if (parserInput.peekNotNumeric()) {\n                          return;\n                      }\n                      var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                      if (value) {\n                          return new (tree.Dimension)(value[1], value[2]);\n                      }\n                  },\n                  //\n                  // A unicode descriptor, as is used in unicode-range\n                  //\n                  // U+0??  or U+00A1-00A9\n                  //\n                  unicodeDescriptor: function () {\n                      var ud;\n                      ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                      if (ud) {\n                          return new (tree.UnicodeDescriptor)(ud[0]);\n                      }\n                  },\n                  //\n                  // JavaScript code to be evaluated\n                  //\n                  //     `window.location.href`\n                  //\n                  javascript: function () {\n                      var js;\n                      var index = parserInput.i;\n                      parserInput.save();\n                      var escape = parserInput.$char('~');\n                      var jsQuote = parserInput.$char('`');\n                      if (!jsQuote) {\n                          parserInput.restore();\n                          return;\n                      }\n                      js = parserInput.$re(/^[^`]*`/);\n                      if (js) {\n                          parserInput.forget();\n                          return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                      }\n                      parserInput.restore('invalid javascript definition');\n                  }\n              },\n              //\n              // The variable part of a variable definition. Used in the `rule` parser\n              //\n              //     @fink:\n              //\n              variable: function () {\n                  var name;\n                  if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\n                      return name[1];\n                  }\n              },\n              //\n              // Call a variable value to retrieve a detached ruleset\n              // or a value from a detached ruleset's rules.\n              //\n              //     @fink();\n              //     @fink;\n              //     color: @fink[@color];\n              //\n              variableCall: function (parsedName) {\n                  var lookups;\n                  var i = parserInput.i;\n                  var inValue = !!parsedName;\n                  var name = parsedName;\n                  parserInput.save();\n                  if (name || (parserInput.currentChar() === '@'\n                      && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\n                      lookups = this.mixin.ruleLookups();\n                      if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\n                          parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n                          return;\n                      }\n                      if (!inValue) {\n                          name = name[1];\n                      }\n                      var call = new tree.VariableCall(name, i, fileInfo);\n                      if (!inValue && parsers.end()) {\n                          parserInput.forget();\n                          return call;\n                      }\n                      else {\n                          parserInput.forget();\n                          return new tree.NamespaceValue(call, lookups, i, fileInfo);\n                      }\n                  }\n                  parserInput.restore();\n              },\n              //\n              // extend syntax - used to extend selectors\n              //\n              extend: function (isRule) {\n                  var elements;\n                  var e;\n                  var index = parserInput.i;\n                  var option;\n                  var extendList;\n                  var extend;\n                  if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n                      return;\n                  }\n                  do {\n                      option = null;\n                      elements = null;\n                      while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                          e = this.element();\n                          if (!e) {\n                              break;\n                          }\n                          if (elements) {\n                              elements.push(e);\n                          }\n                          else {\n                              elements = [e];\n                          }\n                      }\n                      option = option && option[1];\n                      if (!elements) {\n                          error('Missing target selector for :extend().');\n                      }\n                      extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\n                      if (extendList) {\n                          extendList.push(extend);\n                      }\n                      else {\n                          extendList = [extend];\n                      }\n                  } while (parserInput.$char(','));\n                  expect(/^\\)/);\n                  if (isRule) {\n                      expect(/^;/);\n                  }\n                  return extendList;\n              },\n              //\n              // extendRule - used in a rule to extend all the parent selectors\n              //\n              extendRule: function () {\n                  return this.extend(true);\n              },\n              //\n              // Mixins\n              //\n              mixin: {\n                  //\n                  // A Mixin call, with an optional argument list\n                  //\n                  //     #mixins > .square(#fff);\n                  //     #mixins.square(#fff);\n                  //     .rounded(4px, black);\n                  //     .button;\n                  //\n                  // We can lookup / return a value using the lookup syntax:\n                  //\n                  //     color: #mixin.square(#fff)[@color];\n                  //\n                  // The `while` loop is there because mixins can be\n                  // namespaced, but we only support the child and descendant\n                  // selector for now.\n                  //\n                  call: function (inValue, getLookup) {\n                      var s = parserInput.currentChar();\n                      var important = false;\n                      var lookups;\n                      var index = parserInput.i;\n                      var elements;\n                      var args;\n                      var hasParens;\n                      if (s !== '.' && s !== '#') {\n                          return;\n                      }\n                      parserInput.save(); // stop us absorbing part of an invalid selector\n                      elements = this.elements();\n                      if (elements) {\n                          if (parserInput.$char('(')) {\n                              args = this.args(true).args;\n                              expectChar(')');\n                              hasParens = true;\n                          }\n                          if (getLookup !== false) {\n                              lookups = this.ruleLookups();\n                          }\n                          if (getLookup === true && !lookups) {\n                              parserInput.restore();\n                              return;\n                          }\n                          if (inValue && !lookups && !hasParens) {\n                              // This isn't a valid in-value mixin call\n                              parserInput.restore();\n                              return;\n                          }\n                          if (!inValue && parsers.important()) {\n                              important = true;\n                          }\n                          if (inValue || parsers.end()) {\n                              parserInput.forget();\n                              var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\n                              if (lookups) {\n                                  return new tree.NamespaceValue(mixin, lookups);\n                              }\n                              else {\n                                  return mixin;\n                              }\n                          }\n                      }\n                      parserInput.restore();\n                  },\n                  /**\n                   * Matching elements for mixins\n                   * (Start with . or # and can have > )\n                   */\n                  elements: function () {\n                      var elements;\n                      var e;\n                      var c;\n                      var elem;\n                      var elemIndex;\n                      var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n                      while (true) {\n                          elemIndex = parserInput.i;\n                          e = parserInput.$re(re);\n                          if (!e) {\n                              break;\n                          }\n                          elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\n                          if (elements) {\n                              elements.push(elem);\n                          }\n                          else {\n                              elements = [elem];\n                          }\n                          c = parserInput.$char('>');\n                      }\n                      return elements;\n                  },\n                  args: function (isCall) {\n                      var entities = parsers.entities;\n                      var returner = { args: null, variadic: false };\n                      var expressions = [];\n                      var argsSemiColon = [];\n                      var argsComma = [];\n                      var isSemiColonSeparated;\n                      var expressionContainsNamed;\n                      var name;\n                      var nameLoop;\n                      var value;\n                      var arg;\n                      var expand;\n                      var hasSep = true;\n                      parserInput.save();\n                      while (true) {\n                          if (isCall) {\n                              arg = parsers.detachedRuleset() || parsers.expression();\n                          }\n                          else {\n                              parserInput.commentStore.length = 0;\n                              if (parserInput.$str('...')) {\n                                  returner.variadic = true;\n                                  if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                      isSemiColonSeparated = true;\n                                  }\n                                  (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                      .push({ variadic: true });\n                                  break;\n                              }\n                              arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n                          }\n                          if (!arg || !hasSep) {\n                              break;\n                          }\n                          nameLoop = null;\n                          if (arg.throwAwayComments) {\n                              arg.throwAwayComments();\n                          }\n                          value = arg;\n                          var val = null;\n                          if (isCall) {\n                              // Variable\n                              if (arg.value && arg.value.length == 1) {\n                                  val = arg.value[0];\n                              }\n                          }\n                          else {\n                              val = arg;\n                          }\n                          if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                              if (parserInput.$char(':')) {\n                                  if (expressions.length > 0) {\n                                      if (isSemiColonSeparated) {\n                                          error('Cannot mix ; and , as delimiter types');\n                                      }\n                                      expressionContainsNamed = true;\n                                  }\n                                  value = parsers.detachedRuleset() || parsers.expression();\n                                  if (!value) {\n                                      if (isCall) {\n                                          error('could not understand value for named argument');\n                                      }\n                                      else {\n                                          parserInput.restore();\n                                          returner.args = [];\n                                          return returner;\n                                      }\n                                  }\n                                  nameLoop = (name = val.name);\n                              }\n                              else if (parserInput.$str('...')) {\n                                  if (!isCall) {\n                                      returner.variadic = true;\n                                      if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                          isSemiColonSeparated = true;\n                                      }\n                                      (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                          .push({ name: arg.name, variadic: true });\n                                      break;\n                                  }\n                                  else {\n                                      expand = true;\n                                  }\n                              }\n                              else if (!isCall) {\n                                  name = nameLoop = val.name;\n                                  value = null;\n                              }\n                          }\n                          if (value) {\n                              expressions.push(value);\n                          }\n                          argsComma.push({ name: nameLoop, value: value, expand: expand });\n                          if (parserInput.$char(',')) {\n                              hasSep = true;\n                              continue;\n                          }\n                          hasSep = parserInput.$char(';') === ';';\n                          if (hasSep || isSemiColonSeparated) {\n                              if (expressionContainsNamed) {\n                                  error('Cannot mix ; and , as delimiter types');\n                              }\n                              isSemiColonSeparated = true;\n                              if (expressions.length > 1) {\n                                  value = new (tree.Value)(expressions);\n                              }\n                              argsSemiColon.push({ name: name, value: value, expand: expand });\n                              name = null;\n                              expressions = [];\n                              expressionContainsNamed = false;\n                          }\n                      }\n                      parserInput.forget();\n                      returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                      return returner;\n                  },\n                  //\n                  // A Mixin definition, with a list of parameters\n                  //\n                  //     .rounded (@radius: 2px, @color) {\n                  //        ...\n                  //     }\n                  //\n                  // Until we have a finer grained state-machine, we have to\n                  // do a look-ahead, to make sure we don't have a mixin call.\n                  // See the `rule` function for more information.\n                  //\n                  // We start by matching `.rounded (`, and then proceed on to\n                  // the argument list, which has optional default values.\n                  // We store the parameters in `params`, with a `value` key,\n                  // if there is a value, such as in the case of `@radius`.\n                  //\n                  // Once we've got our params list, and a closing `)`, we parse\n                  // the `{...}` block.\n                  //\n                  definition: function () {\n                      var name;\n                      var params = [];\n                      var match;\n                      var ruleset;\n                      var cond;\n                      var variadic = false;\n                      if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                          parserInput.peek(/^[^{]*\\}/)) {\n                          return;\n                      }\n                      parserInput.save();\n                      match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                      if (match) {\n                          name = match[1];\n                          var argInfo = this.args(false);\n                          params = argInfo.args;\n                          variadic = argInfo.variadic;\n                          // .mixincall(\"@{a}\");\n                          // looks a bit like a mixin definition..\n                          // also\n                          // .mixincall(@a: {rule: set;});\n                          // so we have to be nice and restore\n                          if (!parserInput.$char(')')) {\n                              parserInput.restore('Missing closing \\')\\'');\n                              return;\n                          }\n                          parserInput.commentStore.length = 0;\n                          if (parserInput.$str('when')) { // Guard\n                              cond = expect(parsers.conditions, 'expected condition');\n                          }\n                          ruleset = parsers.block();\n                          if (ruleset) {\n                              parserInput.forget();\n                              return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                          }\n                          else {\n                              parserInput.restore();\n                          }\n                      }\n                      else {\n                          parserInput.restore();\n                      }\n                  },\n                  ruleLookups: function () {\n                      var rule;\n                      var lookups = [];\n                      if (parserInput.currentChar() !== '[') {\n                          return;\n                      }\n                      while (true) {\n                          parserInput.save();\n                          rule = this.lookupValue();\n                          if (!rule && rule !== '') {\n                              parserInput.restore();\n                              break;\n                          }\n                          lookups.push(rule);\n                          parserInput.forget();\n                      }\n                      if (lookups.length > 0) {\n                          return lookups;\n                      }\n                  },\n                  lookupValue: function () {\n                      parserInput.save();\n                      if (!parserInput.$char('[')) {\n                          parserInput.restore();\n                          return;\n                      }\n                      var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n                      if (!parserInput.$char(']')) {\n                          parserInput.restore();\n                          return;\n                      }\n                      if (name || name === '') {\n                          parserInput.forget();\n                          return name;\n                      }\n                      parserInput.restore();\n                  }\n              },\n              //\n              // Entities are the smallest recognized token,\n              // and can be found inside a rule's value.\n              //\n              entity: function () {\n                  var entities = this.entities;\n                  return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                      entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\n                      entities.javascript();\n              },\n              //\n              // A Declaration terminator. Note that we use `peek()` to check for '}',\n              // because the `block` rule will be expecting it, but we still need to make sure\n              // it's there, if ';' was omitted.\n              //\n              end: function () {\n                  return parserInput.$char(';') || parserInput.peek('}');\n              },\n              //\n              // IE's alpha function\n              //\n              //     alpha(opacity=88)\n              //\n              ieAlpha: function () {\n                  var value;\n                  // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                  if (!parserInput.$re(/^opacity=/i)) {\n                      return;\n                  }\n                  value = parserInput.$re(/^\\d+/);\n                  if (!value) {\n                      value = expect(parsers.entities.variable, 'Could not parse alpha');\n                      value = \"@{\" + value.name.slice(1) + \"}\";\n                  }\n                  expectChar(')');\n                  return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\n              },\n              //\n              // A Selector Element\n              //\n              //     div\n              //     + h1\n              //     #socks\n              //     input[type=\"text\"]\n              //\n              // Elements are the building blocks for Selectors,\n              // they are made out of a `Combinator` (see combinator rule),\n              // and an element name, such as a tag a class, or `*`.\n              //\n              element: function () {\n                  var e;\n                  var c;\n                  var v;\n                  var index = parserInput.i;\n                  c = this.combinator();\n                  e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                      parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                      parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                      parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\n                      this.entities.variableCurly();\n                  if (!e) {\n                      parserInput.save();\n                      if (parserInput.$char('(')) {\n                          if ((v = this.selector(false)) && parserInput.$char(')')) {\n                              e = new (tree.Paren)(v);\n                              parserInput.forget();\n                          }\n                          else {\n                              parserInput.restore('Missing closing \\')\\'');\n                          }\n                      }\n                      else {\n                          parserInput.forget();\n                      }\n                  }\n                  if (e) {\n                      return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\n                  }\n              },\n              //\n              // Combinators combine elements together, in a Selector.\n              //\n              // Because our parser isn't white-space sensitive, special care\n              // has to be taken, when parsing the descendant combinator, ` `,\n              // as it's an empty space. We have to check the previous character\n              // in the input, to see if it's a ` ` character. More info on how\n              // we deal with this in *combinator.js*.\n              //\n              combinator: function () {\n                  var c = parserInput.currentChar();\n                  if (c === '/') {\n                      parserInput.save();\n                      var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                      if (slashedCombinator) {\n                          parserInput.forget();\n                          return new (tree.Combinator)(slashedCombinator);\n                      }\n                      parserInput.restore();\n                  }\n                  if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                      parserInput.i++;\n                      if (c === '^' && parserInput.currentChar() === '^') {\n                          c = '^^';\n                          parserInput.i++;\n                      }\n                      while (parserInput.isWhitespace()) {\n                          parserInput.i++;\n                      }\n                      return new (tree.Combinator)(c);\n                  }\n                  else if (parserInput.isWhitespace(-1)) {\n                      return new (tree.Combinator)(' ');\n                  }\n                  else {\n                      return new (tree.Combinator)(null);\n                  }\n              },\n              //\n              // A CSS Selector\n              // with less extensions e.g. the ability to extend and guard\n              //\n              //     .class > div + h1\n              //     li a:hover\n              //\n              // Selectors are made out of one or more Elements, see above.\n              //\n              selector: function (isLess) {\n                  var index = parserInput.i;\n                  var elements;\n                  var extendList;\n                  var c;\n                  var e;\n                  var allExtends;\n                  var when;\n                  var condition;\n                  isLess = isLess !== false;\n                  while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\n                      if (when) {\n                          condition = expect(this.conditions, 'expected condition');\n                      }\n                      else if (condition) {\n                          error('CSS guard can only be used at the end of selector');\n                      }\n                      else if (extendList) {\n                          if (allExtends) {\n                              allExtends = allExtends.concat(extendList);\n                          }\n                          else {\n                              allExtends = extendList;\n                          }\n                      }\n                      else {\n                          if (allExtends) {\n                              error('Extend can only be used at the end of selector');\n                          }\n                          c = parserInput.currentChar();\n                          if (elements) {\n                              elements.push(e);\n                          }\n                          else {\n                              elements = [e];\n                          }\n                          e = null;\n                      }\n                      if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                          break;\n                      }\n                  }\n                  if (elements) {\n                      return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\n                  }\n                  if (allExtends) {\n                      error('Extend must be used to extend a selector, it cannot be used on its own');\n                  }\n              },\n              selectors: function () {\n                  var s;\n                  var selectors;\n                  while (true) {\n                      s = this.selector();\n                      if (!s) {\n                          break;\n                      }\n                      if (selectors) {\n                          selectors.push(s);\n                      }\n                      else {\n                          selectors = [s];\n                      }\n                      parserInput.commentStore.length = 0;\n                      if (s.condition && selectors.length > 1) {\n                          error(\"Guards are only currently allowed on a single selector.\");\n                      }\n                      if (!parserInput.$char(',')) {\n                          break;\n                      }\n                      if (s.condition) {\n                          error(\"Guards are only currently allowed on a single selector.\");\n                      }\n                      parserInput.commentStore.length = 0;\n                  }\n                  return selectors;\n              },\n              attribute: function () {\n                  if (!parserInput.$char('[')) {\n                      return;\n                  }\n                  var entities = this.entities;\n                  var key;\n                  var val;\n                  var op;\n                  if (!(key = entities.variableCurly())) {\n                      key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                  }\n                  op = parserInput.$re(/^[|~*$^]?=/);\n                  if (op) {\n                      val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                  }\n                  expectChar(']');\n                  return new (tree.Attribute)(key, op, val);\n              },\n              //\n              // The `block` rule is used by `ruleset` and `mixin.definition`.\n              // It's a wrapper around the `primary` rule, with added `{}`.\n              //\n              block: function () {\n                  var content;\n                  if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                      return content;\n                  }\n              },\n              blockRuleset: function () {\n                  var block = this.block();\n                  if (block) {\n                      block = new tree.Ruleset(null, block);\n                  }\n                  return block;\n              },\n              detachedRuleset: function () {\n                  var argInfo;\n                  var params;\n                  var variadic;\n                  parserInput.save();\n                  if (parserInput.$re(/^[.#]\\(/)) {\n                      /**\n                       * DR args currently only implemented for each() function, and not\n                       * yet settable as `@dr: #(@arg) {}`\n                       * This should be done when DRs are merged with mixins.\n                       * See: https://github.com/less/less-meta/issues/16\n                       */\n                      argInfo = this.mixin.args(false);\n                      params = argInfo.args;\n                      variadic = argInfo.variadic;\n                      if (!parserInput.$char(')')) {\n                          parserInput.restore();\n                          return;\n                      }\n                  }\n                  var blockRuleset = this.blockRuleset();\n                  if (blockRuleset) {\n                      parserInput.forget();\n                      if (params) {\n                          return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n                      }\n                      return new tree.DetachedRuleset(blockRuleset);\n                  }\n                  parserInput.restore();\n              },\n              //\n              // div, .class, body > p {...}\n              //\n              ruleset: function () {\n                  var selectors;\n                  var rules;\n                  var debugInfo;\n                  parserInput.save();\n                  if (context.dumpLineNumbers) {\n                      debugInfo = getDebugInfo(parserInput.i);\n                  }\n                  selectors = this.selectors();\n                  if (selectors && (rules = this.block())) {\n                      parserInput.forget();\n                      var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\n                      if (context.dumpLineNumbers) {\n                          ruleset.debugInfo = debugInfo;\n                      }\n                      return ruleset;\n                  }\n                  else {\n                      parserInput.restore();\n                  }\n              },\n              declaration: function () {\n                  var name;\n                  var value;\n                  var index = parserInput.i;\n                  var hasDR;\n                  var c = parserInput.currentChar();\n                  var important;\n                  var merge;\n                  var isVariable;\n                  if (c === '.' || c === '#' || c === '&' || c === ':') {\n                      return;\n                  }\n                  parserInput.save();\n                  name = this.variable() || this.ruleProperty();\n                  if (name) {\n                      isVariable = typeof name === 'string';\n                      if (isVariable) {\n                          value = this.detachedRuleset();\n                          if (value) {\n                              hasDR = true;\n                          }\n                      }\n                      parserInput.commentStore.length = 0;\n                      if (!value) {\n                          // a name returned by this.ruleProperty() is always an array of the form:\n                          // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                          // where each item is a tree.Keyword or tree.Variable\n                          merge = !isVariable && name.length > 1 && name.pop().value;\n                          // Custom property values get permissive parsing\n                          if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                              value = this.permissiveValue();\n                          }\n                          // Try to store values as anonymous\n                          // If we need the value later we'll re-parse it in ruleset.parseValue\n                          else {\n                              value = this.anonymousValue();\n                          }\n                          if (value) {\n                              parserInput.forget();\n                              // anonymous values absorb the end ';' which is required for them to work\n                              return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\n                          }\n                          if (!value) {\n                              value = this.value();\n                          }\n                          if (value) {\n                              important = this.important();\n                          }\n                          else if (isVariable) {\n                              // As a last resort, try permissiveValue\n                              value = this.permissiveValue();\n                          }\n                      }\n                      if (value && (this.end() || hasDR)) {\n                          parserInput.forget();\n                          return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\n                      }\n                      else {\n                          parserInput.restore();\n                      }\n                  }\n                  else {\n                      parserInput.restore();\n                  }\n              },\n              anonymousValue: function () {\n                  var index = parserInput.i;\n                  var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n                  if (match) {\n                      return new (tree.Anonymous)(match[1], index);\n                  }\n              },\n              /**\n               * Used for custom properties, at-rules, and variables (as fallback)\n               * Parses almost anything inside of {} [] () \"\" blocks\n               * until it reaches outer-most tokens.\n               *\n               * First, it will try to parse comments and entities to reach\n               * the end. This is mostly like the Expression parser except no\n               * math is allowed.\n               */\n              permissiveValue: function (untilTokens) {\n                  var i;\n                  var e;\n                  var done;\n                  var value;\n                  var tok = untilTokens || ';';\n                  var index = parserInput.i;\n                  var result = [];\n                  function testCurrentChar() {\n                      var char = parserInput.currentChar();\n                      if (typeof tok === 'string') {\n                          return char === tok;\n                      }\n                      else {\n                          return tok.test(char);\n                      }\n                  }\n                  if (testCurrentChar()) {\n                      return;\n                  }\n                  value = [];\n                  do {\n                      e = this.comment();\n                      if (e) {\n                          value.push(e);\n                          continue;\n                      }\n                      e = this.entity();\n                      if (e) {\n                          value.push(e);\n                      }\n                  } while (e);\n                  done = testCurrentChar();\n                  if (value.length > 0) {\n                      value = new (tree.Expression)(value);\n                      if (done) {\n                          return value;\n                      }\n                      else {\n                          result.push(value);\n                      }\n                      // Preserve space before $parseUntil as it will not\n                      if (parserInput.prevChar() === ' ') {\n                          result.push(new tree.Anonymous(' ', index));\n                      }\n                  }\n                  parserInput.save();\n                  value = parserInput.$parseUntil(tok);\n                  if (value) {\n                      if (typeof value === 'string') {\n                          error(\"Expected '\" + value + \"'\", 'Parse');\n                      }\n                      if (value.length === 1 && value[0] === ' ') {\n                          parserInput.forget();\n                          return new tree.Anonymous('', index);\n                      }\n                      var item = void 0;\n                      for (i = 0; i < value.length; i++) {\n                          item = value[i];\n                          if (Array.isArray(item)) {\n                              // Treat actual quotes as normal quoted values\n                              result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n                          }\n                          else {\n                              if (i === value.length - 1) {\n                                  item = item.trim();\n                              }\n                              // Treat like quoted values, but replace vars like unquoted expressions\n                              var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                              quote.variableRegex = /@([\\w-]+)/g;\n                              quote.propRegex = /\\$([\\w-]+)/g;\n                              result.push(quote);\n                          }\n                      }\n                      parserInput.forget();\n                      return new tree.Expression(result, true);\n                  }\n                  parserInput.restore();\n              },\n              //\n              // An @import atrule\n              //\n              //     @import \"lib\";\n              //\n              // Depending on our environment, importing is done differently:\n              // In the browser, it's an XHR request, in Node, it would be a\n              // file-system operation. The function used for importing is\n              // stored in `import`, which we pass to the Import constructor.\n              //\n              'import': function () {\n                  var path;\n                  var features;\n                  var index = parserInput.i;\n                  var dir = parserInput.$re(/^@import?\\s+/);\n                  if (dir) {\n                      var options_1 = (dir ? this.importOptions() : null) || {};\n                      if ((path = this.entities.quoted() || this.entities.url())) {\n                          features = this.mediaFeatures();\n                          if (!parserInput.$char(';')) {\n                              parserInput.i = index;\n                              error('missing semi-colon or unrecognised media features on import');\n                          }\n                          features = features && new (tree.Value)(features);\n                          return new (tree.Import)(path, features, options_1, index, fileInfo);\n                      }\n                      else {\n                          parserInput.i = index;\n                          error('malformed import statement');\n                      }\n                  }\n              },\n              importOptions: function () {\n                  var o;\n                  var options = {};\n                  var optionName;\n                  var value;\n                  // list of options, surrounded by parens\n                  if (!parserInput.$char('(')) {\n                      return null;\n                  }\n                  do {\n                      o = this.importOption();\n                      if (o) {\n                          optionName = o;\n                          value = true;\n                          switch (optionName) {\n                              case 'css':\n                                  optionName = 'less';\n                                  value = false;\n                                  break;\n                              case 'once':\n                                  optionName = 'multiple';\n                                  value = false;\n                                  break;\n                          }\n                          options[optionName] = value;\n                          if (!parserInput.$char(',')) {\n                              break;\n                          }\n                      }\n                  } while (o);\n                  expectChar(')');\n                  return options;\n              },\n              importOption: function () {\n                  var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                  if (opt) {\n                      return opt[1];\n                  }\n              },\n              mediaFeature: function () {\n                  var entities = this.entities;\n                  var nodes = [];\n                  var e;\n                  var p;\n                  parserInput.save();\n                  do {\n                      e = entities.keyword() || entities.variable() || entities.mixinLookup();\n                      if (e) {\n                          nodes.push(e);\n                      }\n                      else if (parserInput.$char('(')) {\n                          p = this.property();\n                          e = this.value();\n                          if (parserInput.$char(')')) {\n                              if (p && e) {\n                                  nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                              }\n                              else if (e) {\n                                  nodes.push(new (tree.Paren)(e));\n                              }\n                              else {\n                                  error('badly formed media feature definition');\n                              }\n                          }\n                          else {\n                              error('Missing closing \\')\\'', 'Parse');\n                          }\n                      }\n                  } while (e);\n                  parserInput.forget();\n                  if (nodes.length > 0) {\n                      return new (tree.Expression)(nodes);\n                  }\n              },\n              mediaFeatures: function () {\n                  var entities = this.entities;\n                  var features = [];\n                  var e;\n                  do {\n                      e = this.mediaFeature();\n                      if (e) {\n                          features.push(e);\n                          if (!parserInput.$char(',')) {\n                              break;\n                          }\n                      }\n                      else {\n                          e = entities.variable() || entities.mixinLookup();\n                          if (e) {\n                              features.push(e);\n                              if (!parserInput.$char(',')) {\n                                  break;\n                              }\n                          }\n                      }\n                  } while (e);\n                  return features.length > 0 ? features : null;\n              },\n              media: function () {\n                  var features;\n                  var rules;\n                  var media;\n                  var debugInfo;\n                  var index = parserInput.i;\n                  if (context.dumpLineNumbers) {\n                      debugInfo = getDebugInfo(index);\n                  }\n                  parserInput.save();\n                  if (parserInput.$str('@media')) {\n                      features = this.mediaFeatures();\n                      rules = this.block();\n                      if (!rules) {\n                          error('media definitions require block statements after any features');\n                      }\n                      parserInput.forget();\n                      media = new (tree.Media)(rules, features, index, fileInfo);\n                      if (context.dumpLineNumbers) {\n                          media.debugInfo = debugInfo;\n                      }\n                      return media;\n                  }\n                  parserInput.restore();\n              },\n              //\n              // A @plugin directive, used to import plugins dynamically.\n              //\n              //     @plugin (args) \"lib\";\n              //\n              plugin: function () {\n                  var path;\n                  var args;\n                  var options;\n                  var index = parserInput.i;\n                  var dir = parserInput.$re(/^@plugin?\\s+/);\n                  if (dir) {\n                      args = this.pluginArgs();\n                      if (args) {\n                          options = {\n                              pluginArgs: args,\n                              isPlugin: true\n                          };\n                      }\n                      else {\n                          options = { isPlugin: true };\n                      }\n                      if ((path = this.entities.quoted() || this.entities.url())) {\n                          if (!parserInput.$char(';')) {\n                              parserInput.i = index;\n                              error('missing semi-colon on @plugin');\n                          }\n                          return new (tree.Import)(path, null, options, index, fileInfo);\n                      }\n                      else {\n                          parserInput.i = index;\n                          error('malformed @plugin statement');\n                      }\n                  }\n              },\n              pluginArgs: function () {\n                  // list of options, surrounded by parens\n                  parserInput.save();\n                  if (!parserInput.$char('(')) {\n                      parserInput.restore();\n                      return null;\n                  }\n                  var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                  if (args[1]) {\n                      parserInput.forget();\n                      return args[1].trim();\n                  }\n                  else {\n                      parserInput.restore();\n                      return null;\n                  }\n              },\n              //\n              // A CSS AtRule\n              //\n              //     @charset \"utf-8\";\n              //\n              atrule: function () {\n                  var index = parserInput.i;\n                  var name;\n                  var value;\n                  var rules;\n                  var nonVendorSpecificName;\n                  var hasIdentifier;\n                  var hasExpression;\n                  var hasUnknown;\n                  var hasBlock = true;\n                  var isRooted = true;\n                  if (parserInput.currentChar() !== '@') {\n                      return;\n                  }\n                  value = this['import']() || this.plugin() || this.media();\n                  if (value) {\n                      return value;\n                  }\n                  parserInput.save();\n                  name = parserInput.$re(/^@[a-z-]+/);\n                  if (!name) {\n                      return;\n                  }\n                  nonVendorSpecificName = name;\n                  if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                      nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\n                  }\n                  switch (nonVendorSpecificName) {\n                      case '@charset':\n                          hasIdentifier = true;\n                          hasBlock = false;\n                          break;\n                      case '@namespace':\n                          hasExpression = true;\n                          hasBlock = false;\n                          break;\n                      case '@keyframes':\n                      case '@counter-style':\n                          hasIdentifier = true;\n                          break;\n                      case '@document':\n                      case '@supports':\n                          hasUnknown = true;\n                          isRooted = false;\n                          break;\n                      default:\n                          hasUnknown = true;\n                          break;\n                  }\n                  parserInput.commentStore.length = 0;\n                  if (hasIdentifier) {\n                      value = this.entity();\n                      if (!value) {\n                          error(\"expected \" + name + \" identifier\");\n                      }\n                  }\n                  else if (hasExpression) {\n                      value = this.expression();\n                      if (!value) {\n                          error(\"expected \" + name + \" expression\");\n                      }\n                  }\n                  else if (hasUnknown) {\n                      value = this.permissiveValue(/^[{;]/);\n                      hasBlock = (parserInput.currentChar() === '{');\n                      if (!value) {\n                          if (!hasBlock && parserInput.currentChar() !== ';') {\n                              error(name + \" rule is missing block or ending semi-colon\");\n                          }\n                      }\n                      else if (!value.value) {\n                          value = null;\n                      }\n                  }\n                  if (hasBlock) {\n                      rules = this.blockRuleset();\n                  }\n                  if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                      parserInput.forget();\n                      return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\n                  }\n                  parserInput.restore('at-rule options not recognised');\n              },\n              //\n              // A Value is a comma-delimited list of Expressions\n              //\n              //     font-family: Baskerville, Georgia, serif;\n              //\n              // In a Rule, a Value represents everything after the `:`,\n              // and before the `;`.\n              //\n              value: function () {\n                  var e;\n                  var expressions = [];\n                  var index = parserInput.i;\n                  do {\n                      e = this.expression();\n                      if (e) {\n                          expressions.push(e);\n                          if (!parserInput.$char(',')) {\n                              break;\n                          }\n                      }\n                  } while (e);\n                  if (expressions.length > 0) {\n                      return new (tree.Value)(expressions, index);\n                  }\n              },\n              important: function () {\n                  if (parserInput.currentChar() === '!') {\n                      return parserInput.$re(/^! *important/);\n                  }\n              },\n              sub: function () {\n                  var a;\n                  var e;\n                  parserInput.save();\n                  if (parserInput.$char('(')) {\n                      a = this.addition();\n                      if (a && parserInput.$char(')')) {\n                          parserInput.forget();\n                          e = new (tree.Expression)([a]);\n                          e.parens = true;\n                          return e;\n                      }\n                      parserInput.restore('Expected \\')\\'');\n                      return;\n                  }\n                  parserInput.restore();\n              },\n              multiplication: function () {\n                  var m;\n                  var a;\n                  var op;\n                  var operation;\n                  var isSpaced;\n                  m = this.operand();\n                  if (m) {\n                      isSpaced = parserInput.isWhitespace(-1);\n                      while (true) {\n                          if (parserInput.peek(/^\\/[*\\/]/)) {\n                              break;\n                          }\n                          parserInput.save();\n                          op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n                          if (!op) {\n                              parserInput.forget();\n                              break;\n                          }\n                          a = this.operand();\n                          if (!a) {\n                              parserInput.restore();\n                              break;\n                          }\n                          parserInput.forget();\n                          m.parensInOp = true;\n                          a.parensInOp = true;\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\n                          isSpaced = parserInput.isWhitespace(-1);\n                      }\n                      return operation || m;\n                  }\n              },\n              addition: function () {\n                  var m;\n                  var a;\n                  var op;\n                  var operation;\n                  var isSpaced;\n                  m = this.multiplication();\n                  if (m) {\n                      isSpaced = parserInput.isWhitespace(-1);\n                      while (true) {\n                          op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                          if (!op) {\n                              break;\n                          }\n                          a = this.multiplication();\n                          if (!a) {\n                              break;\n                          }\n                          m.parensInOp = true;\n                          a.parensInOp = true;\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\n                          isSpaced = parserInput.isWhitespace(-1);\n                      }\n                      return operation || m;\n                  }\n              },\n              conditions: function () {\n                  var a;\n                  var b;\n                  var index = parserInput.i;\n                  var condition;\n                  a = this.condition(true);\n                  if (a) {\n                      while (true) {\n                          if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                              break;\n                          }\n                          b = this.condition(true);\n                          if (!b) {\n                              break;\n                          }\n                          condition = new (tree.Condition)('or', condition || a, b, index);\n                      }\n                      return condition || a;\n                  }\n              },\n              condition: function (needsParens) {\n                  var result;\n                  var logical;\n                  var next;\n                  function or() {\n                      return parserInput.$str('or');\n                  }\n                  result = this.conditionAnd(needsParens);\n                  if (!result) {\n                      return;\n                  }\n                  logical = or();\n                  if (logical) {\n                      next = this.condition(needsParens);\n                      if (next) {\n                          result = new (tree.Condition)(logical, result, next);\n                      }\n                      else {\n                          return;\n                      }\n                  }\n                  return result;\n              },\n              conditionAnd: function (needsParens) {\n                  var result;\n                  var logical;\n                  var next;\n                  var self = this;\n                  function insideCondition() {\n                      var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n                      if (!cond && !needsParens) {\n                          return self.atomicCondition(needsParens);\n                      }\n                      return cond;\n                  }\n                  function and() {\n                      return parserInput.$str('and');\n                  }\n                  result = insideCondition();\n                  if (!result) {\n                      return;\n                  }\n                  logical = and();\n                  if (logical) {\n                      next = this.conditionAnd(needsParens);\n                      if (next) {\n                          result = new (tree.Condition)(logical, result, next);\n                      }\n                      else {\n                          return;\n                      }\n                  }\n                  return result;\n              },\n              negatedCondition: function (needsParens) {\n                  if (parserInput.$str('not')) {\n                      var result = this.parenthesisCondition(needsParens);\n                      if (result) {\n                          result.negate = !result.negate;\n                      }\n                      return result;\n                  }\n              },\n              parenthesisCondition: function (needsParens) {\n                  function tryConditionFollowedByParenthesis(me) {\n                      var body;\n                      parserInput.save();\n                      body = me.condition(needsParens);\n                      if (!body) {\n                          parserInput.restore();\n                          return;\n                      }\n                      if (!parserInput.$char(')')) {\n                          parserInput.restore();\n                          return;\n                      }\n                      parserInput.forget();\n                      return body;\n                  }\n                  var body;\n                  parserInput.save();\n                  if (!parserInput.$str('(')) {\n                      parserInput.restore();\n                      return;\n                  }\n                  body = tryConditionFollowedByParenthesis(this);\n                  if (body) {\n                      parserInput.forget();\n                      return body;\n                  }\n                  body = this.atomicCondition(needsParens);\n                  if (!body) {\n                      parserInput.restore();\n                      return;\n                  }\n                  if (!parserInput.$char(')')) {\n                      parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\n                      return;\n                  }\n                  parserInput.forget();\n                  return body;\n              },\n              atomicCondition: function (needsParens) {\n                  var entities = this.entities;\n                  var index = parserInput.i;\n                  var a;\n                  var b;\n                  var c;\n                  var op;\n                  function cond() {\n                      return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n                  }\n                  cond = cond.bind(this);\n                  a = cond();\n                  if (a) {\n                      if (parserInput.$char('>')) {\n                          if (parserInput.$char('=')) {\n                              op = '>=';\n                          }\n                          else {\n                              op = '>';\n                          }\n                      }\n                      else if (parserInput.$char('<')) {\n                          if (parserInput.$char('=')) {\n                              op = '<=';\n                          }\n                          else {\n                              op = '<';\n                          }\n                      }\n                      else if (parserInput.$char('=')) {\n                          if (parserInput.$char('>')) {\n                              op = '=>';\n                          }\n                          else if (parserInput.$char('<')) {\n                              op = '=<';\n                          }\n                          else {\n                              op = '=';\n                          }\n                      }\n                      if (op) {\n                          b = cond();\n                          if (b) {\n                              c = new (tree.Condition)(op, a, b, index, false);\n                          }\n                          else {\n                              error('expected expression');\n                          }\n                      }\n                      else {\n                          c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\n                      }\n                      return c;\n                  }\n              },\n              //\n              // An operand is anything that can be part of an operation,\n              // such as a Color, or a Variable\n              //\n              operand: function () {\n                  var entities = this.entities;\n                  var negate;\n                  if (parserInput.peek(/^-[@\\$\\(]/)) {\n                      negate = parserInput.$char('-');\n                  }\n                  var o = this.sub() || entities.dimension() ||\n                      entities.color() || entities.variable() ||\n                      entities.property() || entities.call() ||\n                      entities.quoted(true) || entities.colorKeyword() ||\n                      entities.mixinLookup();\n                  if (negate) {\n                      o.parensInOp = true;\n                      o = new (tree.Negative)(o);\n                  }\n                  return o;\n              },\n              //\n              // Expressions either represent mathematical operations,\n              // or white-space delimited Entities.\n              //\n              //     1px solid black\n              //     @var * 2\n              //\n              expression: function () {\n                  var entities = [];\n                  var e;\n                  var delim;\n                  var index = parserInput.i;\n                  do {\n                      e = this.comment();\n                      if (e) {\n                          entities.push(e);\n                          continue;\n                      }\n                      e = this.addition() || this.entity();\n                      if (e) {\n                          entities.push(e);\n                          // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                          if (!parserInput.peek(/^\\/[\\/*]/)) {\n                              delim = parserInput.$char('/');\n                              if (delim) {\n                                  entities.push(new (tree.Anonymous)(delim, index));\n                              }\n                          }\n                      }\n                  } while (e);\n                  if (entities.length > 0) {\n                      return new (tree.Expression)(entities);\n                  }\n              },\n              property: function () {\n                  var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                  if (name) {\n                      return name[1];\n                  }\n              },\n              ruleProperty: function () {\n                  var name = [];\n                  var index = [];\n                  var s;\n                  var k;\n                  parserInput.save();\n                  var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                  if (simpleProperty) {\n                      name = [new (tree.Keyword)(simpleProperty[1])];\n                      parserInput.forget();\n                      return name;\n                  }\n                  function match(re) {\n                      var i = parserInput.i;\n                      var chunk = parserInput.$re(re);\n                      if (chunk) {\n                          index.push(i);\n                          return name.push(chunk[1]);\n                      }\n                  }\n                  match(/^(\\*?)/);\n                  while (true) {\n                      if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                          break;\n                      }\n                  }\n                  if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                      parserInput.forget();\n                      // at last, we have the complete match now. move forward,\n                      // convert name particles to tree objects and return:\n                      if (name[0] === '') {\n                          name.shift();\n                          index.shift();\n                      }\n                      for (k = 0; k < name.length; k++) {\n                          s = name[k];\n                          name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                              new (tree.Keyword)(s) :\n                              (s.charAt(0) === '@' ?\n                                  new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\n                                  new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\n                      }\n                      return name;\n                  }\n                  parserInput.restore();\n              }\n          }\n      };\n  };\n  Parser.serializeVars = function (vars) {\n      var s = '';\n      for (var name_1 in vars) {\n          if (Object.hasOwnProperty.call(vars, name_1)) {\n              var value = vars[name_1];\n              s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\n          }\n      }\n      return s;\n  };\n\n  function boolean(condition) {\n      return condition ? Keyword.True : Keyword.False;\n  }\n  function If(condition, trueValue, falseValue) {\n      return condition ? trueValue\n          : (falseValue || new Anonymous);\n  }\n  var boolean$1 = { boolean: boolean, 'if': If };\n\n  var colorFunctions;\n  function clamp$1(val) {\n      return Math.min(1, Math.max(0, val));\n  }\n  function hsla(origColor, hsl) {\n      var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n      if (color) {\n          if (origColor.value &&\n              /^(rgb|hsl)/.test(origColor.value)) {\n              color.value = origColor.value;\n          }\n          else {\n              color.value = 'rgb';\n          }\n          return color;\n      }\n  }\n  function toHSL(color) {\n      if (color.toHSL) {\n          return color.toHSL();\n      }\n      else {\n          throw new Error('Argument cannot be evaluated to a color');\n      }\n  }\n  function toHSV(color) {\n      if (color.toHSV) {\n          return color.toHSV();\n      }\n      else {\n          throw new Error('Argument cannot be evaluated to a color');\n      }\n  }\n  function number(n) {\n      if (n instanceof Dimension) {\n          return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n      }\n      else if (typeof n === 'number') {\n          return n;\n      }\n      else {\n          throw {\n              type: 'Argument',\n              message: 'color functions take numbers as parameters'\n          };\n      }\n  }\n  function scaled(n, size) {\n      if (n instanceof Dimension && n.unit.is('%')) {\n          return parseFloat(n.value * size / 100);\n      }\n      else {\n          return number(n);\n      }\n  }\n  colorFunctions = {\n      rgb: function (r, g, b) {\n          var color = colorFunctions.rgba(r, g, b, 1.0);\n          if (color) {\n              color.value = 'rgb';\n              return color;\n          }\n      },\n      rgba: function (r, g, b, a) {\n          try {\n              if (r instanceof Color) {\n                  if (g) {\n                      a = number(g);\n                  }\n                  else {\n                      a = r.alpha;\n                  }\n                  return new Color(r.rgb, a, 'rgba');\n              }\n              var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\n              a = number(a);\n              return new Color(rgb, a, 'rgba');\n          }\n          catch (e) { }\n      },\n      hsl: function (h, s, l) {\n          var color = colorFunctions.hsla(h, s, l, 1.0);\n          if (color) {\n              color.value = 'hsl';\n              return color;\n          }\n      },\n      hsla: function (h, s, l, a) {\n          try {\n              if (h instanceof Color) {\n                  if (s) {\n                      a = number(s);\n                  }\n                  else {\n                      a = h.alpha;\n                  }\n                  return new Color(h.rgb, a, 'hsla');\n              }\n              var m1_1;\n              var m2_1;\n              function hue(h) {\n                  h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n                  if (h * 6 < 1) {\n                      return m1_1 + (m2_1 - m1_1) * h * 6;\n                  }\n                  else if (h * 2 < 1) {\n                      return m2_1;\n                  }\n                  else if (h * 3 < 2) {\n                      return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\n                  }\n                  else {\n                      return m1_1;\n                  }\n              }\n              h = (number(h) % 360) / 360;\n              s = clamp$1(number(s));\n              l = clamp$1(number(l));\n              a = clamp$1(number(a));\n              m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n              m1_1 = l * 2 - m2_1;\n              var rgb = [\n                  hue(h + 1 / 3) * 255,\n                  hue(h) * 255,\n                  hue(h - 1 / 3) * 255\n              ];\n              a = number(a);\n              return new Color(rgb, a, 'hsla');\n          }\n          catch (e) { }\n      },\n      hsv: function (h, s, v) {\n          return colorFunctions.hsva(h, s, v, 1.0);\n      },\n      hsva: function (h, s, v, a) {\n          h = ((number(h) % 360) / 360) * 360;\n          s = number(s);\n          v = number(v);\n          a = number(a);\n          var i;\n          var f;\n          i = Math.floor((h / 60) % 6);\n          f = (h / 60) - i;\n          var vs = [v,\n              v * (1 - s),\n              v * (1 - f * s),\n              v * (1 - (1 - f) * s)];\n          var perm = [[0, 3, 1],\n              [2, 0, 1],\n              [1, 0, 3],\n              [1, 2, 0],\n              [3, 1, 0],\n              [0, 1, 2]];\n          return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n      },\n      hue: function (color) {\n          return new Dimension(toHSL(color).h);\n      },\n      saturation: function (color) {\n          return new Dimension(toHSL(color).s * 100, '%');\n      },\n      lightness: function (color) {\n          return new Dimension(toHSL(color).l * 100, '%');\n      },\n      hsvhue: function (color) {\n          return new Dimension(toHSV(color).h);\n      },\n      hsvsaturation: function (color) {\n          return new Dimension(toHSV(color).s * 100, '%');\n      },\n      hsvvalue: function (color) {\n          return new Dimension(toHSV(color).v * 100, '%');\n      },\n      red: function (color) {\n          return new Dimension(color.rgb[0]);\n      },\n      green: function (color) {\n          return new Dimension(color.rgb[1]);\n      },\n      blue: function (color) {\n          return new Dimension(color.rgb[2]);\n      },\n      alpha: function (color) {\n          return new Dimension(toHSL(color).a);\n      },\n      luma: function (color) {\n          return new Dimension(color.luma() * color.alpha * 100, '%');\n      },\n      luminance: function (color) {\n          var luminance = (0.2126 * color.rgb[0] / 255) +\n              (0.7152 * color.rgb[1] / 255) +\n              (0.0722 * color.rgb[2] / 255);\n          return new Dimension(luminance * color.alpha * 100, '%');\n      },\n      saturate: function (color, amount, method) {\n          // filter: saturate(3.2);\n          // should be kept as is, so check for color\n          if (!color.rgb) {\n              return null;\n          }\n          var hsl = toHSL(color);\n          if (typeof method !== 'undefined' && method.value === 'relative') {\n              hsl.s += hsl.s * amount.value / 100;\n          }\n          else {\n              hsl.s += amount.value / 100;\n          }\n          hsl.s = clamp$1(hsl.s);\n          return hsla(color, hsl);\n      },\n      desaturate: function (color, amount, method) {\n          var hsl = toHSL(color);\n          if (typeof method !== 'undefined' && method.value === 'relative') {\n              hsl.s -= hsl.s * amount.value / 100;\n          }\n          else {\n              hsl.s -= amount.value / 100;\n          }\n          hsl.s = clamp$1(hsl.s);\n          return hsla(color, hsl);\n      },\n      lighten: function (color, amount, method) {\n          var hsl = toHSL(color);\n          if (typeof method !== 'undefined' && method.value === 'relative') {\n              hsl.l += hsl.l * amount.value / 100;\n          }\n          else {\n              hsl.l += amount.value / 100;\n          }\n          hsl.l = clamp$1(hsl.l);\n          return hsla(color, hsl);\n      },\n      darken: function (color, amount, method) {\n          var hsl = toHSL(color);\n          if (typeof method !== 'undefined' && method.value === 'relative') {\n              hsl.l -= hsl.l * amount.value / 100;\n          }\n          else {\n              hsl.l -= amount.value / 100;\n          }\n          hsl.l = clamp$1(hsl.l);\n          return hsla(color, hsl);\n      },\n      fadein: function (color, amount, method) {\n          var hsl = toHSL(color);\n          if (typeof method !== 'undefined' && method.value === 'relative') {\n              hsl.a += hsl.a * amount.value / 100;\n          }\n          else {\n              hsl.a += amount.value / 100;\n          }\n          hsl.a = clamp$1(hsl.a);\n          return hsla(color, hsl);\n      },\n      fadeout: function (color, amount, method) {\n          var hsl = toHSL(color);\n          if (typeof method !== 'undefined' && method.value === 'relative') {\n              hsl.a -= hsl.a * amount.value / 100;\n          }\n          else {\n              hsl.a -= amount.value / 100;\n          }\n          hsl.a = clamp$1(hsl.a);\n          return hsla(color, hsl);\n      },\n      fade: function (color, amount) {\n          var hsl = toHSL(color);\n          hsl.a = amount.value / 100;\n          hsl.a = clamp$1(hsl.a);\n          return hsla(color, hsl);\n      },\n      spin: function (color, amount) {\n          var hsl = toHSL(color);\n          var hue = (hsl.h + amount.value) % 360;\n          hsl.h = hue < 0 ? 360 + hue : hue;\n          return hsla(color, hsl);\n      },\n      //\n      // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n      // http://sass-lang.com\n      //\n      mix: function (color1, color2, weight) {\n          if (!weight) {\n              weight = new Dimension(50);\n          }\n          var p = weight.value / 100.0;\n          var w = p * 2 - 1;\n          var a = toHSL(color1).a - toHSL(color2).a;\n          var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n          var w2 = 1 - w1;\n          var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n              color1.rgb[1] * w1 + color2.rgb[1] * w2,\n              color1.rgb[2] * w1 + color2.rgb[2] * w2];\n          var alpha = color1.alpha * p + color2.alpha * (1 - p);\n          return new Color(rgb, alpha);\n      },\n      greyscale: function (color) {\n          return colorFunctions.desaturate(color, new Dimension(100));\n      },\n      contrast: function (color, dark, light, threshold) {\n          // filter: contrast(3.2);\n          // should be kept as is, so check for color\n          if (!color.rgb) {\n              return null;\n          }\n          if (typeof light === 'undefined') {\n              light = colorFunctions.rgba(255, 255, 255, 1.0);\n          }\n          if (typeof dark === 'undefined') {\n              dark = colorFunctions.rgba(0, 0, 0, 1.0);\n          }\n          // Figure out which is actually light and dark:\n          if (dark.luma() > light.luma()) {\n              var t = light;\n              light = dark;\n              dark = t;\n          }\n          if (typeof threshold === 'undefined') {\n              threshold = 0.43;\n          }\n          else {\n              threshold = number(threshold);\n          }\n          if (color.luma() < threshold) {\n              return light;\n          }\n          else {\n              return dark;\n          }\n      },\n      // Changes made in 2.7.0 - Reverted in 3.0.0\n      // contrast: function (color, color1, color2, threshold) {\n      //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n      //     // according to the standard WCAG contrast ratio calculation.\n      //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      //     // The threshold param is no longer used, in line with SASS.\n      //     // filter: contrast(3.2);\n      //     // should be kept as is, so check for color\n      //     if (!color.rgb) {\n      //         return null;\n      //     }\n      //     if (typeof color1 === 'undefined') {\n      //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n      //     }\n      //     if (typeof color2 === 'undefined') {\n      //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n      //     }\n      //     var contrast1, contrast2;\n      //     var luma = color.luma();\n      //     var luma1 = color1.luma();\n      //     var luma2 = color2.luma();\n      //     // Calculate contrast ratios for each color\n      //     if (luma > luma1) {\n      //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n      //     } else {\n      //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n      //     }\n      //     if (luma > luma2) {\n      //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n      //     } else {\n      //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n      //     }\n      //     if (contrast1 > contrast2) {\n      //         return color1;\n      //     } else {\n      //         return color2;\n      //     }\n      // },\n      argb: function (color) {\n          return new Anonymous(color.toARGB());\n      },\n      color: function (c) {\n          if ((c instanceof Quoted) &&\n              (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\n              var val = c.value.slice(1);\n              return new Color(val, undefined, \"#\" + val);\n          }\n          if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n              c.value = undefined;\n              return c;\n          }\n          throw {\n              type: 'Argument',\n              message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n          };\n      },\n      tint: function (color, amount) {\n          return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n      },\n      shade: function (color, amount) {\n          return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n      }\n  };\n  var color = colorFunctions;\n\n  // Color Blending\n  // ref: http://www.w3.org/TR/compositing-1\n  function colorBlend(mode, color1, color2) {\n      var ab = color1.alpha; // result\n      var // backdrop\n      cb;\n      var as = color2.alpha;\n      var // source\n      cs;\n      var ar;\n      var cr;\n      var r = [];\n      ar = as + ab * (1 - as);\n      for (var i_1 = 0; i_1 < 3; i_1++) {\n          cb = color1.rgb[i_1] / 255;\n          cs = color2.rgb[i_1] / 255;\n          cr = mode(cb, cs);\n          if (ar) {\n              cr = (as * cs + ab * (cb -\n                  as * (cb + cs - cr))) / ar;\n          }\n          r[i_1] = cr * 255;\n      }\n      return new Color(r, ar);\n  }\n  var colorBlendModeFunctions = {\n      multiply: function (cb, cs) {\n          return cb * cs;\n      },\n      screen: function (cb, cs) {\n          return cb + cs - cb * cs;\n      },\n      overlay: function (cb, cs) {\n          cb *= 2;\n          return (cb <= 1) ?\n              colorBlendModeFunctions.multiply(cb, cs) :\n              colorBlendModeFunctions.screen(cb - 1, cs);\n      },\n      softlight: function (cb, cs) {\n          var d = 1;\n          var e = cb;\n          if (cs > 0.5) {\n              e = 1;\n              d = (cb > 0.25) ? Math.sqrt(cb)\n                  : ((16 * cb - 12) * cb + 4) * cb;\n          }\n          return cb - (1 - 2 * cs) * e * (d - cb);\n      },\n      hardlight: function (cb, cs) {\n          return colorBlendModeFunctions.overlay(cs, cb);\n      },\n      difference: function (cb, cs) {\n          return Math.abs(cb - cs);\n      },\n      exclusion: function (cb, cs) {\n          return cb + cs - 2 * cb * cs;\n      },\n      // non-w3c functions:\n      average: function (cb, cs) {\n          return (cb + cs) / 2;\n      },\n      negation: function (cb, cs) {\n          return 1 - Math.abs(cb + cs - 1);\n      }\n  };\n  for (var f in colorBlendModeFunctions) {\n      if (colorBlendModeFunctions.hasOwnProperty(f)) {\n          colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n      }\n  }\n\n  var dataUri = (function (environment) {\n      var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\n      return { 'data-uri': function (mimetypeNode, filePathNode) {\n              if (!filePathNode) {\n                  filePathNode = mimetypeNode;\n                  mimetypeNode = null;\n              }\n              var mimetype = mimetypeNode && mimetypeNode.value;\n              var filePath = filePathNode.value;\n              var currentFileInfo = this.currentFileInfo;\n              var currentDirectory = currentFileInfo.rewriteUrls ?\n                  currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n              var fragmentStart = filePath.indexOf('#');\n              var fragment = '';\n              if (fragmentStart !== -1) {\n                  fragment = filePath.slice(fragmentStart);\n                  filePath = filePath.slice(0, fragmentStart);\n              }\n              var context = clone(this.context);\n              context.rawBuffer = true;\n              var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n              if (!fileManager) {\n                  return fallback(this, filePathNode);\n              }\n              var useBase64 = false;\n              // detect the mimetype if not given\n              if (!mimetypeNode) {\n                  mimetype = environment.mimeLookup(filePath);\n                  if (mimetype === 'image/svg+xml') {\n                      useBase64 = false;\n                  }\n                  else {\n                      // use base 64 unless it's an ASCII or UTF-8 format\n                      var charset = environment.charsetLookup(mimetype);\n                      useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n                  }\n                  if (useBase64) {\n                      mimetype += ';base64';\n                  }\n              }\n              else {\n                  useBase64 = /;base64$/.test(mimetype);\n              }\n              var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n              if (!fileSync.contents) {\n                  logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n                  return fallback(this, filePathNode || mimetypeNode);\n              }\n              var buf = fileSync.contents;\n              if (useBase64 && !environment.encodeBase64) {\n                  return fallback(this, filePathNode);\n              }\n              buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n              var uri = \"data:\" + mimetype + \",\" + buf + fragment;\n              return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n          } };\n  });\n\n  var getItemsFromNode = function (node) {\n      // handle non-array values as an array of length 1\n      // return 'undefined' if index is invalid\n      var items = Array.isArray(node.value) ?\n          node.value : Array(node);\n      return items;\n  };\n  var list = {\n      _SELF: function (n) {\n          return n;\n      },\n      extract: function (values, index) {\n          // (1-based index)\n          index = index.value - 1;\n          return getItemsFromNode(values)[index];\n      },\n      length: function (values) {\n          return new Dimension(getItemsFromNode(values).length);\n      },\n      /**\n       * Creates a Less list of incremental values.\n       * Modeled after Lodash's range function, also exists natively in PHP\n       *\n       * @param {Dimension} [start=1]\n       * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n       * @param {Dimension} [step=1]\n       */\n      range: function (start, end, step) {\n          var from;\n          var to;\n          var stepValue = 1;\n          var list = [];\n          if (end) {\n              to = end;\n              from = start.value;\n              if (step) {\n                  stepValue = step.value;\n              }\n          }\n          else {\n              from = 1;\n              to = start;\n          }\n          for (var i_1 = from; i_1 <= to.value; i_1 += stepValue) {\n              list.push(new Dimension(i_1, to.unit));\n          }\n          return new Expression(list);\n      },\n      each: function (list, rs) {\n          var rules = [];\n          var newRules;\n          var iterator;\n          if (list.value && !(list instanceof Quoted)) {\n              if (Array.isArray(list.value)) {\n                  iterator = list.value;\n              }\n              else {\n                  iterator = [list.value];\n              }\n          }\n          else if (list.ruleset) {\n              iterator = list.ruleset.rules;\n          }\n          else if (list.rules) {\n              iterator = list.rules;\n          }\n          else if (Array.isArray(list)) {\n              iterator = list;\n          }\n          else {\n              iterator = [list];\n          }\n          var valueName = '@value';\n          var keyName = '@key';\n          var indexName = '@index';\n          if (rs.params) {\n              valueName = rs.params[0] && rs.params[0].name;\n              keyName = rs.params[1] && rs.params[1].name;\n              indexName = rs.params[2] && rs.params[2].name;\n              rs = rs.rules;\n          }\n          else {\n              rs = rs.ruleset;\n          }\n          for (var i_2 = 0; i_2 < iterator.length; i_2++) {\n              var key = void 0;\n              var value = void 0;\n              var item = iterator[i_2];\n              if (item instanceof Declaration) {\n                  key = typeof item.name === 'string' ? item.name : item.name[0].value;\n                  value = item.value;\n              }\n              else {\n                  key = new Dimension(i_2 + 1);\n                  value = item;\n              }\n              if (item instanceof Comment) {\n                  continue;\n              }\n              newRules = rs.rules.slice(0);\n              if (valueName) {\n                  newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\n              }\n              if (indexName) {\n                  newRules.push(new Declaration(indexName, new Dimension(i_2 + 1), false, false, this.index, this.currentFileInfo));\n              }\n              if (keyName) {\n                  newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\n              }\n              rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\n          }\n          return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\n      }\n  };\n\n  var MathHelper = function (fn, unit, n) {\n      if (!(n instanceof Dimension)) {\n          throw { type: 'Argument', message: 'argument must be a number' };\n      }\n      if (unit == null) {\n          unit = n.unit;\n      }\n      else {\n          n = n.unify();\n      }\n      return new Dimension(fn(parseFloat(n.value)), unit);\n  };\n\n  var mathFunctions = {\n      // name,  unit\n      ceil: null,\n      floor: null,\n      sqrt: null,\n      abs: null,\n      tan: '',\n      sin: '',\n      cos: '',\n      atan: 'rad',\n      asin: 'rad',\n      acos: 'rad'\n  };\n  for (var f$1 in mathFunctions) {\n      if (mathFunctions.hasOwnProperty(f$1)) {\n          mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\n      }\n  }\n  mathFunctions.round = function (n, f) {\n      var fraction = typeof f === 'undefined' ? 0 : f.value;\n      return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\n  };\n\n  var minMax = function (isMin, args) {\n      args = Array.prototype.slice.call(args);\n      switch (args.length) {\n          case 0: throw { type: 'Argument', message: 'one or more arguments required' };\n      }\n      var i; // key is the unit.toString() for unified Dimension values,\n      var j;\n      var current;\n      var currentUnified;\n      var referenceUnified;\n      var unit;\n      var unitStatic;\n      var unitClone;\n      var // elems only contains original argument values.\n      order = [];\n      var values = {};\n      // value is the index into the order array.\n      for (i = 0; i < args.length; i++) {\n          current = args[i];\n          if (!(current instanceof Dimension)) {\n              if (Array.isArray(args[i].value)) {\n                  Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n              }\n              continue;\n          }\n          currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n          unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n          unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n          unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n          j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n          if (j === undefined) {\n              if (unitStatic !== undefined && unit !== unitStatic) {\n                  throw { type: 'Argument', message: 'incompatible types' };\n              }\n              values[unit] = order.length;\n              order.push(current);\n              continue;\n          }\n          referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n          if (isMin && currentUnified.value < referenceUnified.value ||\n              !isMin && currentUnified.value > referenceUnified.value) {\n              order[j] = current;\n          }\n      }\n      if (order.length == 1) {\n          return order[0];\n      }\n      args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\n      return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\n  };\n  var number$1 = {\n      min: function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n          }\n          return minMax(true, args);\n      },\n      max: function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n          }\n          return minMax(false, args);\n      },\n      convert: function (val, unit) {\n          return val.convertTo(unit.value);\n      },\n      pi: function () {\n          return new Dimension(Math.PI);\n      },\n      mod: function (a, b) {\n          return new Dimension(a.value % b.value, a.unit);\n      },\n      pow: function (x, y) {\n          if (typeof x === 'number' && typeof y === 'number') {\n              x = new Dimension(x);\n              y = new Dimension(y);\n          }\n          else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n              throw { type: 'Argument', message: 'arguments must be numbers' };\n          }\n          return new Dimension(Math.pow(x.value, y.value), x.unit);\n      },\n      percentage: function (n) {\n          var result = MathHelper(function (num) { return num * 100; }, '%', n);\n          return result;\n      }\n  };\n\n  var string = {\n      e: function (str) {\n          return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n      },\n      escape: function (str) {\n          return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\n              .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n      },\n      replace: function (string, pattern, replacement, flags) {\n          var result = string.value;\n          replacement = (replacement.type === 'Quoted') ?\n              replacement.value : replacement.toCSS();\n          result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n          return new Quoted(string.quote || '', result, string.escaped);\n      },\n      '%': function (string /* arg, arg, ... */) {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var result = string.value;\n          var _loop_1 = function (i_1) {\n              /* jshint loopfunc:true */\n              result = result.replace(/%[sda]/i, function (token) {\n                  var value = ((args[i_1].type === 'Quoted') &&\n                      token.match(/s/i)) ? args[i_1].value : args[i_1].toCSS();\n                  return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n              });\n          };\n          for (var i_1 = 0; i_1 < args.length; i_1++) {\n              _loop_1(i_1);\n          }\n          result = result.replace(/%%/g, '%');\n          return new Quoted(string.quote || '', result, string.escaped);\n      }\n  };\n\n  var svg = (function (environment) {\n      return { 'svg-gradient': function (direction) {\n              var stops;\n              var gradientDirectionSvg;\n              var gradientType = 'linear';\n              var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n              var renderEnv = { compress: false };\n              var returner;\n              var directionValue = direction.toCSS(renderEnv);\n              var i;\n              var color;\n              var position;\n              var positionValue;\n              var alpha;\n              function throwArgumentDescriptor() {\n                  throw { type: 'Argument',\n                      message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\n                          ' end_color [end_position] or direction, color list' };\n              }\n              if (arguments.length == 2) {\n                  if (arguments[1].value.length < 2) {\n                      throwArgumentDescriptor();\n                  }\n                  stops = arguments[1].value;\n              }\n              else if (arguments.length < 3) {\n                  throwArgumentDescriptor();\n              }\n              else {\n                  stops = Array.prototype.slice.call(arguments, 1);\n              }\n              switch (directionValue) {\n                  case 'to bottom':\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                      break;\n                  case 'to right':\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                      break;\n                  case 'to bottom right':\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                      break;\n                  case 'to top right':\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                      break;\n                  case 'ellipse':\n                  case 'ellipse at center':\n                      gradientType = 'radial';\n                      gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                      rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                      break;\n                  default:\n                      throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\n                              ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\n              }\n              returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\n              for (i = 0; i < stops.length; i += 1) {\n                  if (stops[i] instanceof Expression) {\n                      color = stops[i].value[0];\n                      position = stops[i].value[1];\n                  }\n                  else {\n                      color = stops[i];\n                      position = undefined;\n                  }\n                  if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                      throwArgumentDescriptor();\n                  }\n                  positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n                  alpha = color.alpha;\n                  returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\n              }\n              returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\n              returner = encodeURIComponent(returner);\n              returner = \"data:image/svg+xml,\" + returner;\n              return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n          } };\n  });\n\n  var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\n  var isunit = function (n, unit) {\n      if (unit === undefined) {\n          throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\n      }\n      unit = typeof unit.value === 'string' ? unit.value : unit;\n      if (typeof unit !== 'string') {\n          throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\n      }\n      return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n  };\n  var types = {\n      isruleset: function (n) {\n          return isa(n, DetachedRuleset);\n      },\n      iscolor: function (n) {\n          return isa(n, Color);\n      },\n      isnumber: function (n) {\n          return isa(n, Dimension);\n      },\n      isstring: function (n) {\n          return isa(n, Quoted);\n      },\n      iskeyword: function (n) {\n          return isa(n, Keyword);\n      },\n      isurl: function (n) {\n          return isa(n, URL);\n      },\n      ispixel: function (n) {\n          return isunit(n, 'px');\n      },\n      ispercentage: function (n) {\n          return isunit(n, '%');\n      },\n      isem: function (n) {\n          return isunit(n, 'em');\n      },\n      isunit: isunit,\n      unit: function (val, unit) {\n          if (!(val instanceof Dimension)) {\n              throw { type: 'Argument',\n                  message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\n          }\n          if (unit) {\n              if (unit instanceof Keyword) {\n                  unit = unit.value;\n              }\n              else {\n                  unit = unit.toCSS();\n              }\n          }\n          else {\n              unit = '';\n          }\n          return new Dimension(val.value, unit);\n      },\n      'get-unit': function (n) {\n          return new Anonymous(n.unit);\n      }\n  };\n\n  var Functions = (function (environment) {\n      var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\n      // register functions\n      functionRegistry.addMultiple(boolean$1);\n      functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n      functionRegistry.addMultiple(color);\n      functionRegistry.addMultiple(colorBlend);\n      functionRegistry.addMultiple(dataUri(environment));\n      functionRegistry.addMultiple(list);\n      functionRegistry.addMultiple(mathFunctions);\n      functionRegistry.addMultiple(number$1);\n      functionRegistry.addMultiple(string);\n      functionRegistry.addMultiple(svg());\n      functionRegistry.addMultiple(types);\n      return functions;\n  });\n\n  var sourceMapOutput = (function (environment) {\n      var SourceMapOutput = /** @class */ (function () {\n          function SourceMapOutput(options) {\n              this._css = [];\n              this._rootNode = options.rootNode;\n              this._contentsMap = options.contentsMap;\n              this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n              if (options.sourceMapFilename) {\n                  this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n              }\n              this._outputFilename = options.outputFilename;\n              this.sourceMapURL = options.sourceMapURL;\n              if (options.sourceMapBasepath) {\n                  this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n              }\n              if (options.sourceMapRootpath) {\n                  this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n                  if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                      this._sourceMapRootpath += '/';\n                  }\n              }\n              else {\n                  this._sourceMapRootpath = '';\n              }\n              this._outputSourceFiles = options.outputSourceFiles;\n              this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n              this._lineNumber = 0;\n              this._column = 0;\n          }\n          SourceMapOutput.prototype.removeBasepath = function (path) {\n              if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n                  path = path.substring(this._sourceMapBasepath.length);\n                  if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                      path = path.substring(1);\n                  }\n              }\n              return path;\n          };\n          SourceMapOutput.prototype.normalizeFilename = function (filename) {\n              filename = filename.replace(/\\\\/g, '/');\n              filename = this.removeBasepath(filename);\n              return (this._sourceMapRootpath || '') + filename;\n          };\n          SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\n              // ignore adding empty strings\n              if (!chunk) {\n                  return;\n              }\n              var lines;\n              var sourceLines;\n              var columns;\n              var sourceColumns;\n              var i;\n              if (fileInfo && fileInfo.filename) {\n                  var inputSource = this._contentsMap[fileInfo.filename];\n                  // remove vars/banner added to the top of the file\n                  if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                      // adjust the index\n                      index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                      if (index < 0) {\n                          index = 0;\n                      }\n                      // adjust the source\n                      inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n                  }\n                  // ignore empty content\n                  if (inputSource === undefined) {\n                      return;\n                  }\n                  inputSource = inputSource.substring(0, index);\n                  sourceLines = inputSource.split('\\n');\n                  sourceColumns = sourceLines[sourceLines.length - 1];\n              }\n              lines = chunk.split('\\n');\n              columns = lines[lines.length - 1];\n              if (fileInfo && fileInfo.filename) {\n                  if (!mapLines) {\n                      this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\n                          original: { line: sourceLines.length, column: sourceColumns.length },\n                          source: this.normalizeFilename(fileInfo.filename) });\n                  }\n                  else {\n                      for (i = 0; i < lines.length; i++) {\n                          this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\n                              original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\n                              source: this.normalizeFilename(fileInfo.filename) });\n                      }\n                  }\n              }\n              if (lines.length === 1) {\n                  this._column += columns.length;\n              }\n              else {\n                  this._lineNumber += lines.length - 1;\n                  this._column = columns.length;\n              }\n              this._css.push(chunk);\n          };\n          SourceMapOutput.prototype.isEmpty = function () {\n              return this._css.length === 0;\n          };\n          SourceMapOutput.prototype.toCSS = function (context) {\n              this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n              if (this._outputSourceFiles) {\n                  for (var filename in this._contentsMap) {\n                      if (this._contentsMap.hasOwnProperty(filename)) {\n                          var source = this._contentsMap[filename];\n                          if (this._contentsIgnoredCharsMap[filename]) {\n                              source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                          }\n                          this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                      }\n                  }\n              }\n              this._rootNode.genCSS(context, this);\n              if (this._css.length > 0) {\n                  var sourceMapURL = void 0;\n                  var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n                  if (this.sourceMapURL) {\n                      sourceMapURL = this.sourceMapURL;\n                  }\n                  else if (this._sourceMapFilename) {\n                      sourceMapURL = this._sourceMapFilename;\n                  }\n                  this.sourceMapURL = sourceMapURL;\n                  this.sourceMap = sourceMapContent;\n              }\n              return this._css.join('');\n          };\n          return SourceMapOutput;\n      }());\n      return SourceMapOutput;\n  });\n\n  var sourceMapBuilder = (function (SourceMapOutput, environment) {\n      var SourceMapBuilder = /** @class */ (function () {\n          function SourceMapBuilder(options) {\n              this.options = options;\n          }\n          SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\n              var sourceMapOutput = new SourceMapOutput({\n                  contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                  rootNode: rootNode,\n                  contentsMap: imports.contents,\n                  sourceMapFilename: this.options.sourceMapFilename,\n                  sourceMapURL: this.options.sourceMapURL,\n                  outputFilename: this.options.sourceMapOutputFilename,\n                  sourceMapBasepath: this.options.sourceMapBasepath,\n                  sourceMapRootpath: this.options.sourceMapRootpath,\n                  outputSourceFiles: this.options.outputSourceFiles,\n                  sourceMapGenerator: this.options.sourceMapGenerator,\n                  sourceMapFileInline: this.options.sourceMapFileInline\n              });\n              var css = sourceMapOutput.toCSS(options);\n              this.sourceMap = sourceMapOutput.sourceMap;\n              this.sourceMapURL = sourceMapOutput.sourceMapURL;\n              if (this.options.sourceMapInputFilename) {\n                  this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n              }\n              if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n                  this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n              }\n              return css + this.getCSSAppendage();\n          };\n          SourceMapBuilder.prototype.getCSSAppendage = function () {\n              var sourceMapURL = this.sourceMapURL;\n              if (this.options.sourceMapFileInline) {\n                  if (this.sourceMap === undefined) {\n                      return '';\n                  }\n                  sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n              }\n              if (sourceMapURL) {\n                  return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n              }\n              return '';\n          };\n          SourceMapBuilder.prototype.getExternalSourceMap = function () {\n              return this.sourceMap;\n          };\n          SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\n              this.sourceMap = sourceMap;\n          };\n          SourceMapBuilder.prototype.isInline = function () {\n              return this.options.sourceMapFileInline;\n          };\n          SourceMapBuilder.prototype.getSourceMapURL = function () {\n              return this.sourceMapURL;\n          };\n          SourceMapBuilder.prototype.getOutputFilename = function () {\n              return this.options.sourceMapOutputFilename;\n          };\n          SourceMapBuilder.prototype.getInputFilename = function () {\n              return this.sourceMapInputFilename;\n          };\n          return SourceMapBuilder;\n      }());\n      return SourceMapBuilder;\n  });\n\n  var transformTree = (function (root, options) {\n      if (options === void 0) { options = {}; }\n      var evaldRoot;\n      var variables = options.variables;\n      var evalEnv = new contexts.Eval(options);\n      //\n      // Allows setting variables with a hash, so:\n      //\n      //   `{ color: new tree.Color('#f01') }` will become:\n      //\n      //   new tree.Declaration('@color',\n      //     new tree.Value([\n      //       new tree.Expression([\n      //         new tree.Color('#f01')\n      //       ])\n      //     ])\n      //   )\n      //\n      if (typeof variables === 'object' && !Array.isArray(variables)) {\n          variables = Object.keys(variables).map(function (k) {\n              var value = variables[k];\n              if (!(value instanceof tree.Value)) {\n                  if (!(value instanceof tree.Expression)) {\n                      value = new tree.Expression([value]);\n                  }\n                  value = new tree.Value([value]);\n              }\n              return new tree.Declaration(\"@\" + k, value, false, null, 0);\n          });\n          evalEnv.frames = [new tree.Ruleset(null, variables)];\n      }\n      var visitors$1 = [\n          new visitors.JoinSelectorVisitor(),\n          new visitors.MarkVisibleSelectorsVisitor(true),\n          new visitors.ExtendVisitor(),\n          new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\n      ];\n      var preEvalVisitors = [];\n      var v;\n      var visitorIterator;\n      /**\n       * first() / get() allows visitors to be added while visiting\n       *\n       * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n       */\n      if (options.pluginManager) {\n          visitorIterator = options.pluginManager.visitor();\n          for (var i = 0; i < 2; i++) {\n              visitorIterator.first();\n              while ((v = visitorIterator.get())) {\n                  if (v.isPreEvalVisitor) {\n                      if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n                          preEvalVisitors.push(v);\n                          v.run(root);\n                      }\n                  }\n                  else {\n                      if (i === 0 || visitors$1.indexOf(v) === -1) {\n                          if (v.isPreVisitor) {\n                              visitors$1.unshift(v);\n                          }\n                          else {\n                              visitors$1.push(v);\n                          }\n                      }\n                  }\n              }\n          }\n      }\n      evaldRoot = root.eval(evalEnv);\n      for (var i = 0; i < visitors$1.length; i++) {\n          visitors$1[i].run(evaldRoot);\n      }\n      // Run any remaining visitors added after eval pass\n      if (options.pluginManager) {\n          visitorIterator.first();\n          while ((v = visitorIterator.get())) {\n              if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n                  v.run(evaldRoot);\n              }\n          }\n      }\n      return evaldRoot;\n  });\n\n  var parseTree = (function (SourceMapBuilder) {\n      var ParseTree = /** @class */ (function () {\n          function ParseTree(root, imports) {\n              this.root = root;\n              this.imports = imports;\n          }\n          ParseTree.prototype.toCSS = function (options) {\n              var evaldRoot;\n              var result = {};\n              var sourceMapBuilder;\n              try {\n                  evaldRoot = transformTree(this.root, options);\n              }\n              catch (e) {\n                  throw new LessError(e, this.imports);\n              }\n              try {\n                  var compress = Boolean(options.compress);\n                  if (compress) {\n                      logger.warn('The compress option has been deprecated. ' +\n                          'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n                  }\n                  var toCSSOptions = {\n                      compress: compress,\n                      dumpLineNumbers: options.dumpLineNumbers,\n                      strictUnits: Boolean(options.strictUnits),\n                      numPrecision: 8\n                  };\n                  if (options.sourceMap) {\n                      sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                      result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n                  }\n                  else {\n                      result.css = evaldRoot.toCSS(toCSSOptions);\n                  }\n              }\n              catch (e) {\n                  throw new LessError(e, this.imports);\n              }\n              if (options.pluginManager) {\n                  var postProcessors = options.pluginManager.getPostProcessors();\n                  for (var i_1 = 0; i_1 < postProcessors.length; i_1++) {\n                      result.css = postProcessors[i_1].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\n                  }\n              }\n              if (options.sourceMap) {\n                  result.map = sourceMapBuilder.getExternalSourceMap();\n              }\n              result.imports = [];\n              for (var file_1 in this.imports.files) {\n                  if (this.imports.files.hasOwnProperty(file_1) && file_1 !== this.imports.rootFilename) {\n                      result.imports.push(file_1);\n                  }\n              }\n              return result;\n          };\n          return ParseTree;\n      }());\n      return ParseTree;\n  });\n\n  var importManager = (function (environment) {\n      // FileInfo = {\n      //  'rewriteUrls' - option - whether to adjust URL's to be relative\n      //  'filename' - full resolved filename of current file\n      //  'rootpath' - path to append to normal URLs for this node\n      //  'currentDirectory' - path to the current file, absolute\n      //  'rootFilename' - filename of the base file\n      //  'entryPath' - absolute path to the entry file\n      //  'reference' - whether the file should not be output and only output parts that are referenced\n      var ImportManager = /** @class */ (function () {\n          function ImportManager(less, context, rootFileInfo) {\n              this.less = less;\n              this.rootFilename = rootFileInfo.filename;\n              this.paths = context.paths || []; // Search paths, when importing\n              this.contents = {}; // map - filename to contents of all the files\n              this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n              this.mime = context.mime;\n              this.error = null;\n              this.context = context;\n              // Deprecated? Unused outside of here, could be useful.\n              this.queue = []; // Files which haven't been imported yet\n              this.files = {}; // Holds the imported parse trees.\n          }\n          /**\n           * Add an import to be imported\n           * @param path - the raw path\n           * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n           * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n           * @param importOptions - import options\n           * @param callback - callback for when it is imported\n           */\n          ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n              var importManager = this;\n              var pluginLoader = this.context.pluginManager.Loader;\n              this.queue.push(path);\n              var fileParsedFunc = function (e, root, fullPath) {\n                  importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n                  var importedEqualsRoot = fullPath === importManager.rootFilename;\n                  if (importOptions.optional && e) {\n                      callback(null, { rules: [] }, false, null);\n                      logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\n                  }\n                  else {\n                      // Inline imports aren't cached here.\n                      // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                      // same name as they used to do before this comment and the condition below have been added.\n                      if (!importManager.files[fullPath] && !importOptions.inline) {\n                          importManager.files[fullPath] = { root: root, options: importOptions };\n                      }\n                      if (e && !importManager.error) {\n                          importManager.error = e;\n                      }\n                      callback(e, root, importedEqualsRoot, fullPath);\n                  }\n              };\n              var newFileInfo = {\n                  rewriteUrls: this.context.rewriteUrls,\n                  entryPath: currentFileInfo.entryPath,\n                  rootpath: currentFileInfo.rootpath,\n                  rootFilename: currentFileInfo.rootFilename\n              };\n              var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n              if (!fileManager) {\n                  fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\n                  return;\n              }\n              var loadFileCallback = function (loadedFile) {\n                  var plugin;\n                  var resolvedFilename = loadedFile.filename;\n                  var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n                  // Pass on an updated rootpath if path of imported file is relative and file\n                  // is in a (sub|sup) directory\n                  //\n                  // Examples:\n                  // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n                  //   then rootpath should become 'less/module/nav/'\n                  // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n                  //   then rootpath should become 'less/../'\n                  newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n                  if (newFileInfo.rewriteUrls) {\n                      newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n                      if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                          newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                      }\n                  }\n                  newFileInfo.filename = resolvedFilename;\n                  var newEnv = new contexts.Parse(importManager.context);\n                  newEnv.processImports = false;\n                  importManager.contents[resolvedFilename] = contents;\n                  if (currentFileInfo.reference || importOptions.reference) {\n                      newFileInfo.reference = true;\n                  }\n                  if (importOptions.isPlugin) {\n                      plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                      if (plugin instanceof LessError) {\n                          fileParsedFunc(plugin, null, resolvedFilename);\n                      }\n                      else {\n                          fileParsedFunc(null, plugin, resolvedFilename);\n                      }\n                  }\n                  else if (importOptions.inline) {\n                      fileParsedFunc(null, contents, resolvedFilename);\n                  }\n                  else {\n                      // import (multiple) parse trees apparently get altered and can't be cached.\n                      // TODO: investigate why this is\n                      if (importManager.files[resolvedFilename]\n                          && !importManager.files[resolvedFilename].options.multiple\n                          && !importOptions.multiple) {\n                          fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                      }\n                      else {\n                          new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                              fileParsedFunc(e, root, resolvedFilename);\n                          });\n                      }\n                  }\n              };\n              var promise;\n              var context = clone(this.context);\n              if (tryAppendExtension) {\n                  context.ext = importOptions.isPlugin ? '.js' : '.less';\n              }\n              if (importOptions.isPlugin) {\n                  context.mime = 'application/javascript';\n                  promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n              }\n              else {\n                  promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\n                      if (err) {\n                          fileParsedFunc(err);\n                      }\n                      else {\n                          loadFileCallback(loadedFile);\n                      }\n                  });\n              }\n              if (promise) {\n                  promise.then(loadFileCallback, fileParsedFunc);\n              }\n          };\n          return ImportManager;\n      }());\n      return ImportManager;\n  });\n\n  var Render = (function (environment, ParseTree, ImportManager) {\n      var render = function (input, options, callback) {\n          if (typeof options === 'function') {\n              callback = options;\n              options = copyOptions(this.options, {});\n          }\n          else {\n              options = copyOptions(this.options, options || {});\n          }\n          if (!callback) {\n              var self_1 = this;\n              return new Promise(function (resolve, reject) {\n                  render.call(self_1, input, options, function (err, output) {\n                      if (err) {\n                          reject(err);\n                      }\n                      else {\n                          resolve(output);\n                      }\n                  });\n              });\n          }\n          else {\n              this.parse(input, options, function (err, root, imports, options) {\n                  if (err) {\n                      return callback(err);\n                  }\n                  var result;\n                  try {\n                      var parseTree = new ParseTree(root, imports);\n                      result = parseTree.toCSS(options);\n                  }\n                  catch (err) {\n                      return callback(err);\n                  }\n                  callback(null, result);\n              });\n          }\n      };\n      return render;\n  });\n\n  /**\n   * Plugin Manager\n   */\n  var PluginManager = /** @class */ (function () {\n      function PluginManager(less) {\n          this.less = less;\n          this.visitors = [];\n          this.preProcessors = [];\n          this.postProcessors = [];\n          this.installedPlugins = [];\n          this.fileManagers = [];\n          this.iterator = -1;\n          this.pluginCache = {};\n          this.Loader = new less.PluginLoader(less);\n      }\n      /**\n       * Adds all the plugins in the array\n       * @param {Array} plugins\n       */\n      PluginManager.prototype.addPlugins = function (plugins) {\n          if (plugins) {\n              for (var i_1 = 0; i_1 < plugins.length; i_1++) {\n                  this.addPlugin(plugins[i_1]);\n              }\n          }\n      };\n      /**\n       *\n       * @param plugin\n       * @param {String} filename\n       */\n      PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\n          this.installedPlugins.push(plugin);\n          if (filename) {\n              this.pluginCache[filename] = plugin;\n          }\n          if (plugin.install) {\n              plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n          }\n      };\n      /**\n       *\n       * @param filename\n       */\n      PluginManager.prototype.get = function (filename) {\n          return this.pluginCache[filename];\n      };\n      /**\n       * Adds a visitor. The visitor object has options on itself to determine\n       * when it should run.\n       * @param visitor\n       */\n      PluginManager.prototype.addVisitor = function (visitor) {\n          this.visitors.push(visitor);\n      };\n      /**\n       * Adds a pre processor object\n       * @param {object} preProcessor\n       * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n       */\n      PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\n          var indexToInsertAt;\n          for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n              if (this.preProcessors[indexToInsertAt].priority >= priority) {\n                  break;\n              }\n          }\n          this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\n      };\n      /**\n       * Adds a post processor object\n       * @param {object} postProcessor\n       * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n       */\n      PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\n          var indexToInsertAt;\n          for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n              if (this.postProcessors[indexToInsertAt].priority >= priority) {\n                  break;\n              }\n          }\n          this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\n      };\n      /**\n       *\n       * @param manager\n       */\n      PluginManager.prototype.addFileManager = function (manager) {\n          this.fileManagers.push(manager);\n      };\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n      PluginManager.prototype.getPreProcessors = function () {\n          var preProcessors = [];\n          for (var i_2 = 0; i_2 < this.preProcessors.length; i_2++) {\n              preProcessors.push(this.preProcessors[i_2].preProcessor);\n          }\n          return preProcessors;\n      };\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n      PluginManager.prototype.getPostProcessors = function () {\n          var postProcessors = [];\n          for (var i_3 = 0; i_3 < this.postProcessors.length; i_3++) {\n              postProcessors.push(this.postProcessors[i_3].postProcessor);\n          }\n          return postProcessors;\n      };\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n      PluginManager.prototype.getVisitors = function () {\n          return this.visitors;\n      };\n      PluginManager.prototype.visitor = function () {\n          var self = this;\n          return {\n              first: function () {\n                  self.iterator = -1;\n                  return self.visitors[self.iterator];\n              },\n              get: function () {\n                  self.iterator += 1;\n                  return self.visitors[self.iterator];\n              }\n          };\n      };\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n      PluginManager.prototype.getFileManagers = function () {\n          return this.fileManagers;\n      };\n      return PluginManager;\n  }());\n  var pm;\n  function PluginManagerFactory(less, newFactory) {\n      if (newFactory || !pm) {\n          pm = new PluginManager(less);\n      }\n      return pm;\n  }\n\n  var Parse = (function (environment, ParseTree, ImportManager) {\n      var parse = function (input, options, callback) {\n          if (typeof options === 'function') {\n              callback = options;\n              options = copyOptions(this.options, {});\n          }\n          else {\n              options = copyOptions(this.options, options || {});\n          }\n          if (!callback) {\n              var self_1 = this;\n              return new Promise(function (resolve, reject) {\n                  parse.call(self_1, input, options, function (err, output) {\n                      if (err) {\n                          reject(err);\n                      }\n                      else {\n                          resolve(output);\n                      }\n                  });\n              });\n          }\n          else {\n              var context_1;\n              var rootFileInfo = void 0;\n              var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\n              options.pluginManager = pluginManager_1;\n              context_1 = new contexts.Parse(options);\n              if (options.rootFileInfo) {\n                  rootFileInfo = options.rootFileInfo;\n              }\n              else {\n                  var filename = options.filename || 'input';\n                  var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n                  rootFileInfo = {\n                      filename: filename,\n                      rewriteUrls: context_1.rewriteUrls,\n                      rootpath: context_1.rootpath || '',\n                      currentDirectory: entryPath,\n                      entryPath: entryPath,\n                      rootFilename: filename\n                  };\n                  // add in a missing trailing slash\n                  if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n                      rootFileInfo.rootpath += '/';\n                  }\n              }\n              var imports_1 = new ImportManager(this, context_1, rootFileInfo);\n              this.importManager = imports_1;\n              // TODO: allow the plugins to be just a list of paths or names\n              // Do an async plugin queue like lessc\n              if (options.plugins) {\n                  options.plugins.forEach(function (plugin) {\n                      var evalResult;\n                      var contents;\n                      if (plugin.fileContent) {\n                          contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                          evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\n                          if (evalResult instanceof LessError) {\n                              return callback(evalResult);\n                          }\n                      }\n                      else {\n                          pluginManager_1.addPlugin(plugin);\n                      }\n                  });\n              }\n              new Parser(context_1, imports_1, rootFileInfo)\n                  .parse(input, function (e, root) {\n                  if (e) {\n                      return callback(e);\n                  }\n                  callback(null, root, imports_1, options);\n              }, options);\n          }\n      };\n      return parse;\n  });\n\n  var lessRoot = (function (environment$1, fileManagers) {\n      /**\n       * @todo\n       * This original code could be improved quite a bit.\n       * Many classes / modules currently add side-effects / mutations to passed in objects,\n       * which makes it hard to refactor and reason about.\n       */\n      environment$1 = new environment(environment$1, fileManagers);\n      var SourceMapOutput = sourceMapOutput(environment$1);\n      var SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment$1);\n      var ParseTree = parseTree(SourceMapBuilder);\n      var ImportManager = importManager(environment$1);\n      var render = Render(environment$1, ParseTree);\n      var parse = Parse(environment$1, ParseTree, ImportManager);\n      var functions = Functions(environment$1);\n      /**\n       * @todo\n       * This root properties / methods need to be organized.\n       * It's not clear what should / must be public and why.\n       */\n      var initial = {\n          version: [3, 11, 1],\n          data: data,\n          tree: tree,\n          Environment: environment,\n          AbstractFileManager: AbstractFileManager,\n          AbstractPluginLoader: AbstractPluginLoader,\n          environment: environment$1,\n          visitors: visitors,\n          Parser: Parser,\n          functions: functions,\n          contexts: contexts,\n          SourceMapOutput: SourceMapOutput,\n          SourceMapBuilder: SourceMapBuilder,\n          ParseTree: ParseTree,\n          ImportManager: ImportManager,\n          render: render,\n          parse: parse,\n          LessError: LessError,\n          transformTree: transformTree,\n          utils: utils,\n          PluginManager: PluginManagerFactory,\n          logger: logger\n      };\n      // Create a public API\n      var ctor = function (t) { return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n          }\n          return new (t.bind.apply(t, __spreadArrays([void 0], args)))();\n      }; };\n      var t;\n      var api = Object.create(initial);\n      for (var n in initial.tree) {\n          /* eslint guard-for-in: 0 */\n          t = initial.tree[n];\n          if (typeof t === 'function') {\n              api[n.toLowerCase()] = ctor(t);\n          }\n          else {\n              api[n] = Object.create(null);\n              for (var o in t) {\n                  /* eslint guard-for-in: 0 */\n                  api[n][o.toLowerCase()] = ctor(t[o]);\n              }\n          }\n      }\n      return api;\n  });\n\n  /* global window, XMLHttpRequest */\n  var options;\n  var logger$1;\n  var fileCache = {};\n  // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n  var FileManager = /** @class */ (function (_super) {\n      __extends(FileManager, _super);\n      function FileManager() {\n          return _super !== null && _super.apply(this, arguments) || this;\n      }\n      FileManager.prototype.alwaysMakePathsAbsolute = function () {\n          return true;\n      };\n      FileManager.prototype.join = function (basePath, laterPath) {\n          if (!basePath) {\n              return laterPath;\n          }\n          return this.extractUrlParts(laterPath, basePath).path;\n      };\n      FileManager.prototype.doXHR = function (url, type, callback, errback) {\n          var xhr = new XMLHttpRequest();\n          var async = options.isFileProtocol ? options.fileAsync : true;\n          if (typeof xhr.overrideMimeType === 'function') {\n              xhr.overrideMimeType('text/css');\n          }\n          logger$1.debug(\"XHR: Getting '\" + url + \"'\");\n          xhr.open('GET', url, async);\n          xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n          xhr.send(null);\n          function handleResponse(xhr, callback, errback) {\n              if (xhr.status >= 200 && xhr.status < 300) {\n                  callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\n              }\n              else if (typeof errback === 'function') {\n                  errback(xhr.status, url);\n              }\n          }\n          if (options.isFileProtocol && !options.fileAsync) {\n              if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\n                  callback(xhr.responseText);\n              }\n              else {\n                  errback(xhr.status, url);\n              }\n          }\n          else if (async) {\n              xhr.onreadystatechange = function () {\n                  if (xhr.readyState == 4) {\n                      handleResponse(xhr, callback, errback);\n                  }\n              };\n          }\n          else {\n              handleResponse(xhr, callback, errback);\n          }\n      };\n      FileManager.prototype.supports = function () {\n          return true;\n      };\n      FileManager.prototype.clearFileCache = function () {\n          fileCache = {};\n      };\n      FileManager.prototype.loadFile = function (filename, currentDirectory, options, environment) {\n          // TODO: Add prefix support like less-node?\n          // What about multiple paths?\n          if (currentDirectory && !this.isPathAbsolute(filename)) {\n              filename = currentDirectory + filename;\n          }\n          filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n          options = options || {};\n          // sheet may be set to the stylesheet for the initial load or a collection of properties including\n          // some context variables for imports\n          var hrefParts = this.extractUrlParts(filename, window.location.href);\n          var href = hrefParts.url;\n          var self = this;\n          return new Promise(function (resolve, reject) {\n              if (options.useFileCache && fileCache[href]) {\n                  try {\n                      var lessText_1 = fileCache[href];\n                      return resolve({ contents: lessText_1, filename: href, webInfo: { lastModified: new Date() } });\n                  }\n                  catch (e) {\n                      return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\n                  }\n              }\n              self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n                  // per file cache\n                  fileCache[href] = data;\n                  // Use remote copy (re-parse)\n                  resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\n              }, function doXHRError(status, url) {\n                  reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\n              });\n          });\n      };\n      return FileManager;\n  }(AbstractFileManager));\n  var FM = (function (opts, log) {\n      options = opts;\n      logger$1 = log;\n      return FileManager;\n  });\n\n  // TODO: Add tests for browser @plugin\n  /**\n   * Browser Plugin Loader\n   */\n  var PluginLoader = /** @class */ (function (_super) {\n      __extends(PluginLoader, _super);\n      function PluginLoader(less) {\n          var _this = _super.call(this) || this;\n          _this.less = less;\n          return _this;\n          // Should we shim this.require for browser? Probably not?\n      }\n      PluginLoader.prototype.loadPlugin = function (filename, basePath, context, environment, fileManager) {\n          return new Promise(function (fulfill, reject) {\n              fileManager.loadFile(filename, basePath, context, environment)\n                  .then(fulfill).catch(reject);\n          });\n      };\n      return PluginLoader;\n  }(AbstractPluginLoader));\n\n  var LogListener = (function (less, options) {\n      var logLevel_debug = 4;\n      var logLevel_info = 3;\n      var logLevel_warn = 2;\n      var logLevel_error = 1;\n      // The amount of logging in the javascript console.\n      // 3 - Debug, information and errors\n      // 2 - Information and errors\n      // 1 - Errors\n      // 0 - None\n      // Defaults to 2\n      options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\n      if (!options.loggers) {\n          options.loggers = [{\n                  debug: function (msg) {\n                      if (options.logLevel >= logLevel_debug) {\n                          console.log(msg);\n                      }\n                  },\n                  info: function (msg) {\n                      if (options.logLevel >= logLevel_info) {\n                          console.log(msg);\n                      }\n                  },\n                  warn: function (msg) {\n                      if (options.logLevel >= logLevel_warn) {\n                          console.warn(msg);\n                      }\n                  },\n                  error: function (msg) {\n                      if (options.logLevel >= logLevel_error) {\n                          console.error(msg);\n                      }\n                  }\n              }];\n      }\n      for (var i_1 = 0; i_1 < options.loggers.length; i_1++) {\n          less.logger.addListener(options.loggers[i_1]);\n      }\n  });\n\n  var ErrorReporting = (function (window, less, options) {\n      function errorHTML(e, rootHref) {\n          var id = \"less-error-message:\" + extractId(rootHref || '');\n          var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n          var elem = window.document.createElement('div');\n          var timer;\n          var content;\n          var errors = [];\n          var filename = e.filename || rootHref;\n          var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n          elem.id = id;\n          elem.className = 'less-error-message';\n          content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\n              (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\n          var errorline = function (e, i, classname) {\n              if (e.extract[i] !== undefined) {\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                      .replace(/\\{class\\}/, classname)\n                      .replace(/\\{content\\}/, e.extract[i]));\n              }\n          };\n          if (e.line) {\n              errorline(e, 0, '');\n              errorline(e, 1, 'line');\n              errorline(e, 2, '');\n              content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\n          }\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\n              content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\n          }\n          elem.innerHTML = content;\n          // CSS for error messages\n          browser.createCSS(window.document, [\n              '.less-error-message ul, .less-error-message li {',\n              'list-style-type: none;',\n              'margin-right: 15px;',\n              'padding: 4px 0;',\n              'margin: 0;',\n              '}',\n              '.less-error-message label {',\n              'font-size: 12px;',\n              'margin-right: 15px;',\n              'padding: 4px 0;',\n              'color: #cc7777;',\n              '}',\n              '.less-error-message pre {',\n              'color: #dd6666;',\n              'padding: 4px 0;',\n              'margin: 0;',\n              'display: inline-block;',\n              '}',\n              '.less-error-message pre.line {',\n              'color: #ff0000;',\n              '}',\n              '.less-error-message h3 {',\n              'font-size: 20px;',\n              'font-weight: bold;',\n              'padding: 15px 0 5px 0;',\n              'margin: 0;',\n              '}',\n              '.less-error-message a {',\n              'color: #10a',\n              '}',\n              '.less-error-message .error {',\n              'color: red;',\n              'font-weight: bold;',\n              'padding-bottom: 2px;',\n              'border-bottom: 1px dashed red;',\n              '}'\n          ].join('\\n'), { title: 'error-message' });\n          elem.style.cssText = [\n              'font-family: Arial, sans-serif',\n              'border: 1px solid #e00',\n              'background-color: #eee',\n              'border-radius: 5px',\n              '-webkit-border-radius: 5px',\n              '-moz-border-radius: 5px',\n              'color: #e00',\n              'padding: 15px',\n              'margin-bottom: 15px'\n          ].join(';');\n          if (options.env === 'development') {\n              timer = setInterval(function () {\n                  var document = window.document;\n                  var body = document.body;\n                  if (body) {\n                      if (document.getElementById(id)) {\n                          body.replaceChild(elem, document.getElementById(id));\n                      }\n                      else {\n                          body.insertBefore(elem, body.firstChild);\n                      }\n                      clearInterval(timer);\n                  }\n              }, 10);\n          }\n      }\n      function removeErrorHTML(path) {\n          var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\n          if (node) {\n              node.parentNode.removeChild(node);\n          }\n      }\n      function removeError(path) {\n          if (!options.errorReporting || options.errorReporting === 'html') {\n              removeErrorHTML(path);\n          }\n          else if (options.errorReporting === 'console') ;\n          else if (typeof options.errorReporting === 'function') {\n              options.errorReporting('remove', path);\n          }\n      }\n      function errorConsole(e, rootHref) {\n          var template = '{line} {content}';\n          var filename = e.filename || rootHref;\n          var errors = [];\n          var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\n          var errorline = function (e, i, classname) {\n              if (e.extract[i] !== undefined) {\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                      .replace(/\\{class\\}/, classname)\n                      .replace(/\\{content\\}/, e.extract[i]));\n              }\n          };\n          if (e.line) {\n              errorline(e, 0, '');\n              errorline(e, 1, 'line');\n              errorline(e, 2, '');\n              content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\n          }\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\n              content += \"\\nStack Trace\\n\" + e.stack;\n          }\n          less.logger.error(content);\n      }\n      function error(e, rootHref) {\n          if (!options.errorReporting || options.errorReporting === 'html') {\n              errorHTML(e, rootHref);\n          }\n          else if (options.errorReporting === 'console') {\n              errorConsole(e, rootHref);\n          }\n          else if (typeof options.errorReporting === 'function') {\n              options.errorReporting('add', e, rootHref);\n          }\n      }\n      return {\n          add: error,\n          remove: removeError\n      };\n  });\n\n  // Cache system is a bit outdated and could do with work\n  var Cache = (function (window, options, logger) {\n      var cache = null;\n      if (options.env !== 'development') {\n          try {\n              cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\n          }\n          catch (_) { }\n      }\n      return {\n          setCSS: function (path, lastModified, modifyVars, styles) {\n              if (cache) {\n                  logger.info(\"saving \" + path + \" to cache.\");\n                  try {\n                      cache.setItem(path, styles);\n                      cache.setItem(path + \":timestamp\", lastModified);\n                      if (modifyVars) {\n                          cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\n                      }\n                  }\n                  catch (e) {\n                      // TODO - could do with adding more robust error handling\n                      logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\n                  }\n              }\n          },\n          getCSS: function (path, webInfo, modifyVars) {\n              var css = cache && cache.getItem(path);\n              var timestamp = cache && cache.getItem(path + \":timestamp\");\n              var vars = cache && cache.getItem(path + \":vars\");\n              modifyVars = modifyVars || {};\n              vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n              if (timestamp && webInfo.lastModified &&\n                  (new Date(webInfo.lastModified).valueOf() ===\n                      new Date(timestamp).valueOf()) &&\n                  JSON.stringify(modifyVars) === vars) {\n                  // Use local copy\n                  return css;\n              }\n          }\n      };\n  });\n\n  var ImageSize = (function () {\n      function imageSize() {\n          throw {\n              type: 'Runtime',\n              message: 'Image size functions are not supported in browser version of less'\n          };\n      }\n      var imageFunctions = {\n          'image-size': function (filePathNode) {\n              imageSize();\n              return -1;\n          },\n          'image-width': function (filePathNode) {\n              imageSize();\n              return -1;\n          },\n          'image-height': function (filePathNode) {\n              imageSize();\n              return -1;\n          }\n      };\n      functionRegistry.addMultiple(imageFunctions);\n  });\n\n  //\n  var root = (function (window, options) {\n      var document = window.document;\n      var less = lessRoot();\n      less.options = options;\n      var environment = less.environment;\n      var FileManager = FM(options, less.logger);\n      var fileManager = new FileManager();\n      environment.addFileManager(fileManager);\n      less.FileManager = FileManager;\n      less.PluginLoader = PluginLoader;\n      LogListener(less, options);\n      var errors = ErrorReporting(window, less, options);\n      var cache = less.cache = options.cache || Cache(window, options, less.logger);\n      ImageSize(less.environment);\n      // Setup user functions - Deprecate?\n      if (options.functions) {\n          less.functions.functionRegistry.addMultiple(options.functions);\n      }\n      var typePattern = /^text\\/(x-)?less$/;\n      function clone(obj) {\n          var cloned = {};\n          for (var prop in obj) {\n              if (obj.hasOwnProperty(prop)) {\n                  cloned[prop] = obj[prop];\n              }\n          }\n          return cloned;\n      }\n      // only really needed for phantom\n      function bind(func, thisArg) {\n          var curryArgs = Array.prototype.slice.call(arguments, 2);\n          return function () {\n              var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n              return func.apply(thisArg, args);\n          };\n      }\n      function loadStyles(modifyVars) {\n          var styles = document.getElementsByTagName('style');\n          var style;\n          for (var i_1 = 0; i_1 < styles.length; i_1++) {\n              style = styles[i_1];\n              if (style.type.match(typePattern)) {\n                  var instanceOptions = clone(options);\n                  instanceOptions.modifyVars = modifyVars;\n                  var lessText_1 = style.innerHTML || '';\n                  instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n                  /* jshint loopfunc:true */\n                  // use closure to store current style\n                  less.render(lessText_1, instanceOptions, bind(function (style, e, result) {\n                      if (e) {\n                          errors.add(e, 'inline');\n                      }\n                      else {\n                          style.type = 'text/css';\n                          if (style.styleSheet) {\n                              style.styleSheet.cssText = result.css;\n                          }\n                          else {\n                              style.innerHTML = result.css;\n                          }\n                      }\n                  }, null, style));\n              }\n          }\n      }\n      function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n          var instanceOptions = clone(options);\n          addDataAttr(instanceOptions, sheet);\n          instanceOptions.mime = sheet.type;\n          if (modifyVars) {\n              instanceOptions.modifyVars = modifyVars;\n          }\n          function loadInitialFileCallback(loadedFile) {\n              var data = loadedFile.contents;\n              var path = loadedFile.filename;\n              var webInfo = loadedFile.webInfo;\n              var newFileInfo = {\n                  currentDirectory: fileManager.getPath(path),\n                  filename: path,\n                  rootFilename: path,\n                  rewriteUrls: instanceOptions.rewriteUrls\n              };\n              newFileInfo.entryPath = newFileInfo.currentDirectory;\n              newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n              if (webInfo) {\n                  webInfo.remaining = remaining;\n                  var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                  if (!reload && css) {\n                      webInfo.local = true;\n                      callback(null, css, data, sheet, webInfo, path);\n                      return;\n                  }\n              }\n              // TODO add tests around how this behaves when reloading\n              errors.remove(path);\n              instanceOptions.rootFileInfo = newFileInfo;\n              less.render(data, instanceOptions, function (e, result) {\n                  if (e) {\n                      e.href = path;\n                      callback(e);\n                  }\n                  else {\n                      cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                      callback(null, result.css, data, sheet, webInfo, path);\n                  }\n              });\n          }\n          fileManager.loadFile(sheet.href, null, instanceOptions, environment)\n              .then(function (loadedFile) {\n              loadInitialFileCallback(loadedFile);\n          }).catch(function (err) {\n              console.log(err);\n              callback(err);\n          });\n      }\n      function loadStyleSheets(callback, reload, modifyVars) {\n          for (var i_2 = 0; i_2 < less.sheets.length; i_2++) {\n              loadStyleSheet(less.sheets[i_2], callback, reload, less.sheets.length - (i_2 + 1), modifyVars);\n          }\n      }\n      function initRunningMode() {\n          if (less.env === 'development') {\n              less.watchTimer = setInterval(function () {\n                  if (less.watchMode) {\n                      fileManager.clearFileCache();\n                      loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                          if (e) {\n                              errors.add(e, e.href || sheet.href);\n                          }\n                          else if (css) {\n                              browser.createCSS(window.document, css, sheet);\n                          }\n                      });\n                  }\n              }, options.poll);\n          }\n      }\n      //\n      // Watch mode\n      //\n      less.watch = function () {\n          if (!less.watchMode) {\n              less.env = 'development';\n              initRunningMode();\n          }\n          this.watchMode = true;\n          return true;\n      };\n      less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\n      //\n      // Synchronously get all <link> tags with the 'rel' attribute set to\n      // \"stylesheet/less\".\n      //\n      less.registerStylesheetsImmediately = function () {\n          var links = document.getElementsByTagName('link');\n          less.sheets = [];\n          for (var i_3 = 0; i_3 < links.length; i_3++) {\n              if (links[i_3].rel === 'stylesheet/less' || (links[i_3].rel.match(/stylesheet/) &&\n                  (links[i_3].type.match(typePattern)))) {\n                  less.sheets.push(links[i_3]);\n              }\n          }\n      };\n      //\n      // Asynchronously get all <link> tags with the 'rel' attribute set to\n      // \"stylesheet/less\", returning a Promise.\n      //\n      less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\n          less.registerStylesheetsImmediately();\n          resolve();\n      }); };\n      //\n      // With this function, it's possible to alter variables and re-render\n      // CSS without reloading less-files\n      //\n      less.modifyVars = function (record) { return less.refresh(true, record, false); };\n      less.refresh = function (reload, modifyVars, clearFileCache) {\n          if ((reload || clearFileCache) && clearFileCache !== false) {\n              fileManager.clearFileCache();\n          }\n          return new Promise(function (resolve, reject) {\n              var startTime;\n              var endTime;\n              var totalMilliseconds;\n              var remainingSheets;\n              startTime = endTime = new Date();\n              // Set counter for remaining unprocessed sheets\n              remainingSheets = less.sheets.length;\n              if (remainingSheets === 0) {\n                  endTime = new Date();\n                  totalMilliseconds = endTime - startTime;\n                  less.logger.info('Less has finished and no sheets were loaded.');\n                  resolve({\n                      startTime: startTime,\n                      endTime: endTime,\n                      totalMilliseconds: totalMilliseconds,\n                      sheets: less.sheets.length\n                  });\n              }\n              else {\n                  // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n                  loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                      if (e) {\n                          errors.add(e, e.href || sheet.href);\n                          reject(e);\n                          return;\n                      }\n                      if (webInfo.local) {\n                          less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\n                      }\n                      else {\n                          less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\n                      }\n                      browser.createCSS(window.document, css, sheet);\n                      less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\n                      // Count completed sheet\n                      remainingSheets--;\n                      // Check if the last remaining sheet was processed and then call the promise\n                      if (remainingSheets === 0) {\n                          totalMilliseconds = new Date() - startTime;\n                          less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\n                          resolve({\n                              startTime: startTime,\n                              endTime: endTime,\n                              totalMilliseconds: totalMilliseconds,\n                              sheets: less.sheets.length\n                          });\n                      }\n                      endTime = new Date();\n                  }, reload, modifyVars);\n              }\n              loadStyles(modifyVars);\n          });\n      };\n      less.refreshStyles = loadStyles;\n      return less;\n  });\n\n  /**\n   * Kicks off less and compiles any stylesheets\n   * used in the browser distributed version of less\n   * to kick-start less using the browser api\n   */\n  var options$1 = defaultOptions();\n  if (window.less) {\n      for (var key in window.less) {\n          if (window.less.hasOwnProperty(key)) {\n              options$1[key] = window.less[key];\n          }\n      }\n  }\n  addDefaultOptions(window, options$1);\n  options$1.plugins = options$1.plugins || [];\n  if (window.LESS_PLUGINS) {\n      options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\n  }\n  var less = root(window, options$1);\n  window.less = less;\n  var css;\n  var head;\n  var style;\n  // Always restore page visibility\n  function resolveOrReject(data) {\n      if (data.filename) {\n          console.warn(data);\n      }\n      if (!options$1.async) {\n          head.removeChild(style);\n      }\n  }\n  if (options$1.onReady) {\n      if (/!watch/.test(window.location.hash)) {\n          less.watch();\n      }\n      // Simulate synchronous stylesheet loading by hiding page rendering\n      if (!options$1.async) {\n          css = 'body { display: none !important }';\n          head = document.head || document.getElementsByTagName('head')[0];\n          style = document.createElement('style');\n          style.type = 'text/css';\n          if (style.styleSheet) {\n              style.styleSheet.cssText = css;\n          }\n          else {\n              style.appendChild(document.createTextNode(css));\n          }\n          head.appendChild(style);\n      }\n      less.registerStylesheetsImmediately();\n      less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n  }\n\n  return less;\n\n})));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}